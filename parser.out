Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    FALSE
    LSQUAREB
    RSQUAREB
    TRUE

Grammar

Rule 0     S' -> main
Rule 1     main -> INT MAIN LPAREN RPAREN scope
Rule 2     scope -> LBRAKETS multiple_statements RBRAKETS
Rule 3     scope -> LBRAKETS expression RBRAKETS
Rule 4     expression -> expression PLUS expression
Rule 5     expression -> expression MINUS expression
Rule 6     expression -> expression TIMES expression
Rule 7     expression -> expression DIVIDE expression
Rule 8     expression -> LPAREN expression RPAREN
Rule 9     expression -> term
Rule 10    term -> instance
Rule 11    term -> factor
Rule 12    instance -> type ID
Rule 13    instance -> ID
Rule 14    factor -> NUMBER
Rule 15    type -> INT
Rule 16    type -> FLOAT
Rule 17    type -> STRING
Rule 18    adress -> instance ADRESS factor SEMICOLON
Rule 19    adress -> instance ADRESS LITSTRING SEMICOLON
Rule 20    adress -> instance ADRESS expression SEMICOLON
Rule 21    return -> RETURN expression SEMICOLON
Rule 22    return -> RETURN SEMICOLON
Rule 23    condition -> expression OR expression
Rule 24    condition -> expression NOT expression
Rule 25    condition -> expression AND expression
Rule 26    condition -> expression EQUAL expression
Rule 27    condition -> condition OR condition
Rule 28    condition -> condition NOT condition
Rule 29    condition -> condition AND condition
Rule 30    condition -> expression NOTEQUAL expression
Rule 31    condition -> expression GREATER expression
Rule 32    condition -> expression LESS expression
Rule 33    condition -> expression GREATEREQUAL expression
Rule 34    condition -> expression LESSEQUAL expression
Rule 35    condition -> LPAREN condition RPAREN
Rule 36    condition -> NOT condition
Rule 37    multiple_statements -> multiple_statements statement
Rule 38    multiple_statements -> statement
Rule 39    statement -> expression SEMICOLON
Rule 40    statement -> if
Rule 41    statement -> else
Rule 42    statement -> for
Rule 43    statement -> while
Rule 44    statement -> print
Rule 45    statement -> adress
Rule 46    statement -> return
Rule 47    param -> param COMMA param
Rule 48    param -> term
Rule 49    if -> IF LPAREN condition RPAREN scope
Rule 50    if -> if elseif
Rule 51    if -> if else
Rule 52    elseif -> ELSEIF LPAREN condition RPAREN scope
Rule 53    elseif -> elseif elseif
Rule 54    elseif -> elseif else
Rule 55    else -> ELSE scope
Rule 56    print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON
Rule 57    print -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 58    print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON
Rule 59    for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
Rule 60    for_initilizer -> adress
Rule 61    while -> WHILE LPAREN condition RPAREN scope

Terminals, with rules where they appear

ADRESS               : 18 19 20
AND                  : 25 29
BOOL                 : 
COMMA                : 47 58
DIVIDE               : 7
ELSE                 : 55
ELSEIF               : 52
EQUAL                : 26
FALSE                : 
FLOAT                : 16
FOR                  : 59
GREATER              : 31
GREATEREQUAL         : 33
ID                   : 12 13
IF                   : 49
INT                  : 1 15
LBRAKETS             : 2 3
LESS                 : 32
LESSEQUAL            : 34
LITSTRING            : 19 56 58
LPAREN               : 1 8 35 49 52 56 57 58 59 61
LSQUAREB             : 
MAIN                 : 1
MINUS                : 5
NOT                  : 24 28 36
NOTEQUAL             : 30
NUMBER               : 14
OR                   : 23 27
PLUS                 : 4
PRINT                : 56 57 58
RBRAKETS             : 2 3
RETURN               : 21 22
RPAREN               : 1 8 35 49 52 56 57 58 59 61
RSQUAREB             : 
SEMICOLON            : 18 19 20 21 22 39 56 57 58 59 59
STRING               : 17
TIMES                : 6
TRUE                 : 
WHILE                : 61
error                : 

Nonterminals, with rules where they appear

adress               : 45 60
condition            : 27 27 28 28 29 29 35 36 49 52 59 61
else                 : 41 51 54
elseif               : 50 53 53 54
expression           : 3 4 4 5 5 6 6 7 7 8 20 21 23 23 24 24 25 25 26 26 30 30 31 31 32 32 33 33 34 34 39 57 59
factor               : 11 18
for                  : 42
for_initilizer       : 59
if                   : 40 50 51
instance             : 10 18 19 20
main                 : 0
multiple_statements  : 2 37
param                : 47 47 58
print                : 44
return               : 46
scope                : 1 49 52 55 59 61
statement            : 37 38
term                 : 9 48
type                 : 12
while                : 43

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . INT MAIN LPAREN RPAREN scope

    INT             shift and go to state 2

    main                           shift and go to state 1

state 1

    (0) S' -> main .



state 2

    (1) main -> INT . MAIN LPAREN RPAREN scope

    MAIN            shift and go to state 3


state 3

    (1) main -> INT MAIN . LPAREN RPAREN scope

    LPAREN          shift and go to state 4


state 4

    (1) main -> INT MAIN LPAREN . RPAREN scope

    RPAREN          shift and go to state 5


state 5

    (1) main -> INT MAIN LPAREN RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 6

state 6

    (1) main -> INT MAIN LPAREN RPAREN scope .

    $end            reduce using rule 1 (main -> INT MAIN LPAREN RPAREN scope .)


state 7

    (2) scope -> LBRAKETS . multiple_statements RBRAKETS
    (3) scope -> LBRAKETS . expression RBRAKETS
    (37) multiple_statements -> . multiple_statements statement
    (38) multiple_statements -> . statement
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (39) statement -> . expression SEMICOLON
    (40) statement -> . if
    (41) statement -> . else
    (42) statement -> . for
    (43) statement -> . while
    (44) statement -> . print
    (45) statement -> . adress
    (46) statement -> . return
    (10) term -> . instance
    (11) term -> . factor
    (49) if -> . IF LPAREN condition RPAREN scope
    (50) if -> . if elseif
    (51) if -> . if else
    (55) else -> . ELSE scope
    (59) for -> . FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
    (61) while -> . WHILE LPAREN condition RPAREN scope
    (56) print -> . PRINT LPAREN LITSTRING RPAREN SEMICOLON
    (57) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (58) print -> . PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON
    (18) adress -> . instance ADRESS factor SEMICOLON
    (19) adress -> . instance ADRESS LITSTRING SEMICOLON
    (20) adress -> . instance ADRESS expression SEMICOLON
    (21) return -> . RETURN expression SEMICOLON
    (22) return -> . RETURN SEMICOLON
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    IF              shift and go to state 22
    ELSE            shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    PRINT           shift and go to state 26
    RETURN          shift and go to state 27
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    multiple_statements            shift and go to state 8
    expression                     shift and go to state 9
    statement                      shift and go to state 10
    term                           shift and go to state 12
    if                             shift and go to state 13
    else                           shift and go to state 14
    for                            shift and go to state 15
    while                          shift and go to state 16
    print                          shift and go to state 17
    adress                         shift and go to state 18
    return                         shift and go to state 19
    instance                       shift and go to state 20
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 8

    (2) scope -> LBRAKETS multiple_statements . RBRAKETS
    (37) multiple_statements -> multiple_statements . statement
    (39) statement -> . expression SEMICOLON
    (40) statement -> . if
    (41) statement -> . else
    (42) statement -> . for
    (43) statement -> . while
    (44) statement -> . print
    (45) statement -> . adress
    (46) statement -> . return
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (49) if -> . IF LPAREN condition RPAREN scope
    (50) if -> . if elseif
    (51) if -> . if else
    (55) else -> . ELSE scope
    (59) for -> . FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
    (61) while -> . WHILE LPAREN condition RPAREN scope
    (56) print -> . PRINT LPAREN LITSTRING RPAREN SEMICOLON
    (57) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (58) print -> . PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON
    (18) adress -> . instance ADRESS factor SEMICOLON
    (19) adress -> . instance ADRESS LITSTRING SEMICOLON
    (20) adress -> . instance ADRESS expression SEMICOLON
    (21) return -> . RETURN expression SEMICOLON
    (22) return -> . RETURN SEMICOLON
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    RBRAKETS        shift and go to state 34
    LPAREN          shift and go to state 11
    IF              shift and go to state 22
    ELSE            shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    PRINT           shift and go to state 26
    RETURN          shift and go to state 27
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    statement                      shift and go to state 35
    expression                     shift and go to state 36
    if                             shift and go to state 13
    else                           shift and go to state 14
    for                            shift and go to state 15
    while                          shift and go to state 16
    print                          shift and go to state 17
    adress                         shift and go to state 18
    return                         shift and go to state 19
    term                           shift and go to state 12
    instance                       shift and go to state 37
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 9

    (3) scope -> LBRAKETS expression . RBRAKETS
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (39) statement -> expression . SEMICOLON

    RBRAKETS        shift and go to state 38
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    SEMICOLON       shift and go to state 43


state 10

    (38) multiple_statements -> statement .

    RBRAKETS        reduce using rule 38 (multiple_statements -> statement .)
    LPAREN          reduce using rule 38 (multiple_statements -> statement .)
    IF              reduce using rule 38 (multiple_statements -> statement .)
    ELSE            reduce using rule 38 (multiple_statements -> statement .)
    FOR             reduce using rule 38 (multiple_statements -> statement .)
    WHILE           reduce using rule 38 (multiple_statements -> statement .)
    PRINT           reduce using rule 38 (multiple_statements -> statement .)
    RETURN          reduce using rule 38 (multiple_statements -> statement .)
    ID              reduce using rule 38 (multiple_statements -> statement .)
    NUMBER          reduce using rule 38 (multiple_statements -> statement .)
    INT             reduce using rule 38 (multiple_statements -> statement .)
    FLOAT           reduce using rule 38 (multiple_statements -> statement .)
    STRING          reduce using rule 38 (multiple_statements -> statement .)


state 11

    (8) expression -> LPAREN . expression RPAREN
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 44
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 12

    (9) expression -> term .

    RBRAKETS        reduce using rule 9 (expression -> term .)
    PLUS            reduce using rule 9 (expression -> term .)
    MINUS           reduce using rule 9 (expression -> term .)
    TIMES           reduce using rule 9 (expression -> term .)
    DIVIDE          reduce using rule 9 (expression -> term .)
    SEMICOLON       reduce using rule 9 (expression -> term .)
    RPAREN          reduce using rule 9 (expression -> term .)
    OR              reduce using rule 9 (expression -> term .)
    NOT             reduce using rule 9 (expression -> term .)
    AND             reduce using rule 9 (expression -> term .)
    EQUAL           reduce using rule 9 (expression -> term .)
    NOTEQUAL        reduce using rule 9 (expression -> term .)
    GREATER         reduce using rule 9 (expression -> term .)
    LESS            reduce using rule 9 (expression -> term .)
    GREATEREQUAL    reduce using rule 9 (expression -> term .)
    LESSEQUAL       reduce using rule 9 (expression -> term .)


state 13

    (40) statement -> if .
    (50) if -> if . elseif
    (51) if -> if . else
    (52) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (53) elseif -> . elseif elseif
    (54) elseif -> . elseif else
    (55) else -> . ELSE scope

  ! shift/reduce conflict for ELSE resolved as shift
    RBRAKETS        reduce using rule 40 (statement -> if .)
    LPAREN          reduce using rule 40 (statement -> if .)
    IF              reduce using rule 40 (statement -> if .)
    FOR             reduce using rule 40 (statement -> if .)
    WHILE           reduce using rule 40 (statement -> if .)
    PRINT           reduce using rule 40 (statement -> if .)
    RETURN          reduce using rule 40 (statement -> if .)
    ID              reduce using rule 40 (statement -> if .)
    NUMBER          reduce using rule 40 (statement -> if .)
    INT             reduce using rule 40 (statement -> if .)
    FLOAT           reduce using rule 40 (statement -> if .)
    STRING          reduce using rule 40 (statement -> if .)
    ELSEIF          shift and go to state 48
    ELSE            shift and go to state 23

  ! ELSE            [ reduce using rule 40 (statement -> if .) ]

    elseif                         shift and go to state 46
    else                           shift and go to state 47

state 14

    (41) statement -> else .

    RBRAKETS        reduce using rule 41 (statement -> else .)
    LPAREN          reduce using rule 41 (statement -> else .)
    IF              reduce using rule 41 (statement -> else .)
    ELSE            reduce using rule 41 (statement -> else .)
    FOR             reduce using rule 41 (statement -> else .)
    WHILE           reduce using rule 41 (statement -> else .)
    PRINT           reduce using rule 41 (statement -> else .)
    RETURN          reduce using rule 41 (statement -> else .)
    ID              reduce using rule 41 (statement -> else .)
    NUMBER          reduce using rule 41 (statement -> else .)
    INT             reduce using rule 41 (statement -> else .)
    FLOAT           reduce using rule 41 (statement -> else .)
    STRING          reduce using rule 41 (statement -> else .)


state 15

    (42) statement -> for .

    RBRAKETS        reduce using rule 42 (statement -> for .)
    LPAREN          reduce using rule 42 (statement -> for .)
    IF              reduce using rule 42 (statement -> for .)
    ELSE            reduce using rule 42 (statement -> for .)
    FOR             reduce using rule 42 (statement -> for .)
    WHILE           reduce using rule 42 (statement -> for .)
    PRINT           reduce using rule 42 (statement -> for .)
    RETURN          reduce using rule 42 (statement -> for .)
    ID              reduce using rule 42 (statement -> for .)
    NUMBER          reduce using rule 42 (statement -> for .)
    INT             reduce using rule 42 (statement -> for .)
    FLOAT           reduce using rule 42 (statement -> for .)
    STRING          reduce using rule 42 (statement -> for .)


state 16

    (43) statement -> while .

    RBRAKETS        reduce using rule 43 (statement -> while .)
    LPAREN          reduce using rule 43 (statement -> while .)
    IF              reduce using rule 43 (statement -> while .)
    ELSE            reduce using rule 43 (statement -> while .)
    FOR             reduce using rule 43 (statement -> while .)
    WHILE           reduce using rule 43 (statement -> while .)
    PRINT           reduce using rule 43 (statement -> while .)
    RETURN          reduce using rule 43 (statement -> while .)
    ID              reduce using rule 43 (statement -> while .)
    NUMBER          reduce using rule 43 (statement -> while .)
    INT             reduce using rule 43 (statement -> while .)
    FLOAT           reduce using rule 43 (statement -> while .)
    STRING          reduce using rule 43 (statement -> while .)


state 17

    (44) statement -> print .

    RBRAKETS        reduce using rule 44 (statement -> print .)
    LPAREN          reduce using rule 44 (statement -> print .)
    IF              reduce using rule 44 (statement -> print .)
    ELSE            reduce using rule 44 (statement -> print .)
    FOR             reduce using rule 44 (statement -> print .)
    WHILE           reduce using rule 44 (statement -> print .)
    PRINT           reduce using rule 44 (statement -> print .)
    RETURN          reduce using rule 44 (statement -> print .)
    ID              reduce using rule 44 (statement -> print .)
    NUMBER          reduce using rule 44 (statement -> print .)
    INT             reduce using rule 44 (statement -> print .)
    FLOAT           reduce using rule 44 (statement -> print .)
    STRING          reduce using rule 44 (statement -> print .)


state 18

    (45) statement -> adress .

    RBRAKETS        reduce using rule 45 (statement -> adress .)
    LPAREN          reduce using rule 45 (statement -> adress .)
    IF              reduce using rule 45 (statement -> adress .)
    ELSE            reduce using rule 45 (statement -> adress .)
    FOR             reduce using rule 45 (statement -> adress .)
    WHILE           reduce using rule 45 (statement -> adress .)
    PRINT           reduce using rule 45 (statement -> adress .)
    RETURN          reduce using rule 45 (statement -> adress .)
    ID              reduce using rule 45 (statement -> adress .)
    NUMBER          reduce using rule 45 (statement -> adress .)
    INT             reduce using rule 45 (statement -> adress .)
    FLOAT           reduce using rule 45 (statement -> adress .)
    STRING          reduce using rule 45 (statement -> adress .)


state 19

    (46) statement -> return .

    RBRAKETS        reduce using rule 46 (statement -> return .)
    LPAREN          reduce using rule 46 (statement -> return .)
    IF              reduce using rule 46 (statement -> return .)
    ELSE            reduce using rule 46 (statement -> return .)
    FOR             reduce using rule 46 (statement -> return .)
    WHILE           reduce using rule 46 (statement -> return .)
    PRINT           reduce using rule 46 (statement -> return .)
    RETURN          reduce using rule 46 (statement -> return .)
    ID              reduce using rule 46 (statement -> return .)
    NUMBER          reduce using rule 46 (statement -> return .)
    INT             reduce using rule 46 (statement -> return .)
    FLOAT           reduce using rule 46 (statement -> return .)
    STRING          reduce using rule 46 (statement -> return .)


state 20

    (10) term -> instance .
    (18) adress -> instance . ADRESS factor SEMICOLON
    (19) adress -> instance . ADRESS LITSTRING SEMICOLON
    (20) adress -> instance . ADRESS expression SEMICOLON

    RBRAKETS        reduce using rule 10 (term -> instance .)
    PLUS            reduce using rule 10 (term -> instance .)
    MINUS           reduce using rule 10 (term -> instance .)
    TIMES           reduce using rule 10 (term -> instance .)
    DIVIDE          reduce using rule 10 (term -> instance .)
    SEMICOLON       reduce using rule 10 (term -> instance .)
    ADRESS          shift and go to state 49


state 21

    (11) term -> factor .

    RBRAKETS        reduce using rule 11 (term -> factor .)
    PLUS            reduce using rule 11 (term -> factor .)
    MINUS           reduce using rule 11 (term -> factor .)
    TIMES           reduce using rule 11 (term -> factor .)
    DIVIDE          reduce using rule 11 (term -> factor .)
    SEMICOLON       reduce using rule 11 (term -> factor .)
    RPAREN          reduce using rule 11 (term -> factor .)
    OR              reduce using rule 11 (term -> factor .)
    NOT             reduce using rule 11 (term -> factor .)
    AND             reduce using rule 11 (term -> factor .)
    EQUAL           reduce using rule 11 (term -> factor .)
    NOTEQUAL        reduce using rule 11 (term -> factor .)
    GREATER         reduce using rule 11 (term -> factor .)
    LESS            reduce using rule 11 (term -> factor .)
    GREATEREQUAL    reduce using rule 11 (term -> factor .)
    LESSEQUAL       reduce using rule 11 (term -> factor .)
    COMMA           reduce using rule 11 (term -> factor .)


state 22

    (49) if -> IF . LPAREN condition RPAREN scope

    LPAREN          shift and go to state 50


state 23

    (55) else -> ELSE . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 51

state 24

    (59) for -> FOR . LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope

    LPAREN          shift and go to state 52


state 25

    (61) while -> WHILE . LPAREN condition RPAREN scope

    LPAREN          shift and go to state 53


state 26

    (56) print -> PRINT . LPAREN LITSTRING RPAREN SEMICOLON
    (57) print -> PRINT . LPAREN expression RPAREN SEMICOLON
    (58) print -> PRINT . LPAREN LITSTRING COMMA param RPAREN SEMICOLON

    LPAREN          shift and go to state 54


state 27

    (21) return -> RETURN . expression SEMICOLON
    (22) return -> RETURN . SEMICOLON
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    SEMICOLON       shift and go to state 56
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 55
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 28

    (12) instance -> type . ID

    ID              shift and go to state 57


state 29

    (13) instance -> ID .

    ADRESS          reduce using rule 13 (instance -> ID .)
    RBRAKETS        reduce using rule 13 (instance -> ID .)
    PLUS            reduce using rule 13 (instance -> ID .)
    MINUS           reduce using rule 13 (instance -> ID .)
    TIMES           reduce using rule 13 (instance -> ID .)
    DIVIDE          reduce using rule 13 (instance -> ID .)
    SEMICOLON       reduce using rule 13 (instance -> ID .)
    RPAREN          reduce using rule 13 (instance -> ID .)
    OR              reduce using rule 13 (instance -> ID .)
    NOT             reduce using rule 13 (instance -> ID .)
    AND             reduce using rule 13 (instance -> ID .)
    EQUAL           reduce using rule 13 (instance -> ID .)
    NOTEQUAL        reduce using rule 13 (instance -> ID .)
    GREATER         reduce using rule 13 (instance -> ID .)
    LESS            reduce using rule 13 (instance -> ID .)
    GREATEREQUAL    reduce using rule 13 (instance -> ID .)
    LESSEQUAL       reduce using rule 13 (instance -> ID .)
    COMMA           reduce using rule 13 (instance -> ID .)


state 30

    (14) factor -> NUMBER .

    RBRAKETS        reduce using rule 14 (factor -> NUMBER .)
    PLUS            reduce using rule 14 (factor -> NUMBER .)
    MINUS           reduce using rule 14 (factor -> NUMBER .)
    TIMES           reduce using rule 14 (factor -> NUMBER .)
    DIVIDE          reduce using rule 14 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 14 (factor -> NUMBER .)
    RPAREN          reduce using rule 14 (factor -> NUMBER .)
    OR              reduce using rule 14 (factor -> NUMBER .)
    NOT             reduce using rule 14 (factor -> NUMBER .)
    AND             reduce using rule 14 (factor -> NUMBER .)
    EQUAL           reduce using rule 14 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 14 (factor -> NUMBER .)
    GREATER         reduce using rule 14 (factor -> NUMBER .)
    LESS            reduce using rule 14 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 14 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 14 (factor -> NUMBER .)
    COMMA           reduce using rule 14 (factor -> NUMBER .)


state 31

    (15) type -> INT .

    ID              reduce using rule 15 (type -> INT .)


state 32

    (16) type -> FLOAT .

    ID              reduce using rule 16 (type -> FLOAT .)


state 33

    (17) type -> STRING .

    ID              reduce using rule 17 (type -> STRING .)


state 34

    (2) scope -> LBRAKETS multiple_statements RBRAKETS .

    $end            reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    RBRAKETS        reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    LPAREN          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    IF              reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    ELSE            reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    FOR             reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    WHILE           reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    PRINT           reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    RETURN          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    ID              reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    NUMBER          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    INT             reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    FLOAT           reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    STRING          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    ELSEIF          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)


state 35

    (37) multiple_statements -> multiple_statements statement .

    RBRAKETS        reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    LPAREN          reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    IF              reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    ELSE            reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    FOR             reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    WHILE           reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    PRINT           reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    RETURN          reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    ID              reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    NUMBER          reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    INT             reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    FLOAT           reduce using rule 37 (multiple_statements -> multiple_statements statement .)
    STRING          reduce using rule 37 (multiple_statements -> multiple_statements statement .)


state 36

    (39) statement -> expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 43
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 37

    (18) adress -> instance . ADRESS factor SEMICOLON
    (19) adress -> instance . ADRESS LITSTRING SEMICOLON
    (20) adress -> instance . ADRESS expression SEMICOLON
    (10) term -> instance .

    ADRESS          shift and go to state 49
    SEMICOLON       reduce using rule 10 (term -> instance .)
    PLUS            reduce using rule 10 (term -> instance .)
    MINUS           reduce using rule 10 (term -> instance .)
    TIMES           reduce using rule 10 (term -> instance .)
    DIVIDE          reduce using rule 10 (term -> instance .)


state 38

    (3) scope -> LBRAKETS expression RBRAKETS .

    $end            reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    RBRAKETS        reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    LPAREN          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    IF              reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    ELSE            reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    FOR             reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    WHILE           reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    PRINT           reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    RETURN          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    ID              reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    NUMBER          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    INT             reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    FLOAT           reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    STRING          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    ELSEIF          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)


state 39

    (4) expression -> expression PLUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 58
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 40

    (5) expression -> expression MINUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 59
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 41

    (6) expression -> expression TIMES . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 60
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 42

    (7) expression -> expression DIVIDE . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 61
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 43

    (39) statement -> expression SEMICOLON .

    RBRAKETS        reduce using rule 39 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 39 (statement -> expression SEMICOLON .)
    IF              reduce using rule 39 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 39 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 39 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 39 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 39 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 39 (statement -> expression SEMICOLON .)
    ID              reduce using rule 39 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 39 (statement -> expression SEMICOLON .)
    INT             reduce using rule 39 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 39 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 39 (statement -> expression SEMICOLON .)


state 44

    (8) expression -> LPAREN expression . RPAREN
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 45

    (10) term -> instance .

    RPAREN          reduce using rule 10 (term -> instance .)
    PLUS            reduce using rule 10 (term -> instance .)
    MINUS           reduce using rule 10 (term -> instance .)
    TIMES           reduce using rule 10 (term -> instance .)
    DIVIDE          reduce using rule 10 (term -> instance .)
    SEMICOLON       reduce using rule 10 (term -> instance .)
    RBRAKETS        reduce using rule 10 (term -> instance .)
    OR              reduce using rule 10 (term -> instance .)
    NOT             reduce using rule 10 (term -> instance .)
    AND             reduce using rule 10 (term -> instance .)
    EQUAL           reduce using rule 10 (term -> instance .)
    NOTEQUAL        reduce using rule 10 (term -> instance .)
    GREATER         reduce using rule 10 (term -> instance .)
    LESS            reduce using rule 10 (term -> instance .)
    GREATEREQUAL    reduce using rule 10 (term -> instance .)
    LESSEQUAL       reduce using rule 10 (term -> instance .)
    COMMA           reduce using rule 10 (term -> instance .)


state 46

    (50) if -> if elseif .
    (53) elseif -> elseif . elseif
    (54) elseif -> elseif . else
    (52) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (53) elseif -> . elseif elseif
    (54) elseif -> . elseif else
    (55) else -> . ELSE scope

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    RBRAKETS        reduce using rule 50 (if -> if elseif .)
    LPAREN          reduce using rule 50 (if -> if elseif .)
    IF              reduce using rule 50 (if -> if elseif .)
    FOR             reduce using rule 50 (if -> if elseif .)
    WHILE           reduce using rule 50 (if -> if elseif .)
    PRINT           reduce using rule 50 (if -> if elseif .)
    RETURN          reduce using rule 50 (if -> if elseif .)
    ID              reduce using rule 50 (if -> if elseif .)
    NUMBER          reduce using rule 50 (if -> if elseif .)
    INT             reduce using rule 50 (if -> if elseif .)
    FLOAT           reduce using rule 50 (if -> if elseif .)
    STRING          reduce using rule 50 (if -> if elseif .)
    ELSEIF          shift and go to state 48
    ELSE            shift and go to state 23

  ! ELSEIF          [ reduce using rule 50 (if -> if elseif .) ]
  ! ELSE            [ reduce using rule 50 (if -> if elseif .) ]

    elseif                         shift and go to state 63
    else                           shift and go to state 64

state 47

    (51) if -> if else .

    ELSEIF          reduce using rule 51 (if -> if else .)
    ELSE            reduce using rule 51 (if -> if else .)
    RBRAKETS        reduce using rule 51 (if -> if else .)
    LPAREN          reduce using rule 51 (if -> if else .)
    IF              reduce using rule 51 (if -> if else .)
    FOR             reduce using rule 51 (if -> if else .)
    WHILE           reduce using rule 51 (if -> if else .)
    PRINT           reduce using rule 51 (if -> if else .)
    RETURN          reduce using rule 51 (if -> if else .)
    ID              reduce using rule 51 (if -> if else .)
    NUMBER          reduce using rule 51 (if -> if else .)
    INT             reduce using rule 51 (if -> if else .)
    FLOAT           reduce using rule 51 (if -> if else .)
    STRING          reduce using rule 51 (if -> if else .)


state 48

    (52) elseif -> ELSEIF . LPAREN condition RPAREN scope

    LPAREN          shift and go to state 65


state 49

    (18) adress -> instance ADRESS . factor SEMICOLON
    (19) adress -> instance ADRESS . LITSTRING SEMICOLON
    (20) adress -> instance ADRESS . expression SEMICOLON
    (14) factor -> . NUMBER
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LITSTRING       shift and go to state 67
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    instance                       shift and go to state 45
    factor                         shift and go to state 66
    expression                     shift and go to state 68
    term                           shift and go to state 12
    type                           shift and go to state 28

state 50

    (49) if -> IF LPAREN . condition RPAREN scope
    (23) condition -> . expression OR expression
    (24) condition -> . expression NOT expression
    (25) condition -> . expression AND expression
    (26) condition -> . expression EQUAL expression
    (27) condition -> . condition OR condition
    (28) condition -> . condition NOT condition
    (29) condition -> . condition AND condition
    (30) condition -> . expression NOTEQUAL expression
    (31) condition -> . expression GREATER expression
    (32) condition -> . expression LESS expression
    (33) condition -> . expression GREATEREQUAL expression
    (34) condition -> . expression LESSEQUAL expression
    (35) condition -> . LPAREN condition RPAREN
    (36) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 69
    NOT             shift and go to state 72
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    condition                      shift and go to state 70
    expression                     shift and go to state 71
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 51

    (55) else -> ELSE scope .

    RBRAKETS        reduce using rule 55 (else -> ELSE scope .)
    LPAREN          reduce using rule 55 (else -> ELSE scope .)
    IF              reduce using rule 55 (else -> ELSE scope .)
    ELSE            reduce using rule 55 (else -> ELSE scope .)
    FOR             reduce using rule 55 (else -> ELSE scope .)
    WHILE           reduce using rule 55 (else -> ELSE scope .)
    PRINT           reduce using rule 55 (else -> ELSE scope .)
    RETURN          reduce using rule 55 (else -> ELSE scope .)
    ID              reduce using rule 55 (else -> ELSE scope .)
    NUMBER          reduce using rule 55 (else -> ELSE scope .)
    INT             reduce using rule 55 (else -> ELSE scope .)
    FLOAT           reduce using rule 55 (else -> ELSE scope .)
    STRING          reduce using rule 55 (else -> ELSE scope .)
    ELSEIF          reduce using rule 55 (else -> ELSE scope .)


state 52

    (59) for -> FOR LPAREN . for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
    (60) for_initilizer -> . adress
    (18) adress -> . instance ADRESS factor SEMICOLON
    (19) adress -> . instance ADRESS LITSTRING SEMICOLON
    (20) adress -> . instance ADRESS expression SEMICOLON
    (12) instance -> . type ID
    (13) instance -> . ID
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    ID              shift and go to state 29
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    for_initilizer                 shift and go to state 73
    adress                         shift and go to state 74
    instance                       shift and go to state 75
    type                           shift and go to state 28

state 53

    (61) while -> WHILE LPAREN . condition RPAREN scope
    (23) condition -> . expression OR expression
    (24) condition -> . expression NOT expression
    (25) condition -> . expression AND expression
    (26) condition -> . expression EQUAL expression
    (27) condition -> . condition OR condition
    (28) condition -> . condition NOT condition
    (29) condition -> . condition AND condition
    (30) condition -> . expression NOTEQUAL expression
    (31) condition -> . expression GREATER expression
    (32) condition -> . expression LESS expression
    (33) condition -> . expression GREATEREQUAL expression
    (34) condition -> . expression LESSEQUAL expression
    (35) condition -> . LPAREN condition RPAREN
    (36) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 69
    NOT             shift and go to state 72
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    condition                      shift and go to state 76
    expression                     shift and go to state 71
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 54

    (56) print -> PRINT LPAREN . LITSTRING RPAREN SEMICOLON
    (57) print -> PRINT LPAREN . expression RPAREN SEMICOLON
    (58) print -> PRINT LPAREN . LITSTRING COMMA param RPAREN SEMICOLON
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LITSTRING       shift and go to state 77
    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 78
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 55

    (21) return -> RETURN expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 79
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 56

    (22) return -> RETURN SEMICOLON .

    RBRAKETS        reduce using rule 22 (return -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 22 (return -> RETURN SEMICOLON .)
    IF              reduce using rule 22 (return -> RETURN SEMICOLON .)
    ELSE            reduce using rule 22 (return -> RETURN SEMICOLON .)
    FOR             reduce using rule 22 (return -> RETURN SEMICOLON .)
    WHILE           reduce using rule 22 (return -> RETURN SEMICOLON .)
    PRINT           reduce using rule 22 (return -> RETURN SEMICOLON .)
    RETURN          reduce using rule 22 (return -> RETURN SEMICOLON .)
    ID              reduce using rule 22 (return -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 22 (return -> RETURN SEMICOLON .)
    INT             reduce using rule 22 (return -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 22 (return -> RETURN SEMICOLON .)
    STRING          reduce using rule 22 (return -> RETURN SEMICOLON .)


state 57

    (12) instance -> type ID .

    ADRESS          reduce using rule 12 (instance -> type ID .)
    RBRAKETS        reduce using rule 12 (instance -> type ID .)
    PLUS            reduce using rule 12 (instance -> type ID .)
    MINUS           reduce using rule 12 (instance -> type ID .)
    TIMES           reduce using rule 12 (instance -> type ID .)
    DIVIDE          reduce using rule 12 (instance -> type ID .)
    SEMICOLON       reduce using rule 12 (instance -> type ID .)
    RPAREN          reduce using rule 12 (instance -> type ID .)
    OR              reduce using rule 12 (instance -> type ID .)
    NOT             reduce using rule 12 (instance -> type ID .)
    AND             reduce using rule 12 (instance -> type ID .)
    EQUAL           reduce using rule 12 (instance -> type ID .)
    NOTEQUAL        reduce using rule 12 (instance -> type ID .)
    GREATER         reduce using rule 12 (instance -> type ID .)
    LESS            reduce using rule 12 (instance -> type ID .)
    GREATEREQUAL    reduce using rule 12 (instance -> type ID .)
    LESSEQUAL       reduce using rule 12 (instance -> type ID .)
    COMMA           reduce using rule 12 (instance -> type ID .)


state 58

    (4) expression -> expression PLUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 4 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 4 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 4 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 4 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression PLUS expression .)
    OR              reduce using rule 4 (expression -> expression PLUS expression .)
    NOT             reduce using rule 4 (expression -> expression PLUS expression .)
    AND             reduce using rule 4 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 4 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 4 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 4 (expression -> expression PLUS expression .)
    LESS            reduce using rule 4 (expression -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 4 (expression -> expression PLUS expression .)
    LESSEQUAL       reduce using rule 4 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! TIMES           [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]


state 59

    (5) expression -> expression MINUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 5 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 5 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 5 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 5 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 5 (expression -> expression MINUS expression .)
    OR              reduce using rule 5 (expression -> expression MINUS expression .)
    NOT             reduce using rule 5 (expression -> expression MINUS expression .)
    AND             reduce using rule 5 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 5 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 5 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 5 (expression -> expression MINUS expression .)
    LESS            reduce using rule 5 (expression -> expression MINUS expression .)
    GREATEREQUAL    reduce using rule 5 (expression -> expression MINUS expression .)
    LESSEQUAL       reduce using rule 5 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42

  ! TIMES           [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]


state 60

    (6) expression -> expression TIMES expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 6 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 6 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 6 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 6 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 6 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 6 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 6 (expression -> expression TIMES expression .)
    OR              reduce using rule 6 (expression -> expression TIMES expression .)
    NOT             reduce using rule 6 (expression -> expression TIMES expression .)
    AND             reduce using rule 6 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 6 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 6 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 6 (expression -> expression TIMES expression .)
    LESS            reduce using rule 6 (expression -> expression TIMES expression .)
    GREATEREQUAL    reduce using rule 6 (expression -> expression TIMES expression .)
    LESSEQUAL       reduce using rule 6 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]


state 61

    (7) expression -> expression DIVIDE expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 7 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 7 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 7 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 7 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 7 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 7 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 7 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 7 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 7 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 7 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 7 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 7 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 7 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 7 (expression -> expression DIVIDE expression .)
    GREATEREQUAL    reduce using rule 7 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 7 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! TIMES           [ shift and go to state 41 ]
  ! DIVIDE          [ shift and go to state 42 ]


state 62

    (8) expression -> LPAREN expression RPAREN .

    RBRAKETS        reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 8 (expression -> LPAREN expression RPAREN .)


state 63

    (53) elseif -> elseif elseif .
    (53) elseif -> elseif . elseif
    (54) elseif -> elseif . else
    (52) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (53) elseif -> . elseif elseif
    (54) elseif -> . elseif else
    (55) else -> . ELSE scope

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    RBRAKETS        reduce using rule 53 (elseif -> elseif elseif .)
    LPAREN          reduce using rule 53 (elseif -> elseif elseif .)
    IF              reduce using rule 53 (elseif -> elseif elseif .)
    FOR             reduce using rule 53 (elseif -> elseif elseif .)
    WHILE           reduce using rule 53 (elseif -> elseif elseif .)
    PRINT           reduce using rule 53 (elseif -> elseif elseif .)
    RETURN          reduce using rule 53 (elseif -> elseif elseif .)
    ID              reduce using rule 53 (elseif -> elseif elseif .)
    NUMBER          reduce using rule 53 (elseif -> elseif elseif .)
    INT             reduce using rule 53 (elseif -> elseif elseif .)
    FLOAT           reduce using rule 53 (elseif -> elseif elseif .)
    STRING          reduce using rule 53 (elseif -> elseif elseif .)
    ELSEIF          shift and go to state 48
    ELSE            shift and go to state 23

  ! ELSEIF          [ reduce using rule 53 (elseif -> elseif elseif .) ]
  ! ELSE            [ reduce using rule 53 (elseif -> elseif elseif .) ]

    elseif                         shift and go to state 63
    else                           shift and go to state 64

state 64

    (54) elseif -> elseif else .

    ELSEIF          reduce using rule 54 (elseif -> elseif else .)
    ELSE            reduce using rule 54 (elseif -> elseif else .)
    RBRAKETS        reduce using rule 54 (elseif -> elseif else .)
    LPAREN          reduce using rule 54 (elseif -> elseif else .)
    IF              reduce using rule 54 (elseif -> elseif else .)
    FOR             reduce using rule 54 (elseif -> elseif else .)
    WHILE           reduce using rule 54 (elseif -> elseif else .)
    PRINT           reduce using rule 54 (elseif -> elseif else .)
    RETURN          reduce using rule 54 (elseif -> elseif else .)
    ID              reduce using rule 54 (elseif -> elseif else .)
    NUMBER          reduce using rule 54 (elseif -> elseif else .)
    INT             reduce using rule 54 (elseif -> elseif else .)
    FLOAT           reduce using rule 54 (elseif -> elseif else .)
    STRING          reduce using rule 54 (elseif -> elseif else .)


state 65

    (52) elseif -> ELSEIF LPAREN . condition RPAREN scope
    (23) condition -> . expression OR expression
    (24) condition -> . expression NOT expression
    (25) condition -> . expression AND expression
    (26) condition -> . expression EQUAL expression
    (27) condition -> . condition OR condition
    (28) condition -> . condition NOT condition
    (29) condition -> . condition AND condition
    (30) condition -> . expression NOTEQUAL expression
    (31) condition -> . expression GREATER expression
    (32) condition -> . expression LESS expression
    (33) condition -> . expression GREATEREQUAL expression
    (34) condition -> . expression LESSEQUAL expression
    (35) condition -> . LPAREN condition RPAREN
    (36) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 69
    NOT             shift and go to state 72
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    condition                      shift and go to state 80
    expression                     shift and go to state 71
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 66

    (18) adress -> instance ADRESS factor . SEMICOLON
    (11) term -> factor .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 81
    PLUS            reduce using rule 11 (term -> factor .)
    MINUS           reduce using rule 11 (term -> factor .)
    TIMES           reduce using rule 11 (term -> factor .)
    DIVIDE          reduce using rule 11 (term -> factor .)

  ! SEMICOLON       [ reduce using rule 11 (term -> factor .) ]


state 67

    (19) adress -> instance ADRESS LITSTRING . SEMICOLON

    SEMICOLON       shift and go to state 82


state 68

    (20) adress -> instance ADRESS expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 83
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 69

    (35) condition -> LPAREN . condition RPAREN
    (8) expression -> LPAREN . expression RPAREN
    (23) condition -> . expression OR expression
    (24) condition -> . expression NOT expression
    (25) condition -> . expression AND expression
    (26) condition -> . expression EQUAL expression
    (27) condition -> . condition OR condition
    (28) condition -> . condition NOT condition
    (29) condition -> . condition AND condition
    (30) condition -> . expression NOTEQUAL expression
    (31) condition -> . expression GREATER expression
    (32) condition -> . expression LESS expression
    (33) condition -> . expression GREATEREQUAL expression
    (34) condition -> . expression LESSEQUAL expression
    (35) condition -> . LPAREN condition RPAREN
    (36) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 69
    NOT             shift and go to state 72
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    condition                      shift and go to state 84
    expression                     shift and go to state 85
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 70

    (49) if -> IF LPAREN condition . RPAREN scope
    (27) condition -> condition . OR condition
    (28) condition -> condition . NOT condition
    (29) condition -> condition . AND condition

    RPAREN          shift and go to state 86
    OR              shift and go to state 87
    NOT             shift and go to state 88
    AND             shift and go to state 89


state 71

    (23) condition -> expression . OR expression
    (24) condition -> expression . NOT expression
    (25) condition -> expression . AND expression
    (26) condition -> expression . EQUAL expression
    (30) condition -> expression . NOTEQUAL expression
    (31) condition -> expression . GREATER expression
    (32) condition -> expression . LESS expression
    (33) condition -> expression . GREATEREQUAL expression
    (34) condition -> expression . LESSEQUAL expression
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    OR              shift and go to state 90
    NOT             shift and go to state 91
    AND             shift and go to state 92
    EQUAL           shift and go to state 93
    NOTEQUAL        shift and go to state 94
    GREATER         shift and go to state 95
    LESS            shift and go to state 96
    GREATEREQUAL    shift and go to state 97
    LESSEQUAL       shift and go to state 98
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 72

    (36) condition -> NOT . condition
    (23) condition -> . expression OR expression
    (24) condition -> . expression NOT expression
    (25) condition -> . expression AND expression
    (26) condition -> . expression EQUAL expression
    (27) condition -> . condition OR condition
    (28) condition -> . condition NOT condition
    (29) condition -> . condition AND condition
    (30) condition -> . expression NOTEQUAL expression
    (31) condition -> . expression GREATER expression
    (32) condition -> . expression LESS expression
    (33) condition -> . expression GREATEREQUAL expression
    (34) condition -> . expression LESSEQUAL expression
    (35) condition -> . LPAREN condition RPAREN
    (36) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 69
    NOT             shift and go to state 72
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    condition                      shift and go to state 99
    expression                     shift and go to state 71
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 73

    (59) for -> FOR LPAREN for_initilizer . SEMICOLON condition SEMICOLON expression RPAREN scope

    SEMICOLON       shift and go to state 100


state 74

    (60) for_initilizer -> adress .

    SEMICOLON       reduce using rule 60 (for_initilizer -> adress .)


state 75

    (18) adress -> instance . ADRESS factor SEMICOLON
    (19) adress -> instance . ADRESS LITSTRING SEMICOLON
    (20) adress -> instance . ADRESS expression SEMICOLON

    ADRESS          shift and go to state 49


state 76

    (61) while -> WHILE LPAREN condition . RPAREN scope
    (27) condition -> condition . OR condition
    (28) condition -> condition . NOT condition
    (29) condition -> condition . AND condition

    RPAREN          shift and go to state 101
    OR              shift and go to state 87
    NOT             shift and go to state 88
    AND             shift and go to state 89


state 77

    (56) print -> PRINT LPAREN LITSTRING . RPAREN SEMICOLON
    (58) print -> PRINT LPAREN LITSTRING . COMMA param RPAREN SEMICOLON

    RPAREN          shift and go to state 102
    COMMA           shift and go to state 103


state 78

    (57) print -> PRINT LPAREN expression . RPAREN SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 104
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 79

    (21) return -> RETURN expression SEMICOLON .

    RBRAKETS        reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    ID              reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    INT             reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 21 (return -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 21 (return -> RETURN expression SEMICOLON .)


state 80

    (52) elseif -> ELSEIF LPAREN condition . RPAREN scope
    (27) condition -> condition . OR condition
    (28) condition -> condition . NOT condition
    (29) condition -> condition . AND condition

    RPAREN          shift and go to state 105
    OR              shift and go to state 87
    NOT             shift and go to state 88
    AND             shift and go to state 89


state 81

    (18) adress -> instance ADRESS factor SEMICOLON .

    RBRAKETS        reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    LPAREN          reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    IF              reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    ELSE            reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    FOR             reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    WHILE           reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    PRINT           reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    RETURN          reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    ID              reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    NUMBER          reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    INT             reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    FLOAT           reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    STRING          reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)
    SEMICOLON       reduce using rule 18 (adress -> instance ADRESS factor SEMICOLON .)


state 82

    (19) adress -> instance ADRESS LITSTRING SEMICOLON .

    RBRAKETS        reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    LPAREN          reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    IF              reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    ELSE            reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    FOR             reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    WHILE           reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    PRINT           reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    RETURN          reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    ID              reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    NUMBER          reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    INT             reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    FLOAT           reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    STRING          reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)
    SEMICOLON       reduce using rule 19 (adress -> instance ADRESS LITSTRING SEMICOLON .)


state 83

    (20) adress -> instance ADRESS expression SEMICOLON .

    RBRAKETS        reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    LPAREN          reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    IF              reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    ELSE            reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    FOR             reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    WHILE           reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    PRINT           reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    RETURN          reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    ID              reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    NUMBER          reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    INT             reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    FLOAT           reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    STRING          reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)
    SEMICOLON       reduce using rule 20 (adress -> instance ADRESS expression SEMICOLON .)


state 84

    (35) condition -> LPAREN condition . RPAREN
    (27) condition -> condition . OR condition
    (28) condition -> condition . NOT condition
    (29) condition -> condition . AND condition

    RPAREN          shift and go to state 106
    OR              shift and go to state 87
    NOT             shift and go to state 88
    AND             shift and go to state 89


state 85

    (8) expression -> LPAREN expression . RPAREN
    (23) condition -> expression . OR expression
    (24) condition -> expression . NOT expression
    (25) condition -> expression . AND expression
    (26) condition -> expression . EQUAL expression
    (30) condition -> expression . NOTEQUAL expression
    (31) condition -> expression . GREATER expression
    (32) condition -> expression . LESS expression
    (33) condition -> expression . GREATEREQUAL expression
    (34) condition -> expression . LESSEQUAL expression
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 62
    OR              shift and go to state 90
    NOT             shift and go to state 91
    AND             shift and go to state 92
    EQUAL           shift and go to state 93
    NOTEQUAL        shift and go to state 94
    GREATER         shift and go to state 95
    LESS            shift and go to state 96
    GREATEREQUAL    shift and go to state 97
    LESSEQUAL       shift and go to state 98
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 86

    (49) if -> IF LPAREN condition RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 107

state 87

    (27) condition -> condition OR . condition
    (23) condition -> . expression OR expression
    (24) condition -> . expression NOT expression
    (25) condition -> . expression AND expression
    (26) condition -> . expression EQUAL expression
    (27) condition -> . condition OR condition
    (28) condition -> . condition NOT condition
    (29) condition -> . condition AND condition
    (30) condition -> . expression NOTEQUAL expression
    (31) condition -> . expression GREATER expression
    (32) condition -> . expression LESS expression
    (33) condition -> . expression GREATEREQUAL expression
    (34) condition -> . expression LESSEQUAL expression
    (35) condition -> . LPAREN condition RPAREN
    (36) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 69
    NOT             shift and go to state 72
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    condition                      shift and go to state 108
    expression                     shift and go to state 71
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 88

    (28) condition -> condition NOT . condition
    (23) condition -> . expression OR expression
    (24) condition -> . expression NOT expression
    (25) condition -> . expression AND expression
    (26) condition -> . expression EQUAL expression
    (27) condition -> . condition OR condition
    (28) condition -> . condition NOT condition
    (29) condition -> . condition AND condition
    (30) condition -> . expression NOTEQUAL expression
    (31) condition -> . expression GREATER expression
    (32) condition -> . expression LESS expression
    (33) condition -> . expression GREATEREQUAL expression
    (34) condition -> . expression LESSEQUAL expression
    (35) condition -> . LPAREN condition RPAREN
    (36) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 69
    NOT             shift and go to state 72
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    condition                      shift and go to state 109
    expression                     shift and go to state 71
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 89

    (29) condition -> condition AND . condition
    (23) condition -> . expression OR expression
    (24) condition -> . expression NOT expression
    (25) condition -> . expression AND expression
    (26) condition -> . expression EQUAL expression
    (27) condition -> . condition OR condition
    (28) condition -> . condition NOT condition
    (29) condition -> . condition AND condition
    (30) condition -> . expression NOTEQUAL expression
    (31) condition -> . expression GREATER expression
    (32) condition -> . expression LESS expression
    (33) condition -> . expression GREATEREQUAL expression
    (34) condition -> . expression LESSEQUAL expression
    (35) condition -> . LPAREN condition RPAREN
    (36) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 69
    NOT             shift and go to state 72
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    condition                      shift and go to state 110
    expression                     shift and go to state 71
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 90

    (23) condition -> expression OR . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 111
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 91

    (24) condition -> expression NOT . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 112
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 92

    (25) condition -> expression AND . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 113
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 93

    (26) condition -> expression EQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 114
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 94

    (30) condition -> expression NOTEQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 115
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 95

    (31) condition -> expression GREATER . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 116
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 96

    (32) condition -> expression LESS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 117
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 97

    (33) condition -> expression GREATEREQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 118
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 98

    (34) condition -> expression LESSEQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 119
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 99

    (36) condition -> NOT condition .
    (27) condition -> condition . OR condition
    (28) condition -> condition . NOT condition
    (29) condition -> condition . AND condition

    RPAREN          reduce using rule 36 (condition -> NOT condition .)
    OR              reduce using rule 36 (condition -> NOT condition .)
    NOT             reduce using rule 36 (condition -> NOT condition .)
    AND             reduce using rule 36 (condition -> NOT condition .)
    SEMICOLON       reduce using rule 36 (condition -> NOT condition .)

  ! OR              [ shift and go to state 87 ]
  ! NOT             [ shift and go to state 88 ]
  ! AND             [ shift and go to state 89 ]


state 100

    (59) for -> FOR LPAREN for_initilizer SEMICOLON . condition SEMICOLON expression RPAREN scope
    (23) condition -> . expression OR expression
    (24) condition -> . expression NOT expression
    (25) condition -> . expression AND expression
    (26) condition -> . expression EQUAL expression
    (27) condition -> . condition OR condition
    (28) condition -> . condition NOT condition
    (29) condition -> . condition AND condition
    (30) condition -> . expression NOTEQUAL expression
    (31) condition -> . expression GREATER expression
    (32) condition -> . expression LESS expression
    (33) condition -> . expression GREATEREQUAL expression
    (34) condition -> . expression LESSEQUAL expression
    (35) condition -> . LPAREN condition RPAREN
    (36) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 69
    NOT             shift and go to state 72
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    condition                      shift and go to state 120
    expression                     shift and go to state 71
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 101

    (61) while -> WHILE LPAREN condition RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 121

state 102

    (56) print -> PRINT LPAREN LITSTRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 122


state 103

    (58) print -> PRINT LPAREN LITSTRING COMMA . param RPAREN SEMICOLON
    (47) param -> . param COMMA param
    (48) param -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    param                          shift and go to state 123
    term                           shift and go to state 124
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 104

    (57) print -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 125


state 105

    (52) elseif -> ELSEIF LPAREN condition RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 126

state 106

    (35) condition -> LPAREN condition RPAREN .

    RPAREN          reduce using rule 35 (condition -> LPAREN condition RPAREN .)
    OR              reduce using rule 35 (condition -> LPAREN condition RPAREN .)
    NOT             reduce using rule 35 (condition -> LPAREN condition RPAREN .)
    AND             reduce using rule 35 (condition -> LPAREN condition RPAREN .)
    SEMICOLON       reduce using rule 35 (condition -> LPAREN condition RPAREN .)


state 107

    (49) if -> IF LPAREN condition RPAREN scope .

    ELSEIF          reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    ELSE            reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    RBRAKETS        reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    IF              reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    FOR             reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    ID              reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    INT             reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    STRING          reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)


state 108

    (27) condition -> condition OR condition .
    (27) condition -> condition . OR condition
    (28) condition -> condition . NOT condition
    (29) condition -> condition . AND condition

    RPAREN          reduce using rule 27 (condition -> condition OR condition .)
    OR              reduce using rule 27 (condition -> condition OR condition .)
    SEMICOLON       reduce using rule 27 (condition -> condition OR condition .)
    NOT             shift and go to state 88
    AND             shift and go to state 89

  ! NOT             [ reduce using rule 27 (condition -> condition OR condition .) ]
  ! AND             [ reduce using rule 27 (condition -> condition OR condition .) ]
  ! OR              [ shift and go to state 87 ]


state 109

    (28) condition -> condition NOT condition .
    (27) condition -> condition . OR condition
    (28) condition -> condition . NOT condition
    (29) condition -> condition . AND condition

    RPAREN          reduce using rule 28 (condition -> condition NOT condition .)
    OR              reduce using rule 28 (condition -> condition NOT condition .)
    NOT             reduce using rule 28 (condition -> condition NOT condition .)
    AND             reduce using rule 28 (condition -> condition NOT condition .)
    SEMICOLON       reduce using rule 28 (condition -> condition NOT condition .)

  ! OR              [ shift and go to state 87 ]
  ! NOT             [ shift and go to state 88 ]
  ! AND             [ shift and go to state 89 ]


state 110

    (29) condition -> condition AND condition .
    (27) condition -> condition . OR condition
    (28) condition -> condition . NOT condition
    (29) condition -> condition . AND condition

    RPAREN          reduce using rule 29 (condition -> condition AND condition .)
    OR              reduce using rule 29 (condition -> condition AND condition .)
    AND             reduce using rule 29 (condition -> condition AND condition .)
    SEMICOLON       reduce using rule 29 (condition -> condition AND condition .)
    NOT             shift and go to state 88

  ! NOT             [ reduce using rule 29 (condition -> condition AND condition .) ]
  ! OR              [ shift and go to state 87 ]
  ! AND             [ shift and go to state 89 ]


state 111

    (23) condition -> expression OR expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 23 (condition -> expression OR expression .)
    OR              reduce using rule 23 (condition -> expression OR expression .)
    NOT             reduce using rule 23 (condition -> expression OR expression .)
    AND             reduce using rule 23 (condition -> expression OR expression .)
    SEMICOLON       reduce using rule 23 (condition -> expression OR expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 112

    (24) condition -> expression NOT expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 24 (condition -> expression NOT expression .)
    OR              reduce using rule 24 (condition -> expression NOT expression .)
    NOT             reduce using rule 24 (condition -> expression NOT expression .)
    AND             reduce using rule 24 (condition -> expression NOT expression .)
    SEMICOLON       reduce using rule 24 (condition -> expression NOT expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 113

    (25) condition -> expression AND expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 25 (condition -> expression AND expression .)
    OR              reduce using rule 25 (condition -> expression AND expression .)
    NOT             reduce using rule 25 (condition -> expression AND expression .)
    AND             reduce using rule 25 (condition -> expression AND expression .)
    SEMICOLON       reduce using rule 25 (condition -> expression AND expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 114

    (26) condition -> expression EQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 26 (condition -> expression EQUAL expression .)
    OR              reduce using rule 26 (condition -> expression EQUAL expression .)
    NOT             reduce using rule 26 (condition -> expression EQUAL expression .)
    AND             reduce using rule 26 (condition -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 26 (condition -> expression EQUAL expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 115

    (30) condition -> expression NOTEQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 30 (condition -> expression NOTEQUAL expression .)
    OR              reduce using rule 30 (condition -> expression NOTEQUAL expression .)
    NOT             reduce using rule 30 (condition -> expression NOTEQUAL expression .)
    AND             reduce using rule 30 (condition -> expression NOTEQUAL expression .)
    SEMICOLON       reduce using rule 30 (condition -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 116

    (31) condition -> expression GREATER expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 31 (condition -> expression GREATER expression .)
    OR              reduce using rule 31 (condition -> expression GREATER expression .)
    NOT             reduce using rule 31 (condition -> expression GREATER expression .)
    AND             reduce using rule 31 (condition -> expression GREATER expression .)
    SEMICOLON       reduce using rule 31 (condition -> expression GREATER expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 117

    (32) condition -> expression LESS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 32 (condition -> expression LESS expression .)
    OR              reduce using rule 32 (condition -> expression LESS expression .)
    NOT             reduce using rule 32 (condition -> expression LESS expression .)
    AND             reduce using rule 32 (condition -> expression LESS expression .)
    SEMICOLON       reduce using rule 32 (condition -> expression LESS expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 118

    (33) condition -> expression GREATEREQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 33 (condition -> expression GREATEREQUAL expression .)
    OR              reduce using rule 33 (condition -> expression GREATEREQUAL expression .)
    NOT             reduce using rule 33 (condition -> expression GREATEREQUAL expression .)
    AND             reduce using rule 33 (condition -> expression GREATEREQUAL expression .)
    SEMICOLON       reduce using rule 33 (condition -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 119

    (34) condition -> expression LESSEQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 34 (condition -> expression LESSEQUAL expression .)
    OR              reduce using rule 34 (condition -> expression LESSEQUAL expression .)
    NOT             reduce using rule 34 (condition -> expression LESSEQUAL expression .)
    AND             reduce using rule 34 (condition -> expression LESSEQUAL expression .)
    SEMICOLON       reduce using rule 34 (condition -> expression LESSEQUAL expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 120

    (59) for -> FOR LPAREN for_initilizer SEMICOLON condition . SEMICOLON expression RPAREN scope
    (27) condition -> condition . OR condition
    (28) condition -> condition . NOT condition
    (29) condition -> condition . AND condition

    SEMICOLON       shift and go to state 127
    OR              shift and go to state 87
    NOT             shift and go to state 88
    AND             shift and go to state 89


state 121

    (61) while -> WHILE LPAREN condition RPAREN scope .

    RBRAKETS        reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    IF              reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    ELSE            reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    FOR             reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    ID              reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    INT             reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    STRING          reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)


state 122

    (56) print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    LPAREN          reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    IF              reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    ELSE            reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    FOR             reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    ID              reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    NUMBER          reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    INT             reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    FLOAT           reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    STRING          reduce using rule 56 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)


state 123

    (58) print -> PRINT LPAREN LITSTRING COMMA param . RPAREN SEMICOLON
    (47) param -> param . COMMA param

    RPAREN          shift and go to state 129
    COMMA           shift and go to state 128


state 124

    (48) param -> term .

    RPAREN          reduce using rule 48 (param -> term .)
    COMMA           reduce using rule 48 (param -> term .)


state 125

    (57) print -> PRINT LPAREN expression RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 126

    (52) elseif -> ELSEIF LPAREN condition RPAREN scope .

    ELSEIF          reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    ELSE            reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    RBRAKETS        reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    IF              reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    FOR             reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    ID              reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    INT             reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    STRING          reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)


state 127

    (59) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON . expression RPAREN scope
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    expression                     shift and go to state 130
    term                           shift and go to state 12
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 128

    (47) param -> param COMMA . param
    (47) param -> . param COMMA param
    (48) param -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    ID              shift and go to state 29
    NUMBER          shift and go to state 30
    INT             shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    param                          shift and go to state 131
    term                           shift and go to state 124
    instance                       shift and go to state 45
    factor                         shift and go to state 21
    type                           shift and go to state 28

state 129

    (58) print -> PRINT LPAREN LITSTRING COMMA param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 132


state 130

    (59) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression . RPAREN scope
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 133
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42


state 131

    (47) param -> param COMMA param .
    (47) param -> param . COMMA param

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 47 (param -> param COMMA param .)
    COMMA           shift and go to state 128

  ! COMMA           [ reduce using rule 47 (param -> param COMMA param .) ]


state 132

    (58) print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    LPAREN          reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    IF              reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    ELSE            reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    FOR             reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    WHILE           reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    PRINT           reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    RETURN          reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    ID              reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    NUMBER          reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    INT             reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    FLOAT           reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    STRING          reduce using rule 58 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)


state 133

    (59) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 134

state 134

    (59) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .

    RBRAKETS        reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    LPAREN          reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    IF              reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    ELSE            reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    FOR             reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    WHILE           reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    PRINT           reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    RETURN          reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    ID              reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    NUMBER          reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    INT             reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    FLOAT           reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    STRING          reduce using rule 59 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 13 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 46 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 46 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 63 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 66 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 131 resolved as shift
