Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    FALSE
    LSQUAREB
    RSQUAREB
    TRUE

Grammar

Rule 0     S' -> main
Rule 1     main -> INT MAIN LPAREN RPAREN scope
Rule 2     scope -> LBRAKETS multiple_statements RBRAKETS
Rule 3     scope -> LBRAKETS expression RBRAKETS
Rule 4     expression -> expression PLUS expression
Rule 5     expression -> expression MINUS expression
Rule 6     expression -> expression TIMES expression
Rule 7     expression -> expression DIVIDE expression
Rule 8     expression -> LPAREN expression RPAREN
Rule 9     expression -> term
Rule 10    term -> instance
Rule 11    term -> factor
Rule 12    instance -> type ID
Rule 13    instance -> ID
Rule 14    factor -> NUMBER
Rule 15    type -> INT
Rule 16    type -> FLOAT
Rule 17    type -> STRING
Rule 18    litstring -> LITSTRING
Rule 19    adress -> instance ADRESS factor SEMICOLON
Rule 20    adress -> instance ADRESS litstring SEMICOLON
Rule 21    adress -> instance ADRESS expression SEMICOLON
Rule 22    return -> RETURN expression SEMICOLON
Rule 23    return -> RETURN SEMICOLON
Rule 24    condition -> expression OR expression
Rule 25    condition -> expression NOT expression
Rule 26    condition -> expression AND expression
Rule 27    condition -> expression EQUAL expression
Rule 28    condition -> condition OR condition
Rule 29    condition -> condition NOT condition
Rule 30    condition -> condition AND condition
Rule 31    condition -> expression NOTEQUAL expression
Rule 32    condition -> expression GREATER expression
Rule 33    condition -> expression LESS expression
Rule 34    condition -> expression GREATEREQUAL expression
Rule 35    condition -> expression LESSEQUAL expression
Rule 36    condition -> LPAREN condition RPAREN
Rule 37    condition -> NOT condition
Rule 38    multiple_statements -> multiple_statements statement
Rule 39    multiple_statements -> statement
Rule 40    statement -> expression SEMICOLON
Rule 41    statement -> if
Rule 42    statement -> for
Rule 43    statement -> while
Rule 44    statement -> print
Rule 45    statement -> adress
Rule 46    statement -> return
Rule 47    param -> param COMMA param
Rule 48    param -> term
Rule 49    if -> IF LPAREN condition RPAREN scope
Rule 50    if -> IF LPAREN condition RPAREN scope elseif
Rule 51    if -> IF LPAREN condition RPAREN scope ELSE scope
Rule 52    elseif -> ELSEIF LPAREN condition RPAREN scope
Rule 53    elseif -> ELSEIF LPAREN condition RPAREN scope elseif
Rule 54    elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope
Rule 55    print -> PRINT LPAREN litstring RPAREN SEMICOLON
Rule 56    print -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 57    print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON
Rule 58    for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
Rule 59    for_initilizer -> adress
Rule 60    while -> WHILE LPAREN condition RPAREN scope

Terminals, with rules where they appear

ADRESS               : 19 20 21
AND                  : 26 30
BOOL                 : 
COMMA                : 47 57
DIVIDE               : 7
ELSE                 : 51 54
ELSEIF               : 52 53 54
EQUAL                : 27
FALSE                : 
FLOAT                : 16
FOR                  : 58
GREATER              : 32
GREATEREQUAL         : 34
ID                   : 12 13
IF                   : 49 50 51
INT                  : 1 15
LBRAKETS             : 2 3
LESS                 : 33
LESSEQUAL            : 35
LITSTRING            : 18
LPAREN               : 1 8 36 49 50 51 52 53 54 55 56 57 58 60
LSQUAREB             : 
MAIN                 : 1
MINUS                : 5
NOT                  : 25 29 37
NOTEQUAL             : 31
NUMBER               : 14
OR                   : 24 28
PLUS                 : 4
PRINT                : 55 56 57
RBRAKETS             : 2 3
RETURN               : 22 23
RPAREN               : 1 8 36 49 50 51 52 53 54 55 56 57 58 60
RSQUAREB             : 
SEMICOLON            : 19 20 21 22 23 40 55 56 57 58 58
STRING               : 17
TIMES                : 6
TRUE                 : 
WHILE                : 60
error                : 

Nonterminals, with rules where they appear

adress               : 45 59
condition            : 28 28 29 29 30 30 36 37 49 50 51 52 53 54 58 60
elseif               : 50 53
expression           : 3 4 4 5 5 6 6 7 7 8 21 22 24 24 25 25 26 26 27 27 31 31 32 32 33 33 34 34 35 35 40 56 58
factor               : 11 19
for                  : 42
for_initilizer       : 58
if                   : 41
instance             : 10 19 20 21
litstring            : 20 55 57
main                 : 0
multiple_statements  : 2 38
param                : 47 47 57
print                : 44
return               : 46
scope                : 1 49 50 51 51 52 53 54 54 58 60
statement            : 38 39
term                 : 9 48
type                 : 12
while                : 43

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . INT MAIN LPAREN RPAREN scope

    INT             shift and go to state 2

    main                           shift and go to state 1

state 1

    (0) S' -> main .



state 2

    (1) main -> INT . MAIN LPAREN RPAREN scope

    MAIN            shift and go to state 3


state 3

    (1) main -> INT MAIN . LPAREN RPAREN scope

    LPAREN          shift and go to state 4


state 4

    (1) main -> INT MAIN LPAREN . RPAREN scope

    RPAREN          shift and go to state 5


state 5

    (1) main -> INT MAIN LPAREN RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 6

state 6

    (1) main -> INT MAIN LPAREN RPAREN scope .

    $end            reduce using rule 1 (main -> INT MAIN LPAREN RPAREN scope .)


state 7

    (2) scope -> LBRAKETS . multiple_statements RBRAKETS
    (3) scope -> LBRAKETS . expression RBRAKETS
    (38) multiple_statements -> . multiple_statements statement
    (39) multiple_statements -> . statement
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (40) statement -> . expression SEMICOLON
    (41) statement -> . if
    (42) statement -> . for
    (43) statement -> . while
    (44) statement -> . print
    (45) statement -> . adress
    (46) statement -> . return
    (10) term -> . instance
    (11) term -> . factor
    (49) if -> . IF LPAREN condition RPAREN scope
    (50) if -> . IF LPAREN condition RPAREN scope elseif
    (51) if -> . IF LPAREN condition RPAREN scope ELSE scope
    (58) for -> . FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
    (60) while -> . WHILE LPAREN condition RPAREN scope
    (55) print -> . PRINT LPAREN litstring RPAREN SEMICOLON
    (56) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (57) print -> . PRINT LPAREN litstring COMMA param RPAREN SEMICOLON
    (19) adress -> . instance ADRESS factor SEMICOLON
    (20) adress -> . instance ADRESS litstring SEMICOLON
    (21) adress -> . instance ADRESS expression SEMICOLON
    (22) return -> . RETURN expression SEMICOLON
    (23) return -> . RETURN SEMICOLON
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    IF              shift and go to state 21
    FOR             shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    multiple_statements            shift and go to state 8
    expression                     shift and go to state 9
    statement                      shift and go to state 10
    term                           shift and go to state 12
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    print                          shift and go to state 16
    adress                         shift and go to state 17
    return                         shift and go to state 18
    instance                       shift and go to state 19
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 8

    (2) scope -> LBRAKETS multiple_statements . RBRAKETS
    (38) multiple_statements -> multiple_statements . statement
    (40) statement -> . expression SEMICOLON
    (41) statement -> . if
    (42) statement -> . for
    (43) statement -> . while
    (44) statement -> . print
    (45) statement -> . adress
    (46) statement -> . return
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (49) if -> . IF LPAREN condition RPAREN scope
    (50) if -> . IF LPAREN condition RPAREN scope elseif
    (51) if -> . IF LPAREN condition RPAREN scope ELSE scope
    (58) for -> . FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
    (60) while -> . WHILE LPAREN condition RPAREN scope
    (55) print -> . PRINT LPAREN litstring RPAREN SEMICOLON
    (56) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (57) print -> . PRINT LPAREN litstring COMMA param RPAREN SEMICOLON
    (19) adress -> . instance ADRESS factor SEMICOLON
    (20) adress -> . instance ADRESS litstring SEMICOLON
    (21) adress -> . instance ADRESS expression SEMICOLON
    (22) return -> . RETURN expression SEMICOLON
    (23) return -> . RETURN SEMICOLON
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    RBRAKETS        shift and go to state 32
    LPAREN          shift and go to state 11
    IF              shift and go to state 21
    FOR             shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    statement                      shift and go to state 33
    expression                     shift and go to state 34
    if                             shift and go to state 13
    for                            shift and go to state 14
    while                          shift and go to state 15
    print                          shift and go to state 16
    adress                         shift and go to state 17
    return                         shift and go to state 18
    term                           shift and go to state 12
    instance                       shift and go to state 35
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 9

    (3) scope -> LBRAKETS expression . RBRAKETS
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (40) statement -> expression . SEMICOLON

    RBRAKETS        shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    SEMICOLON       shift and go to state 41


state 10

    (39) multiple_statements -> statement .

    RBRAKETS        reduce using rule 39 (multiple_statements -> statement .)
    LPAREN          reduce using rule 39 (multiple_statements -> statement .)
    IF              reduce using rule 39 (multiple_statements -> statement .)
    FOR             reduce using rule 39 (multiple_statements -> statement .)
    WHILE           reduce using rule 39 (multiple_statements -> statement .)
    PRINT           reduce using rule 39 (multiple_statements -> statement .)
    RETURN          reduce using rule 39 (multiple_statements -> statement .)
    ID              reduce using rule 39 (multiple_statements -> statement .)
    NUMBER          reduce using rule 39 (multiple_statements -> statement .)
    INT             reduce using rule 39 (multiple_statements -> statement .)
    FLOAT           reduce using rule 39 (multiple_statements -> statement .)
    STRING          reduce using rule 39 (multiple_statements -> statement .)


state 11

    (8) expression -> LPAREN . expression RPAREN
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 42
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 12

    (9) expression -> term .

    RBRAKETS        reduce using rule 9 (expression -> term .)
    PLUS            reduce using rule 9 (expression -> term .)
    MINUS           reduce using rule 9 (expression -> term .)
    TIMES           reduce using rule 9 (expression -> term .)
    DIVIDE          reduce using rule 9 (expression -> term .)
    SEMICOLON       reduce using rule 9 (expression -> term .)
    RPAREN          reduce using rule 9 (expression -> term .)
    OR              reduce using rule 9 (expression -> term .)
    NOT             reduce using rule 9 (expression -> term .)
    AND             reduce using rule 9 (expression -> term .)
    EQUAL           reduce using rule 9 (expression -> term .)
    NOTEQUAL        reduce using rule 9 (expression -> term .)
    GREATER         reduce using rule 9 (expression -> term .)
    LESS            reduce using rule 9 (expression -> term .)
    GREATEREQUAL    reduce using rule 9 (expression -> term .)
    LESSEQUAL       reduce using rule 9 (expression -> term .)


state 13

    (41) statement -> if .

    RBRAKETS        reduce using rule 41 (statement -> if .)
    LPAREN          reduce using rule 41 (statement -> if .)
    IF              reduce using rule 41 (statement -> if .)
    FOR             reduce using rule 41 (statement -> if .)
    WHILE           reduce using rule 41 (statement -> if .)
    PRINT           reduce using rule 41 (statement -> if .)
    RETURN          reduce using rule 41 (statement -> if .)
    ID              reduce using rule 41 (statement -> if .)
    NUMBER          reduce using rule 41 (statement -> if .)
    INT             reduce using rule 41 (statement -> if .)
    FLOAT           reduce using rule 41 (statement -> if .)
    STRING          reduce using rule 41 (statement -> if .)


state 14

    (42) statement -> for .

    RBRAKETS        reduce using rule 42 (statement -> for .)
    LPAREN          reduce using rule 42 (statement -> for .)
    IF              reduce using rule 42 (statement -> for .)
    FOR             reduce using rule 42 (statement -> for .)
    WHILE           reduce using rule 42 (statement -> for .)
    PRINT           reduce using rule 42 (statement -> for .)
    RETURN          reduce using rule 42 (statement -> for .)
    ID              reduce using rule 42 (statement -> for .)
    NUMBER          reduce using rule 42 (statement -> for .)
    INT             reduce using rule 42 (statement -> for .)
    FLOAT           reduce using rule 42 (statement -> for .)
    STRING          reduce using rule 42 (statement -> for .)


state 15

    (43) statement -> while .

    RBRAKETS        reduce using rule 43 (statement -> while .)
    LPAREN          reduce using rule 43 (statement -> while .)
    IF              reduce using rule 43 (statement -> while .)
    FOR             reduce using rule 43 (statement -> while .)
    WHILE           reduce using rule 43 (statement -> while .)
    PRINT           reduce using rule 43 (statement -> while .)
    RETURN          reduce using rule 43 (statement -> while .)
    ID              reduce using rule 43 (statement -> while .)
    NUMBER          reduce using rule 43 (statement -> while .)
    INT             reduce using rule 43 (statement -> while .)
    FLOAT           reduce using rule 43 (statement -> while .)
    STRING          reduce using rule 43 (statement -> while .)


state 16

    (44) statement -> print .

    RBRAKETS        reduce using rule 44 (statement -> print .)
    LPAREN          reduce using rule 44 (statement -> print .)
    IF              reduce using rule 44 (statement -> print .)
    FOR             reduce using rule 44 (statement -> print .)
    WHILE           reduce using rule 44 (statement -> print .)
    PRINT           reduce using rule 44 (statement -> print .)
    RETURN          reduce using rule 44 (statement -> print .)
    ID              reduce using rule 44 (statement -> print .)
    NUMBER          reduce using rule 44 (statement -> print .)
    INT             reduce using rule 44 (statement -> print .)
    FLOAT           reduce using rule 44 (statement -> print .)
    STRING          reduce using rule 44 (statement -> print .)


state 17

    (45) statement -> adress .

    RBRAKETS        reduce using rule 45 (statement -> adress .)
    LPAREN          reduce using rule 45 (statement -> adress .)
    IF              reduce using rule 45 (statement -> adress .)
    FOR             reduce using rule 45 (statement -> adress .)
    WHILE           reduce using rule 45 (statement -> adress .)
    PRINT           reduce using rule 45 (statement -> adress .)
    RETURN          reduce using rule 45 (statement -> adress .)
    ID              reduce using rule 45 (statement -> adress .)
    NUMBER          reduce using rule 45 (statement -> adress .)
    INT             reduce using rule 45 (statement -> adress .)
    FLOAT           reduce using rule 45 (statement -> adress .)
    STRING          reduce using rule 45 (statement -> adress .)


state 18

    (46) statement -> return .

    RBRAKETS        reduce using rule 46 (statement -> return .)
    LPAREN          reduce using rule 46 (statement -> return .)
    IF              reduce using rule 46 (statement -> return .)
    FOR             reduce using rule 46 (statement -> return .)
    WHILE           reduce using rule 46 (statement -> return .)
    PRINT           reduce using rule 46 (statement -> return .)
    RETURN          reduce using rule 46 (statement -> return .)
    ID              reduce using rule 46 (statement -> return .)
    NUMBER          reduce using rule 46 (statement -> return .)
    INT             reduce using rule 46 (statement -> return .)
    FLOAT           reduce using rule 46 (statement -> return .)
    STRING          reduce using rule 46 (statement -> return .)


state 19

    (10) term -> instance .
    (19) adress -> instance . ADRESS factor SEMICOLON
    (20) adress -> instance . ADRESS litstring SEMICOLON
    (21) adress -> instance . ADRESS expression SEMICOLON

    RBRAKETS        reduce using rule 10 (term -> instance .)
    PLUS            reduce using rule 10 (term -> instance .)
    MINUS           reduce using rule 10 (term -> instance .)
    TIMES           reduce using rule 10 (term -> instance .)
    DIVIDE          reduce using rule 10 (term -> instance .)
    SEMICOLON       reduce using rule 10 (term -> instance .)
    ADRESS          shift and go to state 44


state 20

    (11) term -> factor .

    RBRAKETS        reduce using rule 11 (term -> factor .)
    PLUS            reduce using rule 11 (term -> factor .)
    MINUS           reduce using rule 11 (term -> factor .)
    TIMES           reduce using rule 11 (term -> factor .)
    DIVIDE          reduce using rule 11 (term -> factor .)
    SEMICOLON       reduce using rule 11 (term -> factor .)
    RPAREN          reduce using rule 11 (term -> factor .)
    OR              reduce using rule 11 (term -> factor .)
    NOT             reduce using rule 11 (term -> factor .)
    AND             reduce using rule 11 (term -> factor .)
    EQUAL           reduce using rule 11 (term -> factor .)
    NOTEQUAL        reduce using rule 11 (term -> factor .)
    GREATER         reduce using rule 11 (term -> factor .)
    LESS            reduce using rule 11 (term -> factor .)
    GREATEREQUAL    reduce using rule 11 (term -> factor .)
    LESSEQUAL       reduce using rule 11 (term -> factor .)
    COMMA           reduce using rule 11 (term -> factor .)


state 21

    (49) if -> IF . LPAREN condition RPAREN scope
    (50) if -> IF . LPAREN condition RPAREN scope elseif
    (51) if -> IF . LPAREN condition RPAREN scope ELSE scope

    LPAREN          shift and go to state 45


state 22

    (58) for -> FOR . LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope

    LPAREN          shift and go to state 46


state 23

    (60) while -> WHILE . LPAREN condition RPAREN scope

    LPAREN          shift and go to state 47


state 24

    (55) print -> PRINT . LPAREN litstring RPAREN SEMICOLON
    (56) print -> PRINT . LPAREN expression RPAREN SEMICOLON
    (57) print -> PRINT . LPAREN litstring COMMA param RPAREN SEMICOLON

    LPAREN          shift and go to state 48


state 25

    (22) return -> RETURN . expression SEMICOLON
    (23) return -> RETURN . SEMICOLON
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    SEMICOLON       shift and go to state 50
    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 49
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 26

    (12) instance -> type . ID

    ID              shift and go to state 51


state 27

    (13) instance -> ID .

    ADRESS          reduce using rule 13 (instance -> ID .)
    RBRAKETS        reduce using rule 13 (instance -> ID .)
    PLUS            reduce using rule 13 (instance -> ID .)
    MINUS           reduce using rule 13 (instance -> ID .)
    TIMES           reduce using rule 13 (instance -> ID .)
    DIVIDE          reduce using rule 13 (instance -> ID .)
    SEMICOLON       reduce using rule 13 (instance -> ID .)
    RPAREN          reduce using rule 13 (instance -> ID .)
    OR              reduce using rule 13 (instance -> ID .)
    NOT             reduce using rule 13 (instance -> ID .)
    AND             reduce using rule 13 (instance -> ID .)
    EQUAL           reduce using rule 13 (instance -> ID .)
    NOTEQUAL        reduce using rule 13 (instance -> ID .)
    GREATER         reduce using rule 13 (instance -> ID .)
    LESS            reduce using rule 13 (instance -> ID .)
    GREATEREQUAL    reduce using rule 13 (instance -> ID .)
    LESSEQUAL       reduce using rule 13 (instance -> ID .)
    COMMA           reduce using rule 13 (instance -> ID .)


state 28

    (14) factor -> NUMBER .

    RBRAKETS        reduce using rule 14 (factor -> NUMBER .)
    PLUS            reduce using rule 14 (factor -> NUMBER .)
    MINUS           reduce using rule 14 (factor -> NUMBER .)
    TIMES           reduce using rule 14 (factor -> NUMBER .)
    DIVIDE          reduce using rule 14 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 14 (factor -> NUMBER .)
    RPAREN          reduce using rule 14 (factor -> NUMBER .)
    OR              reduce using rule 14 (factor -> NUMBER .)
    NOT             reduce using rule 14 (factor -> NUMBER .)
    AND             reduce using rule 14 (factor -> NUMBER .)
    EQUAL           reduce using rule 14 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 14 (factor -> NUMBER .)
    GREATER         reduce using rule 14 (factor -> NUMBER .)
    LESS            reduce using rule 14 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 14 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 14 (factor -> NUMBER .)
    COMMA           reduce using rule 14 (factor -> NUMBER .)


state 29

    (15) type -> INT .

    ID              reduce using rule 15 (type -> INT .)


state 30

    (16) type -> FLOAT .

    ID              reduce using rule 16 (type -> FLOAT .)


state 31

    (17) type -> STRING .

    ID              reduce using rule 17 (type -> STRING .)


state 32

    (2) scope -> LBRAKETS multiple_statements RBRAKETS .

    $end            reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    ELSE            reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    ELSEIF          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    RBRAKETS        reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    LPAREN          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    IF              reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    FOR             reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    WHILE           reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    PRINT           reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    RETURN          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    ID              reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    NUMBER          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    INT             reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    FLOAT           reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    STRING          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)


state 33

    (38) multiple_statements -> multiple_statements statement .

    RBRAKETS        reduce using rule 38 (multiple_statements -> multiple_statements statement .)
    LPAREN          reduce using rule 38 (multiple_statements -> multiple_statements statement .)
    IF              reduce using rule 38 (multiple_statements -> multiple_statements statement .)
    FOR             reduce using rule 38 (multiple_statements -> multiple_statements statement .)
    WHILE           reduce using rule 38 (multiple_statements -> multiple_statements statement .)
    PRINT           reduce using rule 38 (multiple_statements -> multiple_statements statement .)
    RETURN          reduce using rule 38 (multiple_statements -> multiple_statements statement .)
    ID              reduce using rule 38 (multiple_statements -> multiple_statements statement .)
    NUMBER          reduce using rule 38 (multiple_statements -> multiple_statements statement .)
    INT             reduce using rule 38 (multiple_statements -> multiple_statements statement .)
    FLOAT           reduce using rule 38 (multiple_statements -> multiple_statements statement .)
    STRING          reduce using rule 38 (multiple_statements -> multiple_statements statement .)


state 34

    (40) statement -> expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 41
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 35

    (19) adress -> instance . ADRESS factor SEMICOLON
    (20) adress -> instance . ADRESS litstring SEMICOLON
    (21) adress -> instance . ADRESS expression SEMICOLON
    (10) term -> instance .

    ADRESS          shift and go to state 44
    SEMICOLON       reduce using rule 10 (term -> instance .)
    PLUS            reduce using rule 10 (term -> instance .)
    MINUS           reduce using rule 10 (term -> instance .)
    TIMES           reduce using rule 10 (term -> instance .)
    DIVIDE          reduce using rule 10 (term -> instance .)


state 36

    (3) scope -> LBRAKETS expression RBRAKETS .

    $end            reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    ELSE            reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    ELSEIF          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    RBRAKETS        reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    LPAREN          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    IF              reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    FOR             reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    WHILE           reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    PRINT           reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    RETURN          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    ID              reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    NUMBER          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    INT             reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    FLOAT           reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    STRING          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)


state 37

    (4) expression -> expression PLUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 52
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 38

    (5) expression -> expression MINUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 53
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 39

    (6) expression -> expression TIMES . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 54
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 40

    (7) expression -> expression DIVIDE . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 55
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 41

    (40) statement -> expression SEMICOLON .

    RBRAKETS        reduce using rule 40 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 40 (statement -> expression SEMICOLON .)
    IF              reduce using rule 40 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 40 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 40 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 40 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 40 (statement -> expression SEMICOLON .)
    ID              reduce using rule 40 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 40 (statement -> expression SEMICOLON .)
    INT             reduce using rule 40 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 40 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 40 (statement -> expression SEMICOLON .)


state 42

    (8) expression -> LPAREN expression . RPAREN
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 56
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 43

    (10) term -> instance .

    RPAREN          reduce using rule 10 (term -> instance .)
    PLUS            reduce using rule 10 (term -> instance .)
    MINUS           reduce using rule 10 (term -> instance .)
    TIMES           reduce using rule 10 (term -> instance .)
    DIVIDE          reduce using rule 10 (term -> instance .)
    SEMICOLON       reduce using rule 10 (term -> instance .)
    RBRAKETS        reduce using rule 10 (term -> instance .)
    OR              reduce using rule 10 (term -> instance .)
    NOT             reduce using rule 10 (term -> instance .)
    AND             reduce using rule 10 (term -> instance .)
    EQUAL           reduce using rule 10 (term -> instance .)
    NOTEQUAL        reduce using rule 10 (term -> instance .)
    GREATER         reduce using rule 10 (term -> instance .)
    LESS            reduce using rule 10 (term -> instance .)
    GREATEREQUAL    reduce using rule 10 (term -> instance .)
    LESSEQUAL       reduce using rule 10 (term -> instance .)
    COMMA           reduce using rule 10 (term -> instance .)


state 44

    (19) adress -> instance ADRESS . factor SEMICOLON
    (20) adress -> instance ADRESS . litstring SEMICOLON
    (21) adress -> instance ADRESS . expression SEMICOLON
    (14) factor -> . NUMBER
    (18) litstring -> . LITSTRING
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    NUMBER          shift and go to state 28
    LITSTRING       shift and go to state 60
    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    instance                       shift and go to state 43
    factor                         shift and go to state 57
    litstring                      shift and go to state 58
    expression                     shift and go to state 59
    term                           shift and go to state 12
    type                           shift and go to state 26

state 45

    (49) if -> IF LPAREN . condition RPAREN scope
    (50) if -> IF LPAREN . condition RPAREN scope elseif
    (51) if -> IF LPAREN . condition RPAREN scope ELSE scope
    (24) condition -> . expression OR expression
    (25) condition -> . expression NOT expression
    (26) condition -> . expression AND expression
    (27) condition -> . expression EQUAL expression
    (28) condition -> . condition OR condition
    (29) condition -> . condition NOT condition
    (30) condition -> . condition AND condition
    (31) condition -> . expression NOTEQUAL expression
    (32) condition -> . expression GREATER expression
    (33) condition -> . expression LESS expression
    (34) condition -> . expression GREATEREQUAL expression
    (35) condition -> . expression LESSEQUAL expression
    (36) condition -> . LPAREN condition RPAREN
    (37) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 61
    NOT             shift and go to state 64
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    condition                      shift and go to state 62
    expression                     shift and go to state 63
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 46

    (58) for -> FOR LPAREN . for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
    (59) for_initilizer -> . adress
    (19) adress -> . instance ADRESS factor SEMICOLON
    (20) adress -> . instance ADRESS litstring SEMICOLON
    (21) adress -> . instance ADRESS expression SEMICOLON
    (12) instance -> . type ID
    (13) instance -> . ID
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    ID              shift and go to state 27
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    for_initilizer                 shift and go to state 65
    adress                         shift and go to state 66
    instance                       shift and go to state 67
    type                           shift and go to state 26

state 47

    (60) while -> WHILE LPAREN . condition RPAREN scope
    (24) condition -> . expression OR expression
    (25) condition -> . expression NOT expression
    (26) condition -> . expression AND expression
    (27) condition -> . expression EQUAL expression
    (28) condition -> . condition OR condition
    (29) condition -> . condition NOT condition
    (30) condition -> . condition AND condition
    (31) condition -> . expression NOTEQUAL expression
    (32) condition -> . expression GREATER expression
    (33) condition -> . expression LESS expression
    (34) condition -> . expression GREATEREQUAL expression
    (35) condition -> . expression LESSEQUAL expression
    (36) condition -> . LPAREN condition RPAREN
    (37) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 61
    NOT             shift and go to state 64
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    condition                      shift and go to state 68
    expression                     shift and go to state 63
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 48

    (55) print -> PRINT LPAREN . litstring RPAREN SEMICOLON
    (56) print -> PRINT LPAREN . expression RPAREN SEMICOLON
    (57) print -> PRINT LPAREN . litstring COMMA param RPAREN SEMICOLON
    (18) litstring -> . LITSTRING
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LITSTRING       shift and go to state 60
    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    litstring                      shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 49

    (22) return -> RETURN expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 71
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 50

    (23) return -> RETURN SEMICOLON .

    RBRAKETS        reduce using rule 23 (return -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 23 (return -> RETURN SEMICOLON .)
    IF              reduce using rule 23 (return -> RETURN SEMICOLON .)
    FOR             reduce using rule 23 (return -> RETURN SEMICOLON .)
    WHILE           reduce using rule 23 (return -> RETURN SEMICOLON .)
    PRINT           reduce using rule 23 (return -> RETURN SEMICOLON .)
    RETURN          reduce using rule 23 (return -> RETURN SEMICOLON .)
    ID              reduce using rule 23 (return -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 23 (return -> RETURN SEMICOLON .)
    INT             reduce using rule 23 (return -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 23 (return -> RETURN SEMICOLON .)
    STRING          reduce using rule 23 (return -> RETURN SEMICOLON .)


state 51

    (12) instance -> type ID .

    ADRESS          reduce using rule 12 (instance -> type ID .)
    RBRAKETS        reduce using rule 12 (instance -> type ID .)
    PLUS            reduce using rule 12 (instance -> type ID .)
    MINUS           reduce using rule 12 (instance -> type ID .)
    TIMES           reduce using rule 12 (instance -> type ID .)
    DIVIDE          reduce using rule 12 (instance -> type ID .)
    SEMICOLON       reduce using rule 12 (instance -> type ID .)
    RPAREN          reduce using rule 12 (instance -> type ID .)
    OR              reduce using rule 12 (instance -> type ID .)
    NOT             reduce using rule 12 (instance -> type ID .)
    AND             reduce using rule 12 (instance -> type ID .)
    EQUAL           reduce using rule 12 (instance -> type ID .)
    NOTEQUAL        reduce using rule 12 (instance -> type ID .)
    GREATER         reduce using rule 12 (instance -> type ID .)
    LESS            reduce using rule 12 (instance -> type ID .)
    GREATEREQUAL    reduce using rule 12 (instance -> type ID .)
    LESSEQUAL       reduce using rule 12 (instance -> type ID .)
    COMMA           reduce using rule 12 (instance -> type ID .)


state 52

    (4) expression -> expression PLUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 4 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 4 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 4 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 4 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression PLUS expression .)
    OR              reduce using rule 4 (expression -> expression PLUS expression .)
    NOT             reduce using rule 4 (expression -> expression PLUS expression .)
    AND             reduce using rule 4 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 4 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 4 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 4 (expression -> expression PLUS expression .)
    LESS            reduce using rule 4 (expression -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 4 (expression -> expression PLUS expression .)
    LESSEQUAL       reduce using rule 4 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! TIMES           [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]


state 53

    (5) expression -> expression MINUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 5 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 5 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 5 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 5 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 5 (expression -> expression MINUS expression .)
    OR              reduce using rule 5 (expression -> expression MINUS expression .)
    NOT             reduce using rule 5 (expression -> expression MINUS expression .)
    AND             reduce using rule 5 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 5 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 5 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 5 (expression -> expression MINUS expression .)
    LESS            reduce using rule 5 (expression -> expression MINUS expression .)
    GREATEREQUAL    reduce using rule 5 (expression -> expression MINUS expression .)
    LESSEQUAL       reduce using rule 5 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40

  ! TIMES           [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]


state 54

    (6) expression -> expression TIMES expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 6 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 6 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 6 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 6 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 6 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 6 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 6 (expression -> expression TIMES expression .)
    OR              reduce using rule 6 (expression -> expression TIMES expression .)
    NOT             reduce using rule 6 (expression -> expression TIMES expression .)
    AND             reduce using rule 6 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 6 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 6 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 6 (expression -> expression TIMES expression .)
    LESS            reduce using rule 6 (expression -> expression TIMES expression .)
    GREATEREQUAL    reduce using rule 6 (expression -> expression TIMES expression .)
    LESSEQUAL       reduce using rule 6 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 40 ]


state 55

    (7) expression -> expression DIVIDE expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 7 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 7 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 7 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 7 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 7 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 7 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 7 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 7 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 7 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 7 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 7 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 7 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 7 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 7 (expression -> expression DIVIDE expression .)
    GREATEREQUAL    reduce using rule 7 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 7 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 37 ]
  ! MINUS           [ shift and go to state 38 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 40 ]


state 56

    (8) expression -> LPAREN expression RPAREN .

    RBRAKETS        reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 8 (expression -> LPAREN expression RPAREN .)


state 57

    (19) adress -> instance ADRESS factor . SEMICOLON
    (11) term -> factor .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 72
    PLUS            reduce using rule 11 (term -> factor .)
    MINUS           reduce using rule 11 (term -> factor .)
    TIMES           reduce using rule 11 (term -> factor .)
    DIVIDE          reduce using rule 11 (term -> factor .)

  ! SEMICOLON       [ reduce using rule 11 (term -> factor .) ]


state 58

    (20) adress -> instance ADRESS litstring . SEMICOLON

    SEMICOLON       shift and go to state 73


state 59

    (21) adress -> instance ADRESS expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 74
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 60

    (18) litstring -> LITSTRING .

    SEMICOLON       reduce using rule 18 (litstring -> LITSTRING .)
    RPAREN          reduce using rule 18 (litstring -> LITSTRING .)
    COMMA           reduce using rule 18 (litstring -> LITSTRING .)


state 61

    (36) condition -> LPAREN . condition RPAREN
    (8) expression -> LPAREN . expression RPAREN
    (24) condition -> . expression OR expression
    (25) condition -> . expression NOT expression
    (26) condition -> . expression AND expression
    (27) condition -> . expression EQUAL expression
    (28) condition -> . condition OR condition
    (29) condition -> . condition NOT condition
    (30) condition -> . condition AND condition
    (31) condition -> . expression NOTEQUAL expression
    (32) condition -> . expression GREATER expression
    (33) condition -> . expression LESS expression
    (34) condition -> . expression GREATEREQUAL expression
    (35) condition -> . expression LESSEQUAL expression
    (36) condition -> . LPAREN condition RPAREN
    (37) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 61
    NOT             shift and go to state 64
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    condition                      shift and go to state 75
    expression                     shift and go to state 76
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 62

    (49) if -> IF LPAREN condition . RPAREN scope
    (50) if -> IF LPAREN condition . RPAREN scope elseif
    (51) if -> IF LPAREN condition . RPAREN scope ELSE scope
    (28) condition -> condition . OR condition
    (29) condition -> condition . NOT condition
    (30) condition -> condition . AND condition

    RPAREN          shift and go to state 77
    OR              shift and go to state 78
    NOT             shift and go to state 79
    AND             shift and go to state 80


state 63

    (24) condition -> expression . OR expression
    (25) condition -> expression . NOT expression
    (26) condition -> expression . AND expression
    (27) condition -> expression . EQUAL expression
    (31) condition -> expression . NOTEQUAL expression
    (32) condition -> expression . GREATER expression
    (33) condition -> expression . LESS expression
    (34) condition -> expression . GREATEREQUAL expression
    (35) condition -> expression . LESSEQUAL expression
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    OR              shift and go to state 81
    NOT             shift and go to state 82
    AND             shift and go to state 83
    EQUAL           shift and go to state 84
    NOTEQUAL        shift and go to state 85
    GREATER         shift and go to state 86
    LESS            shift and go to state 87
    GREATEREQUAL    shift and go to state 88
    LESSEQUAL       shift and go to state 89
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 64

    (37) condition -> NOT . condition
    (24) condition -> . expression OR expression
    (25) condition -> . expression NOT expression
    (26) condition -> . expression AND expression
    (27) condition -> . expression EQUAL expression
    (28) condition -> . condition OR condition
    (29) condition -> . condition NOT condition
    (30) condition -> . condition AND condition
    (31) condition -> . expression NOTEQUAL expression
    (32) condition -> . expression GREATER expression
    (33) condition -> . expression LESS expression
    (34) condition -> . expression GREATEREQUAL expression
    (35) condition -> . expression LESSEQUAL expression
    (36) condition -> . LPAREN condition RPAREN
    (37) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 61
    NOT             shift and go to state 64
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    condition                      shift and go to state 90
    expression                     shift and go to state 63
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 65

    (58) for -> FOR LPAREN for_initilizer . SEMICOLON condition SEMICOLON expression RPAREN scope

    SEMICOLON       shift and go to state 91


state 66

    (59) for_initilizer -> adress .

    SEMICOLON       reduce using rule 59 (for_initilizer -> adress .)


state 67

    (19) adress -> instance . ADRESS factor SEMICOLON
    (20) adress -> instance . ADRESS litstring SEMICOLON
    (21) adress -> instance . ADRESS expression SEMICOLON

    ADRESS          shift and go to state 44


state 68

    (60) while -> WHILE LPAREN condition . RPAREN scope
    (28) condition -> condition . OR condition
    (29) condition -> condition . NOT condition
    (30) condition -> condition . AND condition

    RPAREN          shift and go to state 92
    OR              shift and go to state 78
    NOT             shift and go to state 79
    AND             shift and go to state 80


state 69

    (55) print -> PRINT LPAREN litstring . RPAREN SEMICOLON
    (57) print -> PRINT LPAREN litstring . COMMA param RPAREN SEMICOLON

    RPAREN          shift and go to state 93
    COMMA           shift and go to state 94


state 70

    (56) print -> PRINT LPAREN expression . RPAREN SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 95
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 71

    (22) return -> RETURN expression SEMICOLON .

    RBRAKETS        reduce using rule 22 (return -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 22 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 22 (return -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 22 (return -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 22 (return -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 22 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 22 (return -> RETURN expression SEMICOLON .)
    ID              reduce using rule 22 (return -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 22 (return -> RETURN expression SEMICOLON .)
    INT             reduce using rule 22 (return -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 22 (return -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 22 (return -> RETURN expression SEMICOLON .)


state 72

    (19) adress -> instance ADRESS factor SEMICOLON .

    RBRAKETS        reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    LPAREN          reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    IF              reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    FOR             reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    WHILE           reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    PRINT           reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    RETURN          reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    ID              reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    NUMBER          reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    INT             reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    FLOAT           reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    STRING          reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)
    SEMICOLON       reduce using rule 19 (adress -> instance ADRESS factor SEMICOLON .)


state 73

    (20) adress -> instance ADRESS litstring SEMICOLON .

    RBRAKETS        reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    LPAREN          reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    IF              reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    FOR             reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    WHILE           reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    PRINT           reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    RETURN          reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    ID              reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    NUMBER          reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    INT             reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    FLOAT           reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    STRING          reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)
    SEMICOLON       reduce using rule 20 (adress -> instance ADRESS litstring SEMICOLON .)


state 74

    (21) adress -> instance ADRESS expression SEMICOLON .

    RBRAKETS        reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    LPAREN          reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    IF              reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    FOR             reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    WHILE           reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    PRINT           reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    RETURN          reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    ID              reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    NUMBER          reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    INT             reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    FLOAT           reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    STRING          reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)
    SEMICOLON       reduce using rule 21 (adress -> instance ADRESS expression SEMICOLON .)


state 75

    (36) condition -> LPAREN condition . RPAREN
    (28) condition -> condition . OR condition
    (29) condition -> condition . NOT condition
    (30) condition -> condition . AND condition

    RPAREN          shift and go to state 96
    OR              shift and go to state 78
    NOT             shift and go to state 79
    AND             shift and go to state 80


state 76

    (8) expression -> LPAREN expression . RPAREN
    (24) condition -> expression . OR expression
    (25) condition -> expression . NOT expression
    (26) condition -> expression . AND expression
    (27) condition -> expression . EQUAL expression
    (31) condition -> expression . NOTEQUAL expression
    (32) condition -> expression . GREATER expression
    (33) condition -> expression . LESS expression
    (34) condition -> expression . GREATEREQUAL expression
    (35) condition -> expression . LESSEQUAL expression
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 56
    OR              shift and go to state 81
    NOT             shift and go to state 82
    AND             shift and go to state 83
    EQUAL           shift and go to state 84
    NOTEQUAL        shift and go to state 85
    GREATER         shift and go to state 86
    LESS            shift and go to state 87
    GREATEREQUAL    shift and go to state 88
    LESSEQUAL       shift and go to state 89
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 77

    (49) if -> IF LPAREN condition RPAREN . scope
    (50) if -> IF LPAREN condition RPAREN . scope elseif
    (51) if -> IF LPAREN condition RPAREN . scope ELSE scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 97

state 78

    (28) condition -> condition OR . condition
    (24) condition -> . expression OR expression
    (25) condition -> . expression NOT expression
    (26) condition -> . expression AND expression
    (27) condition -> . expression EQUAL expression
    (28) condition -> . condition OR condition
    (29) condition -> . condition NOT condition
    (30) condition -> . condition AND condition
    (31) condition -> . expression NOTEQUAL expression
    (32) condition -> . expression GREATER expression
    (33) condition -> . expression LESS expression
    (34) condition -> . expression GREATEREQUAL expression
    (35) condition -> . expression LESSEQUAL expression
    (36) condition -> . LPAREN condition RPAREN
    (37) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 61
    NOT             shift and go to state 64
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    condition                      shift and go to state 98
    expression                     shift and go to state 63
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 79

    (29) condition -> condition NOT . condition
    (24) condition -> . expression OR expression
    (25) condition -> . expression NOT expression
    (26) condition -> . expression AND expression
    (27) condition -> . expression EQUAL expression
    (28) condition -> . condition OR condition
    (29) condition -> . condition NOT condition
    (30) condition -> . condition AND condition
    (31) condition -> . expression NOTEQUAL expression
    (32) condition -> . expression GREATER expression
    (33) condition -> . expression LESS expression
    (34) condition -> . expression GREATEREQUAL expression
    (35) condition -> . expression LESSEQUAL expression
    (36) condition -> . LPAREN condition RPAREN
    (37) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 61
    NOT             shift and go to state 64
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    condition                      shift and go to state 99
    expression                     shift and go to state 63
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 80

    (30) condition -> condition AND . condition
    (24) condition -> . expression OR expression
    (25) condition -> . expression NOT expression
    (26) condition -> . expression AND expression
    (27) condition -> . expression EQUAL expression
    (28) condition -> . condition OR condition
    (29) condition -> . condition NOT condition
    (30) condition -> . condition AND condition
    (31) condition -> . expression NOTEQUAL expression
    (32) condition -> . expression GREATER expression
    (33) condition -> . expression LESS expression
    (34) condition -> . expression GREATEREQUAL expression
    (35) condition -> . expression LESSEQUAL expression
    (36) condition -> . LPAREN condition RPAREN
    (37) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 61
    NOT             shift and go to state 64
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    condition                      shift and go to state 100
    expression                     shift and go to state 63
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 81

    (24) condition -> expression OR . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 101
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 82

    (25) condition -> expression NOT . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 102
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 83

    (26) condition -> expression AND . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 103
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 84

    (27) condition -> expression EQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 104
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 85

    (31) condition -> expression NOTEQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 105
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 86

    (32) condition -> expression GREATER . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 106
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 87

    (33) condition -> expression LESS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 107
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 88

    (34) condition -> expression GREATEREQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 108
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 89

    (35) condition -> expression LESSEQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 109
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 90

    (37) condition -> NOT condition .
    (28) condition -> condition . OR condition
    (29) condition -> condition . NOT condition
    (30) condition -> condition . AND condition

    RPAREN          reduce using rule 37 (condition -> NOT condition .)
    OR              reduce using rule 37 (condition -> NOT condition .)
    NOT             reduce using rule 37 (condition -> NOT condition .)
    AND             reduce using rule 37 (condition -> NOT condition .)
    SEMICOLON       reduce using rule 37 (condition -> NOT condition .)

  ! OR              [ shift and go to state 78 ]
  ! NOT             [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]


state 91

    (58) for -> FOR LPAREN for_initilizer SEMICOLON . condition SEMICOLON expression RPAREN scope
    (24) condition -> . expression OR expression
    (25) condition -> . expression NOT expression
    (26) condition -> . expression AND expression
    (27) condition -> . expression EQUAL expression
    (28) condition -> . condition OR condition
    (29) condition -> . condition NOT condition
    (30) condition -> . condition AND condition
    (31) condition -> . expression NOTEQUAL expression
    (32) condition -> . expression GREATER expression
    (33) condition -> . expression LESS expression
    (34) condition -> . expression GREATEREQUAL expression
    (35) condition -> . expression LESSEQUAL expression
    (36) condition -> . LPAREN condition RPAREN
    (37) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 61
    NOT             shift and go to state 64
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    condition                      shift and go to state 110
    expression                     shift and go to state 63
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 92

    (60) while -> WHILE LPAREN condition RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 111

state 93

    (55) print -> PRINT LPAREN litstring RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 112


state 94

    (57) print -> PRINT LPAREN litstring COMMA . param RPAREN SEMICOLON
    (47) param -> . param COMMA param
    (48) param -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    param                          shift and go to state 113
    term                           shift and go to state 114
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 95

    (56) print -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 115


state 96

    (36) condition -> LPAREN condition RPAREN .

    RPAREN          reduce using rule 36 (condition -> LPAREN condition RPAREN .)
    OR              reduce using rule 36 (condition -> LPAREN condition RPAREN .)
    NOT             reduce using rule 36 (condition -> LPAREN condition RPAREN .)
    AND             reduce using rule 36 (condition -> LPAREN condition RPAREN .)
    SEMICOLON       reduce using rule 36 (condition -> LPAREN condition RPAREN .)


state 97

    (49) if -> IF LPAREN condition RPAREN scope .
    (50) if -> IF LPAREN condition RPAREN scope . elseif
    (51) if -> IF LPAREN condition RPAREN scope . ELSE scope
    (52) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (53) elseif -> . ELSEIF LPAREN condition RPAREN scope elseif
    (54) elseif -> . ELSEIF LPAREN condition RPAREN scope ELSE scope

    RBRAKETS        reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    IF              reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    FOR             reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    ID              reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    INT             reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    STRING          reduce using rule 49 (if -> IF LPAREN condition RPAREN scope .)
    ELSE            shift and go to state 117
    ELSEIF          shift and go to state 118

    elseif                         shift and go to state 116

state 98

    (28) condition -> condition OR condition .
    (28) condition -> condition . OR condition
    (29) condition -> condition . NOT condition
    (30) condition -> condition . AND condition

    RPAREN          reduce using rule 28 (condition -> condition OR condition .)
    OR              reduce using rule 28 (condition -> condition OR condition .)
    SEMICOLON       reduce using rule 28 (condition -> condition OR condition .)
    NOT             shift and go to state 79
    AND             shift and go to state 80

  ! NOT             [ reduce using rule 28 (condition -> condition OR condition .) ]
  ! AND             [ reduce using rule 28 (condition -> condition OR condition .) ]
  ! OR              [ shift and go to state 78 ]


state 99

    (29) condition -> condition NOT condition .
    (28) condition -> condition . OR condition
    (29) condition -> condition . NOT condition
    (30) condition -> condition . AND condition

    RPAREN          reduce using rule 29 (condition -> condition NOT condition .)
    OR              reduce using rule 29 (condition -> condition NOT condition .)
    NOT             reduce using rule 29 (condition -> condition NOT condition .)
    AND             reduce using rule 29 (condition -> condition NOT condition .)
    SEMICOLON       reduce using rule 29 (condition -> condition NOT condition .)

  ! OR              [ shift and go to state 78 ]
  ! NOT             [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]


state 100

    (30) condition -> condition AND condition .
    (28) condition -> condition . OR condition
    (29) condition -> condition . NOT condition
    (30) condition -> condition . AND condition

    RPAREN          reduce using rule 30 (condition -> condition AND condition .)
    OR              reduce using rule 30 (condition -> condition AND condition .)
    AND             reduce using rule 30 (condition -> condition AND condition .)
    SEMICOLON       reduce using rule 30 (condition -> condition AND condition .)
    NOT             shift and go to state 79

  ! NOT             [ reduce using rule 30 (condition -> condition AND condition .) ]
  ! OR              [ shift and go to state 78 ]
  ! AND             [ shift and go to state 80 ]


state 101

    (24) condition -> expression OR expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 24 (condition -> expression OR expression .)
    OR              reduce using rule 24 (condition -> expression OR expression .)
    NOT             reduce using rule 24 (condition -> expression OR expression .)
    AND             reduce using rule 24 (condition -> expression OR expression .)
    SEMICOLON       reduce using rule 24 (condition -> expression OR expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 102

    (25) condition -> expression NOT expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 25 (condition -> expression NOT expression .)
    OR              reduce using rule 25 (condition -> expression NOT expression .)
    NOT             reduce using rule 25 (condition -> expression NOT expression .)
    AND             reduce using rule 25 (condition -> expression NOT expression .)
    SEMICOLON       reduce using rule 25 (condition -> expression NOT expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 103

    (26) condition -> expression AND expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 26 (condition -> expression AND expression .)
    OR              reduce using rule 26 (condition -> expression AND expression .)
    NOT             reduce using rule 26 (condition -> expression AND expression .)
    AND             reduce using rule 26 (condition -> expression AND expression .)
    SEMICOLON       reduce using rule 26 (condition -> expression AND expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 104

    (27) condition -> expression EQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 27 (condition -> expression EQUAL expression .)
    OR              reduce using rule 27 (condition -> expression EQUAL expression .)
    NOT             reduce using rule 27 (condition -> expression EQUAL expression .)
    AND             reduce using rule 27 (condition -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 27 (condition -> expression EQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 105

    (31) condition -> expression NOTEQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 31 (condition -> expression NOTEQUAL expression .)
    OR              reduce using rule 31 (condition -> expression NOTEQUAL expression .)
    NOT             reduce using rule 31 (condition -> expression NOTEQUAL expression .)
    AND             reduce using rule 31 (condition -> expression NOTEQUAL expression .)
    SEMICOLON       reduce using rule 31 (condition -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 106

    (32) condition -> expression GREATER expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 32 (condition -> expression GREATER expression .)
    OR              reduce using rule 32 (condition -> expression GREATER expression .)
    NOT             reduce using rule 32 (condition -> expression GREATER expression .)
    AND             reduce using rule 32 (condition -> expression GREATER expression .)
    SEMICOLON       reduce using rule 32 (condition -> expression GREATER expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 107

    (33) condition -> expression LESS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 33 (condition -> expression LESS expression .)
    OR              reduce using rule 33 (condition -> expression LESS expression .)
    NOT             reduce using rule 33 (condition -> expression LESS expression .)
    AND             reduce using rule 33 (condition -> expression LESS expression .)
    SEMICOLON       reduce using rule 33 (condition -> expression LESS expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 108

    (34) condition -> expression GREATEREQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 34 (condition -> expression GREATEREQUAL expression .)
    OR              reduce using rule 34 (condition -> expression GREATEREQUAL expression .)
    NOT             reduce using rule 34 (condition -> expression GREATEREQUAL expression .)
    AND             reduce using rule 34 (condition -> expression GREATEREQUAL expression .)
    SEMICOLON       reduce using rule 34 (condition -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 109

    (35) condition -> expression LESSEQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 35 (condition -> expression LESSEQUAL expression .)
    OR              reduce using rule 35 (condition -> expression LESSEQUAL expression .)
    NOT             reduce using rule 35 (condition -> expression LESSEQUAL expression .)
    AND             reduce using rule 35 (condition -> expression LESSEQUAL expression .)
    SEMICOLON       reduce using rule 35 (condition -> expression LESSEQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 110

    (58) for -> FOR LPAREN for_initilizer SEMICOLON condition . SEMICOLON expression RPAREN scope
    (28) condition -> condition . OR condition
    (29) condition -> condition . NOT condition
    (30) condition -> condition . AND condition

    SEMICOLON       shift and go to state 119
    OR              shift and go to state 78
    NOT             shift and go to state 79
    AND             shift and go to state 80


state 111

    (60) while -> WHILE LPAREN condition RPAREN scope .

    RBRAKETS        reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)
    IF              reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)
    FOR             reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)
    ID              reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)
    INT             reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)
    STRING          reduce using rule 60 (while -> WHILE LPAREN condition RPAREN scope .)


state 112

    (55) print -> PRINT LPAREN litstring RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    LPAREN          reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    IF              reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    FOR             reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    WHILE           reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    PRINT           reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    RETURN          reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    ID              reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    NUMBER          reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    INT             reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    FLOAT           reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    STRING          reduce using rule 55 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)


state 113

    (57) print -> PRINT LPAREN litstring COMMA param . RPAREN SEMICOLON
    (47) param -> param . COMMA param

    RPAREN          shift and go to state 121
    COMMA           shift and go to state 120


state 114

    (48) param -> term .

    RPAREN          reduce using rule 48 (param -> term .)
    COMMA           reduce using rule 48 (param -> term .)


state 115

    (56) print -> PRINT LPAREN expression RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 56 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 116

    (50) if -> IF LPAREN condition RPAREN scope elseif .

    RBRAKETS        reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)
    LPAREN          reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)
    IF              reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)
    FOR             reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)
    WHILE           reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)
    PRINT           reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)
    RETURN          reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)
    ID              reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)
    NUMBER          reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)
    INT             reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)
    FLOAT           reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)
    STRING          reduce using rule 50 (if -> IF LPAREN condition RPAREN scope elseif .)


state 117

    (51) if -> IF LPAREN condition RPAREN scope ELSE . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 122

state 118

    (52) elseif -> ELSEIF . LPAREN condition RPAREN scope
    (53) elseif -> ELSEIF . LPAREN condition RPAREN scope elseif
    (54) elseif -> ELSEIF . LPAREN condition RPAREN scope ELSE scope

    LPAREN          shift and go to state 123


state 119

    (58) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON . expression RPAREN scope
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 11
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    expression                     shift and go to state 124
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 120

    (47) param -> param COMMA . param
    (47) param -> . param COMMA param
    (48) param -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    param                          shift and go to state 125
    term                           shift and go to state 114
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 121

    (57) print -> PRINT LPAREN litstring COMMA param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 126


state 122

    (51) if -> IF LPAREN condition RPAREN scope ELSE scope .

    RBRAKETS        reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    LPAREN          reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    IF              reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    FOR             reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    WHILE           reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    PRINT           reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    RETURN          reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    ID              reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    NUMBER          reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    INT             reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    FLOAT           reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    STRING          reduce using rule 51 (if -> IF LPAREN condition RPAREN scope ELSE scope .)


state 123

    (52) elseif -> ELSEIF LPAREN . condition RPAREN scope
    (53) elseif -> ELSEIF LPAREN . condition RPAREN scope elseif
    (54) elseif -> ELSEIF LPAREN . condition RPAREN scope ELSE scope
    (24) condition -> . expression OR expression
    (25) condition -> . expression NOT expression
    (26) condition -> . expression AND expression
    (27) condition -> . expression EQUAL expression
    (28) condition -> . condition OR condition
    (29) condition -> . condition NOT condition
    (30) condition -> . condition AND condition
    (31) condition -> . expression NOTEQUAL expression
    (32) condition -> . expression GREATER expression
    (33) condition -> . expression LESS expression
    (34) condition -> . expression GREATEREQUAL expression
    (35) condition -> . expression LESSEQUAL expression
    (36) condition -> . LPAREN condition RPAREN
    (37) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . instance
    (11) term -> . factor
    (12) instance -> . type ID
    (13) instance -> . ID
    (14) factor -> . NUMBER
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING

    LPAREN          shift and go to state 61
    NOT             shift and go to state 64
    ID              shift and go to state 27
    NUMBER          shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    STRING          shift and go to state 31

    condition                      shift and go to state 127
    expression                     shift and go to state 63
    term                           shift and go to state 12
    instance                       shift and go to state 43
    factor                         shift and go to state 20
    type                           shift and go to state 26

state 124

    (58) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression . RPAREN scope
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 128
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 125

    (47) param -> param COMMA param .
    (47) param -> param . COMMA param

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 47 (param -> param COMMA param .)
    COMMA           shift and go to state 120

  ! COMMA           [ reduce using rule 47 (param -> param COMMA param .) ]


state 126

    (57) print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    LPAREN          reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    IF              reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    FOR             reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    WHILE           reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    PRINT           reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    RETURN          reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    ID              reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    NUMBER          reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    INT             reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    FLOAT           reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    STRING          reduce using rule 57 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)


state 127

    (52) elseif -> ELSEIF LPAREN condition . RPAREN scope
    (53) elseif -> ELSEIF LPAREN condition . RPAREN scope elseif
    (54) elseif -> ELSEIF LPAREN condition . RPAREN scope ELSE scope
    (28) condition -> condition . OR condition
    (29) condition -> condition . NOT condition
    (30) condition -> condition . AND condition

    RPAREN          shift and go to state 129
    OR              shift and go to state 78
    NOT             shift and go to state 79
    AND             shift and go to state 80


state 128

    (58) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 130

state 129

    (52) elseif -> ELSEIF LPAREN condition RPAREN . scope
    (53) elseif -> ELSEIF LPAREN condition RPAREN . scope elseif
    (54) elseif -> ELSEIF LPAREN condition RPAREN . scope ELSE scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 131

state 130

    (58) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .

    RBRAKETS        reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    LPAREN          reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    IF              reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    FOR             reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    WHILE           reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    PRINT           reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    RETURN          reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    ID              reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    NUMBER          reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    INT             reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    FLOAT           reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    STRING          reduce using rule 58 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)


state 131

    (52) elseif -> ELSEIF LPAREN condition RPAREN scope .
    (53) elseif -> ELSEIF LPAREN condition RPAREN scope . elseif
    (54) elseif -> ELSEIF LPAREN condition RPAREN scope . ELSE scope
    (52) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (53) elseif -> . ELSEIF LPAREN condition RPAREN scope elseif
    (54) elseif -> . ELSEIF LPAREN condition RPAREN scope ELSE scope

    RBRAKETS        reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    IF              reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    FOR             reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    ID              reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    INT             reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    STRING          reduce using rule 52 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    ELSE            shift and go to state 133
    ELSEIF          shift and go to state 118

    elseif                         shift and go to state 132

state 132

    (53) elseif -> ELSEIF LPAREN condition RPAREN scope elseif .

    RBRAKETS        reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    LPAREN          reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    IF              reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    FOR             reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    WHILE           reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    PRINT           reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    RETURN          reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    ID              reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    NUMBER          reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    INT             reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    FLOAT           reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    STRING          reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)


state 133

    (54) elseif -> ELSEIF LPAREN condition RPAREN scope ELSE . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 134

state 134

    (54) elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .

    RBRAKETS        reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    LPAREN          reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    IF              reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    FOR             reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    WHILE           reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    PRINT           reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    RETURN          reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    ID              reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    NUMBER          reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    INT             reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    FLOAT           reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    STRING          reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 57 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 125 resolved as shift
