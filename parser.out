Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    FALSE
    LSQUAREB
    RSQUAREB
    TRUE

Grammar

Rule 0     S' -> main
Rule 1     main -> INT MAIN LPAREN RPAREN scope
Rule 2     new_scope -> <empty>
Rule 3     scope -> new_scope LBRAKETS multiple_statements RBRAKETS
Rule 4     scope -> new_scope LBRAKETS expression RBRAKETS
Rule 5     expression -> expression PLUS expression
Rule 6     expression -> expression MINUS expression
Rule 7     expression -> expression TIMES expression
Rule 8     expression -> expression DIVIDE expression
Rule 9     expression -> LPAREN expression RPAREN
Rule 10    expression -> term
Rule 11    term -> instance
Rule 12    term -> factor
Rule 13    instance -> type ID
Rule 14    instance -> ID
Rule 15    factor -> NUMBER
Rule 16    type -> INT
Rule 17    type -> FLOAT
Rule 18    type -> STRING
Rule 19    litstring -> LITSTRING
Rule 20    adress -> instance ADRESS factor SEMICOLON
Rule 21    adress -> instance ADRESS litstring SEMICOLON
Rule 22    adress -> instance ADRESS expression SEMICOLON
Rule 23    return -> RETURN expression SEMICOLON
Rule 24    return -> RETURN SEMICOLON
Rule 25    condition -> expression OR expression
Rule 26    condition -> expression NOT expression
Rule 27    condition -> expression AND expression
Rule 28    condition -> expression EQUAL expression
Rule 29    condition -> condition OR condition
Rule 30    condition -> condition NOT condition
Rule 31    condition -> condition AND condition
Rule 32    condition -> expression NOTEQUAL expression
Rule 33    condition -> expression GREATER expression
Rule 34    condition -> expression LESS expression
Rule 35    condition -> expression GREATEREQUAL expression
Rule 36    condition -> expression LESSEQUAL expression
Rule 37    condition -> LPAREN condition RPAREN
Rule 38    condition -> NOT condition
Rule 39    multiple_statements -> multiple_statements statement
Rule 40    multiple_statements -> statement
Rule 41    statement -> expression SEMICOLON
Rule 42    statement -> if
Rule 43    statement -> for
Rule 44    statement -> while
Rule 45    statement -> print
Rule 46    statement -> adress
Rule 47    statement -> return
Rule 48    param -> param COMMA param
Rule 49    param -> term
Rule 50    if -> IF LPAREN condition RPAREN scope
Rule 51    if -> IF LPAREN condition RPAREN scope elseif
Rule 52    if -> IF LPAREN condition RPAREN scope ELSE scope
Rule 53    elseif -> ELSEIF LPAREN condition RPAREN scope
Rule 54    elseif -> ELSEIF LPAREN condition RPAREN scope elseif
Rule 55    elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope
Rule 56    print -> PRINT LPAREN litstring RPAREN SEMICOLON
Rule 57    print -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 58    print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON
Rule 59    for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope
Rule 60    for_initilizer -> adress
Rule 61    while -> WHILE LPAREN condition RPAREN scope

Terminals, with rules where they appear

ADRESS               : 20 21 22
AND                  : 27 31
BOOL                 : 
COMMA                : 48 58
DIVIDE               : 8
ELSE                 : 52 55
ELSEIF               : 53 54 55
EQUAL                : 28
FALSE                : 
FLOAT                : 17
FOR                  : 59
GREATER              : 33
GREATEREQUAL         : 35
ID                   : 13 14
IF                   : 50 51 52
INT                  : 1 16
LBRAKETS             : 3 4
LESS                 : 34
LESSEQUAL            : 36
LITSTRING            : 19
LPAREN               : 1 9 37 50 51 52 53 54 55 56 57 58 59 61
LSQUAREB             : 
MAIN                 : 1
MINUS                : 6
NOT                  : 26 30 38
NOTEQUAL             : 32
NUMBER               : 15
OR                   : 25 29
PLUS                 : 5
PRINT                : 56 57 58
RBRAKETS             : 3 4
RETURN               : 23 24
RPAREN               : 1 9 37 50 51 52 53 54 55 56 57 58 59 61
RSQUAREB             : 
SEMICOLON            : 20 21 22 23 24 41 56 57 58 59
STRING               : 18
TIMES                : 7
TRUE                 : 
WHILE                : 61
error                : 

Nonterminals, with rules where they appear

adress               : 46 60
condition            : 29 29 30 30 31 31 37 38 50 51 52 53 54 55 59 61
elseif               : 51 54
expression           : 4 5 5 6 6 7 7 8 8 9 22 23 25 25 26 26 27 27 28 28 32 32 33 33 34 34 35 35 36 36 41 57 59
factor               : 12 20
for                  : 43
for_initilizer       : 59
if                   : 42
instance             : 11 20 21 22
litstring            : 21 56 58
main                 : 0
multiple_statements  : 3 39
new_scope            : 3 4
param                : 48 48 58
print                : 45
return               : 47
scope                : 1 50 51 52 52 53 54 55 55 59 61
statement            : 39 40
term                 : 10 49
type                 : 13
while                : 44

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . INT MAIN LPAREN RPAREN scope

    INT             shift and go to state 2

    main                           shift and go to state 1

state 1

    (0) S' -> main .



state 2

    (1) main -> INT . MAIN LPAREN RPAREN scope

    MAIN            shift and go to state 3


state 3

    (1) main -> INT MAIN . LPAREN RPAREN scope

    LPAREN          shift and go to state 4


state 4

    (1) main -> INT MAIN LPAREN . RPAREN scope

    RPAREN          shift and go to state 5


state 5

    (1) main -> INT MAIN LPAREN RPAREN . scope
    (3) scope -> . new_scope LBRAKETS multiple_statements RBRAKETS
    (4) scope -> . new_scope LBRAKETS expression RBRAKETS
    (2) new_scope -> .

    LBRAKETS        reduce using rule 2 (new_scope -> .)

    scope                          shift and go to state 6
    new_scope                      shift and go to state 7

state 6

    (1) main -> INT MAIN LPAREN RPAREN scope .

    $end            reduce using rule 1 (main -> INT MAIN LPAREN RPAREN scope .)


state 7

    (3) scope -> new_scope . LBRAKETS multiple_statements RBRAKETS
    (4) scope -> new_scope . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 8


state 8

    (3) scope -> new_scope LBRAKETS . multiple_statements RBRAKETS
    (4) scope -> new_scope LBRAKETS . expression RBRAKETS
    (39) multiple_statements -> . multiple_statements statement
    (40) multiple_statements -> . statement
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (41) statement -> . expression SEMICOLON
    (42) statement -> . if
    (43) statement -> . for
    (44) statement -> . while
    (45) statement -> . print
    (46) statement -> . adress
    (47) statement -> . return
    (11) term -> . instance
    (12) term -> . factor
    (50) if -> . IF LPAREN condition RPAREN scope
    (51) if -> . IF LPAREN condition RPAREN scope elseif
    (52) if -> . IF LPAREN condition RPAREN scope ELSE scope
    (59) for -> . FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope
    (61) while -> . WHILE LPAREN condition RPAREN scope
    (56) print -> . PRINT LPAREN litstring RPAREN SEMICOLON
    (57) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (58) print -> . PRINT LPAREN litstring COMMA param RPAREN SEMICOLON
    (20) adress -> . instance ADRESS factor SEMICOLON
    (21) adress -> . instance ADRESS litstring SEMICOLON
    (22) adress -> . instance ADRESS expression SEMICOLON
    (23) return -> . RETURN expression SEMICOLON
    (24) return -> . RETURN SEMICOLON
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    multiple_statements            shift and go to state 9
    expression                     shift and go to state 10
    statement                      shift and go to state 11
    term                           shift and go to state 13
    if                             shift and go to state 14
    for                            shift and go to state 15
    while                          shift and go to state 16
    print                          shift and go to state 17
    adress                         shift and go to state 18
    return                         shift and go to state 19
    instance                       shift and go to state 20
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 9

    (3) scope -> new_scope LBRAKETS multiple_statements . RBRAKETS
    (39) multiple_statements -> multiple_statements . statement
    (41) statement -> . expression SEMICOLON
    (42) statement -> . if
    (43) statement -> . for
    (44) statement -> . while
    (45) statement -> . print
    (46) statement -> . adress
    (47) statement -> . return
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (50) if -> . IF LPAREN condition RPAREN scope
    (51) if -> . IF LPAREN condition RPAREN scope elseif
    (52) if -> . IF LPAREN condition RPAREN scope ELSE scope
    (59) for -> . FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope
    (61) while -> . WHILE LPAREN condition RPAREN scope
    (56) print -> . PRINT LPAREN litstring RPAREN SEMICOLON
    (57) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (58) print -> . PRINT LPAREN litstring COMMA param RPAREN SEMICOLON
    (20) adress -> . instance ADRESS factor SEMICOLON
    (21) adress -> . instance ADRESS litstring SEMICOLON
    (22) adress -> . instance ADRESS expression SEMICOLON
    (23) return -> . RETURN expression SEMICOLON
    (24) return -> . RETURN SEMICOLON
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    RBRAKETS        shift and go to state 33
    LPAREN          shift and go to state 12
    IF              shift and go to state 22
    FOR             shift and go to state 23
    WHILE           shift and go to state 24
    PRINT           shift and go to state 25
    RETURN          shift and go to state 26
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    statement                      shift and go to state 34
    expression                     shift and go to state 35
    if                             shift and go to state 14
    for                            shift and go to state 15
    while                          shift and go to state 16
    print                          shift and go to state 17
    adress                         shift and go to state 18
    return                         shift and go to state 19
    term                           shift and go to state 13
    instance                       shift and go to state 36
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 10

    (4) scope -> new_scope LBRAKETS expression . RBRAKETS
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression
    (41) statement -> expression . SEMICOLON

    RBRAKETS        shift and go to state 37
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    SEMICOLON       shift and go to state 42


state 11

    (40) multiple_statements -> statement .

    RBRAKETS        reduce using rule 40 (multiple_statements -> statement .)
    LPAREN          reduce using rule 40 (multiple_statements -> statement .)
    IF              reduce using rule 40 (multiple_statements -> statement .)
    FOR             reduce using rule 40 (multiple_statements -> statement .)
    WHILE           reduce using rule 40 (multiple_statements -> statement .)
    PRINT           reduce using rule 40 (multiple_statements -> statement .)
    RETURN          reduce using rule 40 (multiple_statements -> statement .)
    ID              reduce using rule 40 (multiple_statements -> statement .)
    NUMBER          reduce using rule 40 (multiple_statements -> statement .)
    INT             reduce using rule 40 (multiple_statements -> statement .)
    FLOAT           reduce using rule 40 (multiple_statements -> statement .)
    STRING          reduce using rule 40 (multiple_statements -> statement .)


state 12

    (9) expression -> LPAREN . expression RPAREN
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 43
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 13

    (10) expression -> term .

    RBRAKETS        reduce using rule 10 (expression -> term .)
    PLUS            reduce using rule 10 (expression -> term .)
    MINUS           reduce using rule 10 (expression -> term .)
    TIMES           reduce using rule 10 (expression -> term .)
    DIVIDE          reduce using rule 10 (expression -> term .)
    SEMICOLON       reduce using rule 10 (expression -> term .)
    RPAREN          reduce using rule 10 (expression -> term .)
    OR              reduce using rule 10 (expression -> term .)
    NOT             reduce using rule 10 (expression -> term .)
    AND             reduce using rule 10 (expression -> term .)
    EQUAL           reduce using rule 10 (expression -> term .)
    NOTEQUAL        reduce using rule 10 (expression -> term .)
    GREATER         reduce using rule 10 (expression -> term .)
    LESS            reduce using rule 10 (expression -> term .)
    GREATEREQUAL    reduce using rule 10 (expression -> term .)
    LESSEQUAL       reduce using rule 10 (expression -> term .)


state 14

    (42) statement -> if .

    RBRAKETS        reduce using rule 42 (statement -> if .)
    LPAREN          reduce using rule 42 (statement -> if .)
    IF              reduce using rule 42 (statement -> if .)
    FOR             reduce using rule 42 (statement -> if .)
    WHILE           reduce using rule 42 (statement -> if .)
    PRINT           reduce using rule 42 (statement -> if .)
    RETURN          reduce using rule 42 (statement -> if .)
    ID              reduce using rule 42 (statement -> if .)
    NUMBER          reduce using rule 42 (statement -> if .)
    INT             reduce using rule 42 (statement -> if .)
    FLOAT           reduce using rule 42 (statement -> if .)
    STRING          reduce using rule 42 (statement -> if .)


state 15

    (43) statement -> for .

    RBRAKETS        reduce using rule 43 (statement -> for .)
    LPAREN          reduce using rule 43 (statement -> for .)
    IF              reduce using rule 43 (statement -> for .)
    FOR             reduce using rule 43 (statement -> for .)
    WHILE           reduce using rule 43 (statement -> for .)
    PRINT           reduce using rule 43 (statement -> for .)
    RETURN          reduce using rule 43 (statement -> for .)
    ID              reduce using rule 43 (statement -> for .)
    NUMBER          reduce using rule 43 (statement -> for .)
    INT             reduce using rule 43 (statement -> for .)
    FLOAT           reduce using rule 43 (statement -> for .)
    STRING          reduce using rule 43 (statement -> for .)


state 16

    (44) statement -> while .

    RBRAKETS        reduce using rule 44 (statement -> while .)
    LPAREN          reduce using rule 44 (statement -> while .)
    IF              reduce using rule 44 (statement -> while .)
    FOR             reduce using rule 44 (statement -> while .)
    WHILE           reduce using rule 44 (statement -> while .)
    PRINT           reduce using rule 44 (statement -> while .)
    RETURN          reduce using rule 44 (statement -> while .)
    ID              reduce using rule 44 (statement -> while .)
    NUMBER          reduce using rule 44 (statement -> while .)
    INT             reduce using rule 44 (statement -> while .)
    FLOAT           reduce using rule 44 (statement -> while .)
    STRING          reduce using rule 44 (statement -> while .)


state 17

    (45) statement -> print .

    RBRAKETS        reduce using rule 45 (statement -> print .)
    LPAREN          reduce using rule 45 (statement -> print .)
    IF              reduce using rule 45 (statement -> print .)
    FOR             reduce using rule 45 (statement -> print .)
    WHILE           reduce using rule 45 (statement -> print .)
    PRINT           reduce using rule 45 (statement -> print .)
    RETURN          reduce using rule 45 (statement -> print .)
    ID              reduce using rule 45 (statement -> print .)
    NUMBER          reduce using rule 45 (statement -> print .)
    INT             reduce using rule 45 (statement -> print .)
    FLOAT           reduce using rule 45 (statement -> print .)
    STRING          reduce using rule 45 (statement -> print .)


state 18

    (46) statement -> adress .

    RBRAKETS        reduce using rule 46 (statement -> adress .)
    LPAREN          reduce using rule 46 (statement -> adress .)
    IF              reduce using rule 46 (statement -> adress .)
    FOR             reduce using rule 46 (statement -> adress .)
    WHILE           reduce using rule 46 (statement -> adress .)
    PRINT           reduce using rule 46 (statement -> adress .)
    RETURN          reduce using rule 46 (statement -> adress .)
    ID              reduce using rule 46 (statement -> adress .)
    NUMBER          reduce using rule 46 (statement -> adress .)
    INT             reduce using rule 46 (statement -> adress .)
    FLOAT           reduce using rule 46 (statement -> adress .)
    STRING          reduce using rule 46 (statement -> adress .)


state 19

    (47) statement -> return .

    RBRAKETS        reduce using rule 47 (statement -> return .)
    LPAREN          reduce using rule 47 (statement -> return .)
    IF              reduce using rule 47 (statement -> return .)
    FOR             reduce using rule 47 (statement -> return .)
    WHILE           reduce using rule 47 (statement -> return .)
    PRINT           reduce using rule 47 (statement -> return .)
    RETURN          reduce using rule 47 (statement -> return .)
    ID              reduce using rule 47 (statement -> return .)
    NUMBER          reduce using rule 47 (statement -> return .)
    INT             reduce using rule 47 (statement -> return .)
    FLOAT           reduce using rule 47 (statement -> return .)
    STRING          reduce using rule 47 (statement -> return .)


state 20

    (11) term -> instance .
    (20) adress -> instance . ADRESS factor SEMICOLON
    (21) adress -> instance . ADRESS litstring SEMICOLON
    (22) adress -> instance . ADRESS expression SEMICOLON

    RBRAKETS        reduce using rule 11 (term -> instance .)
    PLUS            reduce using rule 11 (term -> instance .)
    MINUS           reduce using rule 11 (term -> instance .)
    TIMES           reduce using rule 11 (term -> instance .)
    DIVIDE          reduce using rule 11 (term -> instance .)
    SEMICOLON       reduce using rule 11 (term -> instance .)
    ADRESS          shift and go to state 45


state 21

    (12) term -> factor .

    RBRAKETS        reduce using rule 12 (term -> factor .)
    PLUS            reduce using rule 12 (term -> factor .)
    MINUS           reduce using rule 12 (term -> factor .)
    TIMES           reduce using rule 12 (term -> factor .)
    DIVIDE          reduce using rule 12 (term -> factor .)
    SEMICOLON       reduce using rule 12 (term -> factor .)
    RPAREN          reduce using rule 12 (term -> factor .)
    OR              reduce using rule 12 (term -> factor .)
    NOT             reduce using rule 12 (term -> factor .)
    AND             reduce using rule 12 (term -> factor .)
    EQUAL           reduce using rule 12 (term -> factor .)
    NOTEQUAL        reduce using rule 12 (term -> factor .)
    GREATER         reduce using rule 12 (term -> factor .)
    LESS            reduce using rule 12 (term -> factor .)
    GREATEREQUAL    reduce using rule 12 (term -> factor .)
    LESSEQUAL       reduce using rule 12 (term -> factor .)
    COMMA           reduce using rule 12 (term -> factor .)


state 22

    (50) if -> IF . LPAREN condition RPAREN scope
    (51) if -> IF . LPAREN condition RPAREN scope elseif
    (52) if -> IF . LPAREN condition RPAREN scope ELSE scope

    LPAREN          shift and go to state 46


state 23

    (59) for -> FOR . LPAREN for_initilizer condition SEMICOLON expression RPAREN scope

    LPAREN          shift and go to state 47


state 24

    (61) while -> WHILE . LPAREN condition RPAREN scope

    LPAREN          shift and go to state 48


state 25

    (56) print -> PRINT . LPAREN litstring RPAREN SEMICOLON
    (57) print -> PRINT . LPAREN expression RPAREN SEMICOLON
    (58) print -> PRINT . LPAREN litstring COMMA param RPAREN SEMICOLON

    LPAREN          shift and go to state 49


state 26

    (23) return -> RETURN . expression SEMICOLON
    (24) return -> RETURN . SEMICOLON
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    SEMICOLON       shift and go to state 51
    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 50
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 27

    (13) instance -> type . ID

    ID              shift and go to state 52


state 28

    (14) instance -> ID .

    ADRESS          reduce using rule 14 (instance -> ID .)
    RBRAKETS        reduce using rule 14 (instance -> ID .)
    PLUS            reduce using rule 14 (instance -> ID .)
    MINUS           reduce using rule 14 (instance -> ID .)
    TIMES           reduce using rule 14 (instance -> ID .)
    DIVIDE          reduce using rule 14 (instance -> ID .)
    SEMICOLON       reduce using rule 14 (instance -> ID .)
    RPAREN          reduce using rule 14 (instance -> ID .)
    OR              reduce using rule 14 (instance -> ID .)
    NOT             reduce using rule 14 (instance -> ID .)
    AND             reduce using rule 14 (instance -> ID .)
    EQUAL           reduce using rule 14 (instance -> ID .)
    NOTEQUAL        reduce using rule 14 (instance -> ID .)
    GREATER         reduce using rule 14 (instance -> ID .)
    LESS            reduce using rule 14 (instance -> ID .)
    GREATEREQUAL    reduce using rule 14 (instance -> ID .)
    LESSEQUAL       reduce using rule 14 (instance -> ID .)
    COMMA           reduce using rule 14 (instance -> ID .)


state 29

    (15) factor -> NUMBER .

    RBRAKETS        reduce using rule 15 (factor -> NUMBER .)
    PLUS            reduce using rule 15 (factor -> NUMBER .)
    MINUS           reduce using rule 15 (factor -> NUMBER .)
    TIMES           reduce using rule 15 (factor -> NUMBER .)
    DIVIDE          reduce using rule 15 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 15 (factor -> NUMBER .)
    RPAREN          reduce using rule 15 (factor -> NUMBER .)
    OR              reduce using rule 15 (factor -> NUMBER .)
    NOT             reduce using rule 15 (factor -> NUMBER .)
    AND             reduce using rule 15 (factor -> NUMBER .)
    EQUAL           reduce using rule 15 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 15 (factor -> NUMBER .)
    GREATER         reduce using rule 15 (factor -> NUMBER .)
    LESS            reduce using rule 15 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 15 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 15 (factor -> NUMBER .)
    COMMA           reduce using rule 15 (factor -> NUMBER .)


state 30

    (16) type -> INT .

    ID              reduce using rule 16 (type -> INT .)


state 31

    (17) type -> FLOAT .

    ID              reduce using rule 17 (type -> FLOAT .)


state 32

    (18) type -> STRING .

    ID              reduce using rule 18 (type -> STRING .)


state 33

    (3) scope -> new_scope LBRAKETS multiple_statements RBRAKETS .

    $end            reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    ELSE            reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    ELSEIF          reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    RBRAKETS        reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    LPAREN          reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    IF              reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    FOR             reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    WHILE           reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    PRINT           reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    RETURN          reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    ID              reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    NUMBER          reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    INT             reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    FLOAT           reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)
    STRING          reduce using rule 3 (scope -> new_scope LBRAKETS multiple_statements RBRAKETS .)


state 34

    (39) multiple_statements -> multiple_statements statement .

    RBRAKETS        reduce using rule 39 (multiple_statements -> multiple_statements statement .)
    LPAREN          reduce using rule 39 (multiple_statements -> multiple_statements statement .)
    IF              reduce using rule 39 (multiple_statements -> multiple_statements statement .)
    FOR             reduce using rule 39 (multiple_statements -> multiple_statements statement .)
    WHILE           reduce using rule 39 (multiple_statements -> multiple_statements statement .)
    PRINT           reduce using rule 39 (multiple_statements -> multiple_statements statement .)
    RETURN          reduce using rule 39 (multiple_statements -> multiple_statements statement .)
    ID              reduce using rule 39 (multiple_statements -> multiple_statements statement .)
    NUMBER          reduce using rule 39 (multiple_statements -> multiple_statements statement .)
    INT             reduce using rule 39 (multiple_statements -> multiple_statements statement .)
    FLOAT           reduce using rule 39 (multiple_statements -> multiple_statements statement .)
    STRING          reduce using rule 39 (multiple_statements -> multiple_statements statement .)


state 35

    (41) statement -> expression . SEMICOLON
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 42
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 36

    (20) adress -> instance . ADRESS factor SEMICOLON
    (21) adress -> instance . ADRESS litstring SEMICOLON
    (22) adress -> instance . ADRESS expression SEMICOLON
    (11) term -> instance .

    ADRESS          shift and go to state 45
    SEMICOLON       reduce using rule 11 (term -> instance .)
    PLUS            reduce using rule 11 (term -> instance .)
    MINUS           reduce using rule 11 (term -> instance .)
    TIMES           reduce using rule 11 (term -> instance .)
    DIVIDE          reduce using rule 11 (term -> instance .)


state 37

    (4) scope -> new_scope LBRAKETS expression RBRAKETS .

    $end            reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    ELSE            reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    ELSEIF          reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    RBRAKETS        reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    LPAREN          reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    IF              reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    FOR             reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    WHILE           reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    PRINT           reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    RETURN          reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    ID              reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    NUMBER          reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    INT             reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    FLOAT           reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)
    STRING          reduce using rule 4 (scope -> new_scope LBRAKETS expression RBRAKETS .)


state 38

    (5) expression -> expression PLUS . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 53
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 39

    (6) expression -> expression MINUS . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 54
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 40

    (7) expression -> expression TIMES . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 55
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 41

    (8) expression -> expression DIVIDE . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 56
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 42

    (41) statement -> expression SEMICOLON .

    RBRAKETS        reduce using rule 41 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 41 (statement -> expression SEMICOLON .)
    IF              reduce using rule 41 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 41 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 41 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 41 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 41 (statement -> expression SEMICOLON .)
    ID              reduce using rule 41 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 41 (statement -> expression SEMICOLON .)
    INT             reduce using rule 41 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 41 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 41 (statement -> expression SEMICOLON .)


state 43

    (9) expression -> LPAREN expression . RPAREN
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 57
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 44

    (11) term -> instance .

    RPAREN          reduce using rule 11 (term -> instance .)
    PLUS            reduce using rule 11 (term -> instance .)
    MINUS           reduce using rule 11 (term -> instance .)
    TIMES           reduce using rule 11 (term -> instance .)
    DIVIDE          reduce using rule 11 (term -> instance .)
    SEMICOLON       reduce using rule 11 (term -> instance .)
    RBRAKETS        reduce using rule 11 (term -> instance .)
    OR              reduce using rule 11 (term -> instance .)
    NOT             reduce using rule 11 (term -> instance .)
    AND             reduce using rule 11 (term -> instance .)
    EQUAL           reduce using rule 11 (term -> instance .)
    NOTEQUAL        reduce using rule 11 (term -> instance .)
    GREATER         reduce using rule 11 (term -> instance .)
    LESS            reduce using rule 11 (term -> instance .)
    GREATEREQUAL    reduce using rule 11 (term -> instance .)
    LESSEQUAL       reduce using rule 11 (term -> instance .)
    COMMA           reduce using rule 11 (term -> instance .)


state 45

    (20) adress -> instance ADRESS . factor SEMICOLON
    (21) adress -> instance ADRESS . litstring SEMICOLON
    (22) adress -> instance ADRESS . expression SEMICOLON
    (15) factor -> . NUMBER
    (19) litstring -> . LITSTRING
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    NUMBER          shift and go to state 29
    LITSTRING       shift and go to state 61
    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    instance                       shift and go to state 44
    factor                         shift and go to state 58
    litstring                      shift and go to state 59
    expression                     shift and go to state 60
    term                           shift and go to state 13
    type                           shift and go to state 27

state 46

    (50) if -> IF LPAREN . condition RPAREN scope
    (51) if -> IF LPAREN . condition RPAREN scope elseif
    (52) if -> IF LPAREN . condition RPAREN scope ELSE scope
    (25) condition -> . expression OR expression
    (26) condition -> . expression NOT expression
    (27) condition -> . expression AND expression
    (28) condition -> . expression EQUAL expression
    (29) condition -> . condition OR condition
    (30) condition -> . condition NOT condition
    (31) condition -> . condition AND condition
    (32) condition -> . expression NOTEQUAL expression
    (33) condition -> . expression GREATER expression
    (34) condition -> . expression LESS expression
    (35) condition -> . expression GREATEREQUAL expression
    (36) condition -> . expression LESSEQUAL expression
    (37) condition -> . LPAREN condition RPAREN
    (38) condition -> . NOT condition
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 62
    NOT             shift and go to state 65
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    condition                      shift and go to state 63
    expression                     shift and go to state 64
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 47

    (59) for -> FOR LPAREN . for_initilizer condition SEMICOLON expression RPAREN scope
    (60) for_initilizer -> . adress
    (20) adress -> . instance ADRESS factor SEMICOLON
    (21) adress -> . instance ADRESS litstring SEMICOLON
    (22) adress -> . instance ADRESS expression SEMICOLON
    (13) instance -> . type ID
    (14) instance -> . ID
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    ID              shift and go to state 28
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    for_initilizer                 shift and go to state 66
    adress                         shift and go to state 67
    instance                       shift and go to state 68
    type                           shift and go to state 27

state 48

    (61) while -> WHILE LPAREN . condition RPAREN scope
    (25) condition -> . expression OR expression
    (26) condition -> . expression NOT expression
    (27) condition -> . expression AND expression
    (28) condition -> . expression EQUAL expression
    (29) condition -> . condition OR condition
    (30) condition -> . condition NOT condition
    (31) condition -> . condition AND condition
    (32) condition -> . expression NOTEQUAL expression
    (33) condition -> . expression GREATER expression
    (34) condition -> . expression LESS expression
    (35) condition -> . expression GREATEREQUAL expression
    (36) condition -> . expression LESSEQUAL expression
    (37) condition -> . LPAREN condition RPAREN
    (38) condition -> . NOT condition
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 62
    NOT             shift and go to state 65
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    condition                      shift and go to state 69
    expression                     shift and go to state 64
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 49

    (56) print -> PRINT LPAREN . litstring RPAREN SEMICOLON
    (57) print -> PRINT LPAREN . expression RPAREN SEMICOLON
    (58) print -> PRINT LPAREN . litstring COMMA param RPAREN SEMICOLON
    (19) litstring -> . LITSTRING
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LITSTRING       shift and go to state 61
    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    litstring                      shift and go to state 70
    expression                     shift and go to state 71
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 50

    (23) return -> RETURN expression . SEMICOLON
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 72
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 51

    (24) return -> RETURN SEMICOLON .

    RBRAKETS        reduce using rule 24 (return -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 24 (return -> RETURN SEMICOLON .)
    IF              reduce using rule 24 (return -> RETURN SEMICOLON .)
    FOR             reduce using rule 24 (return -> RETURN SEMICOLON .)
    WHILE           reduce using rule 24 (return -> RETURN SEMICOLON .)
    PRINT           reduce using rule 24 (return -> RETURN SEMICOLON .)
    RETURN          reduce using rule 24 (return -> RETURN SEMICOLON .)
    ID              reduce using rule 24 (return -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 24 (return -> RETURN SEMICOLON .)
    INT             reduce using rule 24 (return -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 24 (return -> RETURN SEMICOLON .)
    STRING          reduce using rule 24 (return -> RETURN SEMICOLON .)


state 52

    (13) instance -> type ID .

    ADRESS          reduce using rule 13 (instance -> type ID .)
    RBRAKETS        reduce using rule 13 (instance -> type ID .)
    PLUS            reduce using rule 13 (instance -> type ID .)
    MINUS           reduce using rule 13 (instance -> type ID .)
    TIMES           reduce using rule 13 (instance -> type ID .)
    DIVIDE          reduce using rule 13 (instance -> type ID .)
    SEMICOLON       reduce using rule 13 (instance -> type ID .)
    RPAREN          reduce using rule 13 (instance -> type ID .)
    OR              reduce using rule 13 (instance -> type ID .)
    NOT             reduce using rule 13 (instance -> type ID .)
    AND             reduce using rule 13 (instance -> type ID .)
    EQUAL           reduce using rule 13 (instance -> type ID .)
    NOTEQUAL        reduce using rule 13 (instance -> type ID .)
    GREATER         reduce using rule 13 (instance -> type ID .)
    LESS            reduce using rule 13 (instance -> type ID .)
    GREATEREQUAL    reduce using rule 13 (instance -> type ID .)
    LESSEQUAL       reduce using rule 13 (instance -> type ID .)
    COMMA           reduce using rule 13 (instance -> type ID .)


state 53

    (5) expression -> expression PLUS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 5 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 5 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 5 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 5 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 5 (expression -> expression PLUS expression .)
    OR              reduce using rule 5 (expression -> expression PLUS expression .)
    NOT             reduce using rule 5 (expression -> expression PLUS expression .)
    AND             reduce using rule 5 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 5 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 5 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 5 (expression -> expression PLUS expression .)
    LESS            reduce using rule 5 (expression -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 5 (expression -> expression PLUS expression .)
    LESSEQUAL       reduce using rule 5 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

  ! TIMES           [ reduce using rule 5 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]


state 54

    (6) expression -> expression MINUS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 6 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 6 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 6 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 6 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 6 (expression -> expression MINUS expression .)
    OR              reduce using rule 6 (expression -> expression MINUS expression .)
    NOT             reduce using rule 6 (expression -> expression MINUS expression .)
    AND             reduce using rule 6 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 6 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 6 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 6 (expression -> expression MINUS expression .)
    LESS            reduce using rule 6 (expression -> expression MINUS expression .)
    GREATEREQUAL    reduce using rule 6 (expression -> expression MINUS expression .)
    LESSEQUAL       reduce using rule 6 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

  ! TIMES           [ reduce using rule 6 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]


state 55

    (7) expression -> expression TIMES expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 7 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 7 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 7 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 7 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 7 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 7 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 7 (expression -> expression TIMES expression .)
    OR              reduce using rule 7 (expression -> expression TIMES expression .)
    NOT             reduce using rule 7 (expression -> expression TIMES expression .)
    AND             reduce using rule 7 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 7 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 7 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 7 (expression -> expression TIMES expression .)
    LESS            reduce using rule 7 (expression -> expression TIMES expression .)
    GREATEREQUAL    reduce using rule 7 (expression -> expression TIMES expression .)
    LESSEQUAL       reduce using rule 7 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! DIVIDE          [ shift and go to state 41 ]


state 56

    (8) expression -> expression DIVIDE expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 8 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 8 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 8 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 8 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 8 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 8 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 8 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 8 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 8 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 8 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 8 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 8 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 8 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 8 (expression -> expression DIVIDE expression .)
    GREATEREQUAL    reduce using rule 8 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 8 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! DIVIDE          [ shift and go to state 41 ]


state 57

    (9) expression -> LPAREN expression RPAREN .

    RBRAKETS        reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 9 (expression -> LPAREN expression RPAREN .)


state 58

    (20) adress -> instance ADRESS factor . SEMICOLON
    (12) term -> factor .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 73
    PLUS            reduce using rule 12 (term -> factor .)
    MINUS           reduce using rule 12 (term -> factor .)
    TIMES           reduce using rule 12 (term -> factor .)
    DIVIDE          reduce using rule 12 (term -> factor .)

  ! SEMICOLON       [ reduce using rule 12 (term -> factor .) ]


state 59

    (21) adress -> instance ADRESS litstring . SEMICOLON

    SEMICOLON       shift and go to state 74


state 60

    (22) adress -> instance ADRESS expression . SEMICOLON
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 75
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 61

    (19) litstring -> LITSTRING .

    SEMICOLON       reduce using rule 19 (litstring -> LITSTRING .)
    RPAREN          reduce using rule 19 (litstring -> LITSTRING .)
    COMMA           reduce using rule 19 (litstring -> LITSTRING .)


state 62

    (37) condition -> LPAREN . condition RPAREN
    (9) expression -> LPAREN . expression RPAREN
    (25) condition -> . expression OR expression
    (26) condition -> . expression NOT expression
    (27) condition -> . expression AND expression
    (28) condition -> . expression EQUAL expression
    (29) condition -> . condition OR condition
    (30) condition -> . condition NOT condition
    (31) condition -> . condition AND condition
    (32) condition -> . expression NOTEQUAL expression
    (33) condition -> . expression GREATER expression
    (34) condition -> . expression LESS expression
    (35) condition -> . expression GREATEREQUAL expression
    (36) condition -> . expression LESSEQUAL expression
    (37) condition -> . LPAREN condition RPAREN
    (38) condition -> . NOT condition
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 62
    NOT             shift and go to state 65
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    condition                      shift and go to state 76
    expression                     shift and go to state 77
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 63

    (50) if -> IF LPAREN condition . RPAREN scope
    (51) if -> IF LPAREN condition . RPAREN scope elseif
    (52) if -> IF LPAREN condition . RPAREN scope ELSE scope
    (29) condition -> condition . OR condition
    (30) condition -> condition . NOT condition
    (31) condition -> condition . AND condition

    RPAREN          shift and go to state 78
    OR              shift and go to state 79
    NOT             shift and go to state 80
    AND             shift and go to state 81


state 64

    (25) condition -> expression . OR expression
    (26) condition -> expression . NOT expression
    (27) condition -> expression . AND expression
    (28) condition -> expression . EQUAL expression
    (32) condition -> expression . NOTEQUAL expression
    (33) condition -> expression . GREATER expression
    (34) condition -> expression . LESS expression
    (35) condition -> expression . GREATEREQUAL expression
    (36) condition -> expression . LESSEQUAL expression
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    OR              shift and go to state 82
    NOT             shift and go to state 83
    AND             shift and go to state 84
    EQUAL           shift and go to state 85
    NOTEQUAL        shift and go to state 86
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 65

    (38) condition -> NOT . condition
    (25) condition -> . expression OR expression
    (26) condition -> . expression NOT expression
    (27) condition -> . expression AND expression
    (28) condition -> . expression EQUAL expression
    (29) condition -> . condition OR condition
    (30) condition -> . condition NOT condition
    (31) condition -> . condition AND condition
    (32) condition -> . expression NOTEQUAL expression
    (33) condition -> . expression GREATER expression
    (34) condition -> . expression LESS expression
    (35) condition -> . expression GREATEREQUAL expression
    (36) condition -> . expression LESSEQUAL expression
    (37) condition -> . LPAREN condition RPAREN
    (38) condition -> . NOT condition
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 62
    NOT             shift and go to state 65
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    condition                      shift and go to state 91
    expression                     shift and go to state 64
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 66

    (59) for -> FOR LPAREN for_initilizer . condition SEMICOLON expression RPAREN scope
    (25) condition -> . expression OR expression
    (26) condition -> . expression NOT expression
    (27) condition -> . expression AND expression
    (28) condition -> . expression EQUAL expression
    (29) condition -> . condition OR condition
    (30) condition -> . condition NOT condition
    (31) condition -> . condition AND condition
    (32) condition -> . expression NOTEQUAL expression
    (33) condition -> . expression GREATER expression
    (34) condition -> . expression LESS expression
    (35) condition -> . expression GREATEREQUAL expression
    (36) condition -> . expression LESSEQUAL expression
    (37) condition -> . LPAREN condition RPAREN
    (38) condition -> . NOT condition
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 62
    NOT             shift and go to state 65
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    condition                      shift and go to state 92
    expression                     shift and go to state 64
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 67

    (60) for_initilizer -> adress .

    LPAREN          reduce using rule 60 (for_initilizer -> adress .)
    NOT             reduce using rule 60 (for_initilizer -> adress .)
    ID              reduce using rule 60 (for_initilizer -> adress .)
    NUMBER          reduce using rule 60 (for_initilizer -> adress .)
    INT             reduce using rule 60 (for_initilizer -> adress .)
    FLOAT           reduce using rule 60 (for_initilizer -> adress .)
    STRING          reduce using rule 60 (for_initilizer -> adress .)


state 68

    (20) adress -> instance . ADRESS factor SEMICOLON
    (21) adress -> instance . ADRESS litstring SEMICOLON
    (22) adress -> instance . ADRESS expression SEMICOLON

    ADRESS          shift and go to state 45


state 69

    (61) while -> WHILE LPAREN condition . RPAREN scope
    (29) condition -> condition . OR condition
    (30) condition -> condition . NOT condition
    (31) condition -> condition . AND condition

    RPAREN          shift and go to state 93
    OR              shift and go to state 79
    NOT             shift and go to state 80
    AND             shift and go to state 81


state 70

    (56) print -> PRINT LPAREN litstring . RPAREN SEMICOLON
    (58) print -> PRINT LPAREN litstring . COMMA param RPAREN SEMICOLON

    RPAREN          shift and go to state 94
    COMMA           shift and go to state 95


state 71

    (57) print -> PRINT LPAREN expression . RPAREN SEMICOLON
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 96
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 72

    (23) return -> RETURN expression SEMICOLON .

    RBRAKETS        reduce using rule 23 (return -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 23 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 23 (return -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 23 (return -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 23 (return -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 23 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 23 (return -> RETURN expression SEMICOLON .)
    ID              reduce using rule 23 (return -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 23 (return -> RETURN expression SEMICOLON .)
    INT             reduce using rule 23 (return -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 23 (return -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 23 (return -> RETURN expression SEMICOLON .)


state 73

    (20) adress -> instance ADRESS factor SEMICOLON .

    RBRAKETS        reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    LPAREN          reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    IF              reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    FOR             reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    WHILE           reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    PRINT           reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    RETURN          reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    ID              reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    NUMBER          reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    INT             reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    FLOAT           reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    STRING          reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)
    NOT             reduce using rule 20 (adress -> instance ADRESS factor SEMICOLON .)


state 74

    (21) adress -> instance ADRESS litstring SEMICOLON .

    RBRAKETS        reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    LPAREN          reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    IF              reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    FOR             reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    WHILE           reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    PRINT           reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    RETURN          reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    ID              reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    NUMBER          reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    INT             reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    FLOAT           reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    STRING          reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)
    NOT             reduce using rule 21 (adress -> instance ADRESS litstring SEMICOLON .)


state 75

    (22) adress -> instance ADRESS expression SEMICOLON .

    RBRAKETS        reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    LPAREN          reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    IF              reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    FOR             reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    WHILE           reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    PRINT           reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    RETURN          reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    ID              reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    NUMBER          reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    INT             reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    FLOAT           reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    STRING          reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)
    NOT             reduce using rule 22 (adress -> instance ADRESS expression SEMICOLON .)


state 76

    (37) condition -> LPAREN condition . RPAREN
    (29) condition -> condition . OR condition
    (30) condition -> condition . NOT condition
    (31) condition -> condition . AND condition

    RPAREN          shift and go to state 97
    OR              shift and go to state 79
    NOT             shift and go to state 80
    AND             shift and go to state 81


state 77

    (9) expression -> LPAREN expression . RPAREN
    (25) condition -> expression . OR expression
    (26) condition -> expression . NOT expression
    (27) condition -> expression . AND expression
    (28) condition -> expression . EQUAL expression
    (32) condition -> expression . NOTEQUAL expression
    (33) condition -> expression . GREATER expression
    (34) condition -> expression . LESS expression
    (35) condition -> expression . GREATEREQUAL expression
    (36) condition -> expression . LESSEQUAL expression
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 57
    OR              shift and go to state 82
    NOT             shift and go to state 83
    AND             shift and go to state 84
    EQUAL           shift and go to state 85
    NOTEQUAL        shift and go to state 86
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 78

    (50) if -> IF LPAREN condition RPAREN . scope
    (51) if -> IF LPAREN condition RPAREN . scope elseif
    (52) if -> IF LPAREN condition RPAREN . scope ELSE scope
    (3) scope -> . new_scope LBRAKETS multiple_statements RBRAKETS
    (4) scope -> . new_scope LBRAKETS expression RBRAKETS
    (2) new_scope -> .

    LBRAKETS        reduce using rule 2 (new_scope -> .)

    scope                          shift and go to state 98
    new_scope                      shift and go to state 7

state 79

    (29) condition -> condition OR . condition
    (25) condition -> . expression OR expression
    (26) condition -> . expression NOT expression
    (27) condition -> . expression AND expression
    (28) condition -> . expression EQUAL expression
    (29) condition -> . condition OR condition
    (30) condition -> . condition NOT condition
    (31) condition -> . condition AND condition
    (32) condition -> . expression NOTEQUAL expression
    (33) condition -> . expression GREATER expression
    (34) condition -> . expression LESS expression
    (35) condition -> . expression GREATEREQUAL expression
    (36) condition -> . expression LESSEQUAL expression
    (37) condition -> . LPAREN condition RPAREN
    (38) condition -> . NOT condition
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 62
    NOT             shift and go to state 65
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    condition                      shift and go to state 99
    expression                     shift and go to state 64
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 80

    (30) condition -> condition NOT . condition
    (25) condition -> . expression OR expression
    (26) condition -> . expression NOT expression
    (27) condition -> . expression AND expression
    (28) condition -> . expression EQUAL expression
    (29) condition -> . condition OR condition
    (30) condition -> . condition NOT condition
    (31) condition -> . condition AND condition
    (32) condition -> . expression NOTEQUAL expression
    (33) condition -> . expression GREATER expression
    (34) condition -> . expression LESS expression
    (35) condition -> . expression GREATEREQUAL expression
    (36) condition -> . expression LESSEQUAL expression
    (37) condition -> . LPAREN condition RPAREN
    (38) condition -> . NOT condition
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 62
    NOT             shift and go to state 65
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    condition                      shift and go to state 100
    expression                     shift and go to state 64
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 81

    (31) condition -> condition AND . condition
    (25) condition -> . expression OR expression
    (26) condition -> . expression NOT expression
    (27) condition -> . expression AND expression
    (28) condition -> . expression EQUAL expression
    (29) condition -> . condition OR condition
    (30) condition -> . condition NOT condition
    (31) condition -> . condition AND condition
    (32) condition -> . expression NOTEQUAL expression
    (33) condition -> . expression GREATER expression
    (34) condition -> . expression LESS expression
    (35) condition -> . expression GREATEREQUAL expression
    (36) condition -> . expression LESSEQUAL expression
    (37) condition -> . LPAREN condition RPAREN
    (38) condition -> . NOT condition
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 62
    NOT             shift and go to state 65
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    condition                      shift and go to state 101
    expression                     shift and go to state 64
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 82

    (25) condition -> expression OR . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 102
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 83

    (26) condition -> expression NOT . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 103
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 84

    (27) condition -> expression AND . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 104
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 85

    (28) condition -> expression EQUAL . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 105
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 86

    (32) condition -> expression NOTEQUAL . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 106
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 87

    (33) condition -> expression GREATER . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 107
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 88

    (34) condition -> expression LESS . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 108
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 89

    (35) condition -> expression GREATEREQUAL . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 109
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 90

    (36) condition -> expression LESSEQUAL . expression
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 110
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 91

    (38) condition -> NOT condition .
    (29) condition -> condition . OR condition
    (30) condition -> condition . NOT condition
    (31) condition -> condition . AND condition

    RPAREN          reduce using rule 38 (condition -> NOT condition .)
    OR              reduce using rule 38 (condition -> NOT condition .)
    NOT             reduce using rule 38 (condition -> NOT condition .)
    AND             reduce using rule 38 (condition -> NOT condition .)
    SEMICOLON       reduce using rule 38 (condition -> NOT condition .)

  ! OR              [ shift and go to state 79 ]
  ! NOT             [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 92

    (59) for -> FOR LPAREN for_initilizer condition . SEMICOLON expression RPAREN scope
    (29) condition -> condition . OR condition
    (30) condition -> condition . NOT condition
    (31) condition -> condition . AND condition

    SEMICOLON       shift and go to state 111
    OR              shift and go to state 79
    NOT             shift and go to state 80
    AND             shift and go to state 81


state 93

    (61) while -> WHILE LPAREN condition RPAREN . scope
    (3) scope -> . new_scope LBRAKETS multiple_statements RBRAKETS
    (4) scope -> . new_scope LBRAKETS expression RBRAKETS
    (2) new_scope -> .

    LBRAKETS        reduce using rule 2 (new_scope -> .)

    scope                          shift and go to state 112
    new_scope                      shift and go to state 7

state 94

    (56) print -> PRINT LPAREN litstring RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 113


state 95

    (58) print -> PRINT LPAREN litstring COMMA . param RPAREN SEMICOLON
    (48) param -> . param COMMA param
    (49) param -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    param                          shift and go to state 114
    term                           shift and go to state 115
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 96

    (57) print -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 116


state 97

    (37) condition -> LPAREN condition RPAREN .

    RPAREN          reduce using rule 37 (condition -> LPAREN condition RPAREN .)
    OR              reduce using rule 37 (condition -> LPAREN condition RPAREN .)
    NOT             reduce using rule 37 (condition -> LPAREN condition RPAREN .)
    AND             reduce using rule 37 (condition -> LPAREN condition RPAREN .)
    SEMICOLON       reduce using rule 37 (condition -> LPAREN condition RPAREN .)


state 98

    (50) if -> IF LPAREN condition RPAREN scope .
    (51) if -> IF LPAREN condition RPAREN scope . elseif
    (52) if -> IF LPAREN condition RPAREN scope . ELSE scope
    (53) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (54) elseif -> . ELSEIF LPAREN condition RPAREN scope elseif
    (55) elseif -> . ELSEIF LPAREN condition RPAREN scope ELSE scope

    RBRAKETS        reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    IF              reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    FOR             reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    ID              reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    INT             reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    STRING          reduce using rule 50 (if -> IF LPAREN condition RPAREN scope .)
    ELSE            shift and go to state 118
    ELSEIF          shift and go to state 119

    elseif                         shift and go to state 117

state 99

    (29) condition -> condition OR condition .
    (29) condition -> condition . OR condition
    (30) condition -> condition . NOT condition
    (31) condition -> condition . AND condition

    RPAREN          reduce using rule 29 (condition -> condition OR condition .)
    OR              reduce using rule 29 (condition -> condition OR condition .)
    SEMICOLON       reduce using rule 29 (condition -> condition OR condition .)
    NOT             shift and go to state 80
    AND             shift and go to state 81

  ! NOT             [ reduce using rule 29 (condition -> condition OR condition .) ]
  ! AND             [ reduce using rule 29 (condition -> condition OR condition .) ]
  ! OR              [ shift and go to state 79 ]


state 100

    (30) condition -> condition NOT condition .
    (29) condition -> condition . OR condition
    (30) condition -> condition . NOT condition
    (31) condition -> condition . AND condition

    RPAREN          reduce using rule 30 (condition -> condition NOT condition .)
    OR              reduce using rule 30 (condition -> condition NOT condition .)
    NOT             reduce using rule 30 (condition -> condition NOT condition .)
    AND             reduce using rule 30 (condition -> condition NOT condition .)
    SEMICOLON       reduce using rule 30 (condition -> condition NOT condition .)

  ! OR              [ shift and go to state 79 ]
  ! NOT             [ shift and go to state 80 ]
  ! AND             [ shift and go to state 81 ]


state 101

    (31) condition -> condition AND condition .
    (29) condition -> condition . OR condition
    (30) condition -> condition . NOT condition
    (31) condition -> condition . AND condition

    RPAREN          reduce using rule 31 (condition -> condition AND condition .)
    OR              reduce using rule 31 (condition -> condition AND condition .)
    AND             reduce using rule 31 (condition -> condition AND condition .)
    SEMICOLON       reduce using rule 31 (condition -> condition AND condition .)
    NOT             shift and go to state 80

  ! NOT             [ reduce using rule 31 (condition -> condition AND condition .) ]
  ! OR              [ shift and go to state 79 ]
  ! AND             [ shift and go to state 81 ]


state 102

    (25) condition -> expression OR expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 25 (condition -> expression OR expression .)
    OR              reduce using rule 25 (condition -> expression OR expression .)
    NOT             reduce using rule 25 (condition -> expression OR expression .)
    AND             reduce using rule 25 (condition -> expression OR expression .)
    SEMICOLON       reduce using rule 25 (condition -> expression OR expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 103

    (26) condition -> expression NOT expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 26 (condition -> expression NOT expression .)
    OR              reduce using rule 26 (condition -> expression NOT expression .)
    NOT             reduce using rule 26 (condition -> expression NOT expression .)
    AND             reduce using rule 26 (condition -> expression NOT expression .)
    SEMICOLON       reduce using rule 26 (condition -> expression NOT expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 104

    (27) condition -> expression AND expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 27 (condition -> expression AND expression .)
    OR              reduce using rule 27 (condition -> expression AND expression .)
    NOT             reduce using rule 27 (condition -> expression AND expression .)
    AND             reduce using rule 27 (condition -> expression AND expression .)
    SEMICOLON       reduce using rule 27 (condition -> expression AND expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 105

    (28) condition -> expression EQUAL expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 28 (condition -> expression EQUAL expression .)
    OR              reduce using rule 28 (condition -> expression EQUAL expression .)
    NOT             reduce using rule 28 (condition -> expression EQUAL expression .)
    AND             reduce using rule 28 (condition -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 28 (condition -> expression EQUAL expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 106

    (32) condition -> expression NOTEQUAL expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 32 (condition -> expression NOTEQUAL expression .)
    OR              reduce using rule 32 (condition -> expression NOTEQUAL expression .)
    NOT             reduce using rule 32 (condition -> expression NOTEQUAL expression .)
    AND             reduce using rule 32 (condition -> expression NOTEQUAL expression .)
    SEMICOLON       reduce using rule 32 (condition -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 107

    (33) condition -> expression GREATER expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 33 (condition -> expression GREATER expression .)
    OR              reduce using rule 33 (condition -> expression GREATER expression .)
    NOT             reduce using rule 33 (condition -> expression GREATER expression .)
    AND             reduce using rule 33 (condition -> expression GREATER expression .)
    SEMICOLON       reduce using rule 33 (condition -> expression GREATER expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 108

    (34) condition -> expression LESS expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 34 (condition -> expression LESS expression .)
    OR              reduce using rule 34 (condition -> expression LESS expression .)
    NOT             reduce using rule 34 (condition -> expression LESS expression .)
    AND             reduce using rule 34 (condition -> expression LESS expression .)
    SEMICOLON       reduce using rule 34 (condition -> expression LESS expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 109

    (35) condition -> expression GREATEREQUAL expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 35 (condition -> expression GREATEREQUAL expression .)
    OR              reduce using rule 35 (condition -> expression GREATEREQUAL expression .)
    NOT             reduce using rule 35 (condition -> expression GREATEREQUAL expression .)
    AND             reduce using rule 35 (condition -> expression GREATEREQUAL expression .)
    SEMICOLON       reduce using rule 35 (condition -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 110

    (36) condition -> expression LESSEQUAL expression .
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 36 (condition -> expression LESSEQUAL expression .)
    OR              reduce using rule 36 (condition -> expression LESSEQUAL expression .)
    NOT             reduce using rule 36 (condition -> expression LESSEQUAL expression .)
    AND             reduce using rule 36 (condition -> expression LESSEQUAL expression .)
    SEMICOLON       reduce using rule 36 (condition -> expression LESSEQUAL expression .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 111

    (59) for -> FOR LPAREN for_initilizer condition SEMICOLON . expression RPAREN scope
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 12
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 120
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 112

    (61) while -> WHILE LPAREN condition RPAREN scope .

    RBRAKETS        reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    IF              reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    FOR             reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    ID              reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    INT             reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)
    STRING          reduce using rule 61 (while -> WHILE LPAREN condition RPAREN scope .)


state 113

    (56) print -> PRINT LPAREN litstring RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    LPAREN          reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    IF              reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    FOR             reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    WHILE           reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    PRINT           reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    RETURN          reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    ID              reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    NUMBER          reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    INT             reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    FLOAT           reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)
    STRING          reduce using rule 56 (print -> PRINT LPAREN litstring RPAREN SEMICOLON .)


state 114

    (58) print -> PRINT LPAREN litstring COMMA param . RPAREN SEMICOLON
    (48) param -> param . COMMA param

    RPAREN          shift and go to state 122
    COMMA           shift and go to state 121


state 115

    (49) param -> term .

    RPAREN          reduce using rule 49 (param -> term .)
    COMMA           reduce using rule 49 (param -> term .)


state 116

    (57) print -> PRINT LPAREN expression RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 57 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 117

    (51) if -> IF LPAREN condition RPAREN scope elseif .

    RBRAKETS        reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)
    LPAREN          reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)
    IF              reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)
    FOR             reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)
    WHILE           reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)
    PRINT           reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)
    RETURN          reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)
    ID              reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)
    NUMBER          reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)
    INT             reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)
    FLOAT           reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)
    STRING          reduce using rule 51 (if -> IF LPAREN condition RPAREN scope elseif .)


state 118

    (52) if -> IF LPAREN condition RPAREN scope ELSE . scope
    (3) scope -> . new_scope LBRAKETS multiple_statements RBRAKETS
    (4) scope -> . new_scope LBRAKETS expression RBRAKETS
    (2) new_scope -> .

    LBRAKETS        reduce using rule 2 (new_scope -> .)

    scope                          shift and go to state 123
    new_scope                      shift and go to state 7

state 119

    (53) elseif -> ELSEIF . LPAREN condition RPAREN scope
    (54) elseif -> ELSEIF . LPAREN condition RPAREN scope elseif
    (55) elseif -> ELSEIF . LPAREN condition RPAREN scope ELSE scope

    LPAREN          shift and go to state 124


state 120

    (59) for -> FOR LPAREN for_initilizer condition SEMICOLON expression . RPAREN scope
    (5) expression -> expression . PLUS expression
    (6) expression -> expression . MINUS expression
    (7) expression -> expression . TIMES expression
    (8) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 125
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41


state 121

    (48) param -> param COMMA . param
    (48) param -> . param COMMA param
    (49) param -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    param                          shift and go to state 126
    term                           shift and go to state 115
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 122

    (58) print -> PRINT LPAREN litstring COMMA param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 127


state 123

    (52) if -> IF LPAREN condition RPAREN scope ELSE scope .

    RBRAKETS        reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    LPAREN          reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    IF              reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    FOR             reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    WHILE           reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    PRINT           reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    RETURN          reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    ID              reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    NUMBER          reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    INT             reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    FLOAT           reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)
    STRING          reduce using rule 52 (if -> IF LPAREN condition RPAREN scope ELSE scope .)


state 124

    (53) elseif -> ELSEIF LPAREN . condition RPAREN scope
    (54) elseif -> ELSEIF LPAREN . condition RPAREN scope elseif
    (55) elseif -> ELSEIF LPAREN . condition RPAREN scope ELSE scope
    (25) condition -> . expression OR expression
    (26) condition -> . expression NOT expression
    (27) condition -> . expression AND expression
    (28) condition -> . expression EQUAL expression
    (29) condition -> . condition OR condition
    (30) condition -> . condition NOT condition
    (31) condition -> . condition AND condition
    (32) condition -> . expression NOTEQUAL expression
    (33) condition -> . expression GREATER expression
    (34) condition -> . expression LESS expression
    (35) condition -> . expression GREATEREQUAL expression
    (36) condition -> . expression LESSEQUAL expression
    (37) condition -> . LPAREN condition RPAREN
    (38) condition -> . NOT condition
    (5) expression -> . expression PLUS expression
    (6) expression -> . expression MINUS expression
    (7) expression -> . expression TIMES expression
    (8) expression -> . expression DIVIDE expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . term
    (11) term -> . instance
    (12) term -> . factor
    (13) instance -> . type ID
    (14) instance -> . ID
    (15) factor -> . NUMBER
    (16) type -> . INT
    (17) type -> . FLOAT
    (18) type -> . STRING

    LPAREN          shift and go to state 62
    NOT             shift and go to state 65
    ID              shift and go to state 28
    NUMBER          shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    condition                      shift and go to state 128
    expression                     shift and go to state 64
    term                           shift and go to state 13
    instance                       shift and go to state 44
    factor                         shift and go to state 21
    type                           shift and go to state 27

state 125

    (59) for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN . scope
    (3) scope -> . new_scope LBRAKETS multiple_statements RBRAKETS
    (4) scope -> . new_scope LBRAKETS expression RBRAKETS
    (2) new_scope -> .

    LBRAKETS        reduce using rule 2 (new_scope -> .)

    scope                          shift and go to state 129
    new_scope                      shift and go to state 7

state 126

    (48) param -> param COMMA param .
    (48) param -> param . COMMA param

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 48 (param -> param COMMA param .)
    COMMA           shift and go to state 121

  ! COMMA           [ reduce using rule 48 (param -> param COMMA param .) ]


state 127

    (58) print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    LPAREN          reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    IF              reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    FOR             reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    WHILE           reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    PRINT           reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    RETURN          reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    ID              reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    NUMBER          reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    INT             reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    FLOAT           reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)
    STRING          reduce using rule 58 (print -> PRINT LPAREN litstring COMMA param RPAREN SEMICOLON .)


state 128

    (53) elseif -> ELSEIF LPAREN condition . RPAREN scope
    (54) elseif -> ELSEIF LPAREN condition . RPAREN scope elseif
    (55) elseif -> ELSEIF LPAREN condition . RPAREN scope ELSE scope
    (29) condition -> condition . OR condition
    (30) condition -> condition . NOT condition
    (31) condition -> condition . AND condition

    RPAREN          shift and go to state 130
    OR              shift and go to state 79
    NOT             shift and go to state 80
    AND             shift and go to state 81


state 129

    (59) for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .

    RBRAKETS        reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)
    LPAREN          reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)
    IF              reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)
    FOR             reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)
    WHILE           reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)
    PRINT           reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)
    RETURN          reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)
    ID              reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)
    NUMBER          reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)
    INT             reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)
    FLOAT           reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)
    STRING          reduce using rule 59 (for -> FOR LPAREN for_initilizer condition SEMICOLON expression RPAREN scope .)


state 130

    (53) elseif -> ELSEIF LPAREN condition RPAREN . scope
    (54) elseif -> ELSEIF LPAREN condition RPAREN . scope elseif
    (55) elseif -> ELSEIF LPAREN condition RPAREN . scope ELSE scope
    (3) scope -> . new_scope LBRAKETS multiple_statements RBRAKETS
    (4) scope -> . new_scope LBRAKETS expression RBRAKETS
    (2) new_scope -> .

    LBRAKETS        reduce using rule 2 (new_scope -> .)

    scope                          shift and go to state 131
    new_scope                      shift and go to state 7

state 131

    (53) elseif -> ELSEIF LPAREN condition RPAREN scope .
    (54) elseif -> ELSEIF LPAREN condition RPAREN scope . elseif
    (55) elseif -> ELSEIF LPAREN condition RPAREN scope . ELSE scope
    (53) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (54) elseif -> . ELSEIF LPAREN condition RPAREN scope elseif
    (55) elseif -> . ELSEIF LPAREN condition RPAREN scope ELSE scope

    RBRAKETS        reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    IF              reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    FOR             reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    ID              reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    INT             reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    STRING          reduce using rule 53 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    ELSE            shift and go to state 133
    ELSEIF          shift and go to state 119

    elseif                         shift and go to state 132

state 132

    (54) elseif -> ELSEIF LPAREN condition RPAREN scope elseif .

    RBRAKETS        reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    LPAREN          reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    IF              reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    FOR             reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    WHILE           reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    PRINT           reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    RETURN          reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    ID              reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    NUMBER          reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    INT             reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    FLOAT           reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)
    STRING          reduce using rule 54 (elseif -> ELSEIF LPAREN condition RPAREN scope elseif .)


state 133

    (55) elseif -> ELSEIF LPAREN condition RPAREN scope ELSE . scope
    (3) scope -> . new_scope LBRAKETS multiple_statements RBRAKETS
    (4) scope -> . new_scope LBRAKETS expression RBRAKETS
    (2) new_scope -> .

    LBRAKETS        reduce using rule 2 (new_scope -> .)

    scope                          shift and go to state 134
    new_scope                      shift and go to state 7

state 134

    (55) elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .

    RBRAKETS        reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    LPAREN          reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    IF              reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    FOR             reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    WHILE           reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    PRINT           reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    RETURN          reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    ID              reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    NUMBER          reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    INT             reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    FLOAT           reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)
    STRING          reduce using rule 55 (elseif -> ELSEIF LPAREN condition RPAREN scope ELSE scope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 58 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 126 resolved as shift
