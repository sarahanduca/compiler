Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    FALSE
    LSQUAREB
    RSQUAREB
    TRUE

Grammar

Rule 0     S' -> main
Rule 1     main -> INT MAIN LPAREN RPAREN scope
Rule 2     scope -> LBRAKETS multiple_statements RBRAKETS
Rule 3     scope -> LBRAKETS expression RBRAKETS
Rule 4     expression -> expression PLUS expression
Rule 5     expression -> expression MINUS expression
Rule 6     expression -> expression TIMES expression
Rule 7     expression -> expression DIVIDE expression
Rule 8     expression -> LPAREN expression RPAREN
Rule 9     expression -> term
Rule 10    term -> type ID
Rule 11    term -> factor
Rule 12    type -> INT
Rule 13    type -> FLOAT
Rule 14    type -> STRING
Rule 15    return -> RETURN expression SEMICOLON
Rule 16    return -> RETURN SEMICOLON
Rule 17    adress -> term ADRESS expression SEMICOLON
Rule 18    adress -> term ADRESS term SEMICOLON
Rule 19    adress -> term ADRESS LITSTRING SEMICOLON
Rule 20    condition -> expression OR expression
Rule 21    condition -> expression NOT expression
Rule 22    condition -> expression AND expression
Rule 23    condition -> expression EQUAL expression
Rule 24    condition -> condition OR condition
Rule 25    condition -> condition NOT condition
Rule 26    condition -> condition AND condition
Rule 27    condition -> expression NOTEQUAL expression
Rule 28    condition -> expression GREATER expression
Rule 29    condition -> expression LESS expression
Rule 30    condition -> expression GREATEREQUAL expression
Rule 31    condition -> expression LESSEQUAL expression
Rule 32    condition -> LPAREN condition RPAREN
Rule 33    condition -> NOT condition
Rule 34    multiple_statements -> multiple_statements statement
Rule 35    multiple_statements -> statement
Rule 36    statement -> expression SEMICOLON
Rule 37    statement -> if
Rule 38    statement -> else
Rule 39    statement -> for
Rule 40    statement -> while
Rule 41    statement -> print
Rule 42    statement -> adress
Rule 43    statement -> return
Rule 44    param -> param COMMA param
Rule 45    param -> term
Rule 46    if -> IF LPAREN condition RPAREN scope
Rule 47    if -> if elseif
Rule 48    if -> if else
Rule 49    elseif -> ELSEIF LPAREN condition RPAREN scope
Rule 50    elseif -> elseif elseif
Rule 51    elseif -> elseif else
Rule 52    else -> ELSE scope
Rule 53    print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON
Rule 54    print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON
Rule 55    factor -> NUMBER
Rule 56    for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
Rule 57    for_initilizer -> adress
Rule 58    while -> WHILE LPAREN condition RPAREN scope

Terminals, with rules where they appear

ADRESS               : 17 18 19
AND                  : 22 26
BOOL                 : 
COMMA                : 44 54
DIVIDE               : 7
ELSE                 : 52
ELSEIF               : 49
EQUAL                : 23
FALSE                : 
FLOAT                : 13
FOR                  : 56
GREATER              : 28
GREATEREQUAL         : 30
ID                   : 10
IF                   : 46
INT                  : 1 12
LBRAKETS             : 2 3
LESS                 : 29
LESSEQUAL            : 31
LITSTRING            : 19 53 54
LPAREN               : 1 8 32 46 49 53 54 56 58
LSQUAREB             : 
MAIN                 : 1
MINUS                : 5
NOT                  : 21 25 33
NOTEQUAL             : 27
NUMBER               : 55
OR                   : 20 24
PLUS                 : 4
PRINT                : 53 54
RBRAKETS             : 2 3
RETURN               : 15 16
RPAREN               : 1 8 32 46 49 53 54 56 58
RSQUAREB             : 
SEMICOLON            : 15 16 17 18 19 36 53 54 56 56
STRING               : 14
TIMES                : 6
TRUE                 : 
WHILE                : 58
error                : 

Nonterminals, with rules where they appear

adress               : 42 57
condition            : 24 24 25 25 26 26 32 33 46 49 56 58
else                 : 38 48 51
elseif               : 47 50 50 51
expression           : 3 4 4 5 5 6 6 7 7 8 15 17 20 20 21 21 22 22 23 23 27 27 28 28 29 29 30 30 31 31 36 56
factor               : 11
for                  : 39
for_initilizer       : 56
if                   : 37 47 48
main                 : 0
multiple_statements  : 2 34
param                : 44 44 54
print                : 41
return               : 43
scope                : 1 46 49 52 56 58
statement            : 34 35
term                 : 9 17 18 18 19 45
type                 : 10
while                : 40

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . INT MAIN LPAREN RPAREN scope

    INT             shift and go to state 2

    main                           shift and go to state 1

state 1

    (0) S' -> main .



state 2

    (1) main -> INT . MAIN LPAREN RPAREN scope

    MAIN            shift and go to state 3


state 3

    (1) main -> INT MAIN . LPAREN RPAREN scope

    LPAREN          shift and go to state 4


state 4

    (1) main -> INT MAIN LPAREN . RPAREN scope

    RPAREN          shift and go to state 5


state 5

    (1) main -> INT MAIN LPAREN RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 6

state 6

    (1) main -> INT MAIN LPAREN RPAREN scope .

    $end            reduce using rule 1 (main -> INT MAIN LPAREN RPAREN scope .)


state 7

    (2) scope -> LBRAKETS . multiple_statements RBRAKETS
    (3) scope -> LBRAKETS . expression RBRAKETS
    (34) multiple_statements -> . multiple_statements statement
    (35) multiple_statements -> . statement
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (36) statement -> . expression SEMICOLON
    (37) statement -> . if
    (38) statement -> . else
    (39) statement -> . for
    (40) statement -> . while
    (41) statement -> . print
    (42) statement -> . adress
    (43) statement -> . return
    (10) term -> . type ID
    (11) term -> . factor
    (46) if -> . IF LPAREN condition RPAREN scope
    (47) if -> . if elseif
    (48) if -> . if else
    (52) else -> . ELSE scope
    (56) for -> . FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
    (58) while -> . WHILE LPAREN condition RPAREN scope
    (53) print -> . PRINT LPAREN LITSTRING RPAREN SEMICOLON
    (54) print -> . PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON
    (17) adress -> . term ADRESS expression SEMICOLON
    (18) adress -> . term ADRESS term SEMICOLON
    (19) adress -> . term ADRESS LITSTRING SEMICOLON
    (15) return -> . RETURN expression SEMICOLON
    (16) return -> . RETURN SEMICOLON
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    IF              shift and go to state 22
    ELSE            shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    PRINT           shift and go to state 26
    RETURN          shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    multiple_statements            shift and go to state 8
    expression                     shift and go to state 9
    statement                      shift and go to state 10
    term                           shift and go to state 12
    if                             shift and go to state 13
    else                           shift and go to state 14
    for                            shift and go to state 15
    while                          shift and go to state 16
    print                          shift and go to state 17
    adress                         shift and go to state 18
    return                         shift and go to state 19
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 8

    (2) scope -> LBRAKETS multiple_statements . RBRAKETS
    (34) multiple_statements -> multiple_statements . statement
    (36) statement -> . expression SEMICOLON
    (37) statement -> . if
    (38) statement -> . else
    (39) statement -> . for
    (40) statement -> . while
    (41) statement -> . print
    (42) statement -> . adress
    (43) statement -> . return
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (46) if -> . IF LPAREN condition RPAREN scope
    (47) if -> . if elseif
    (48) if -> . if else
    (52) else -> . ELSE scope
    (56) for -> . FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
    (58) while -> . WHILE LPAREN condition RPAREN scope
    (53) print -> . PRINT LPAREN LITSTRING RPAREN SEMICOLON
    (54) print -> . PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON
    (17) adress -> . term ADRESS expression SEMICOLON
    (18) adress -> . term ADRESS term SEMICOLON
    (19) adress -> . term ADRESS LITSTRING SEMICOLON
    (15) return -> . RETURN expression SEMICOLON
    (16) return -> . RETURN SEMICOLON
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    RBRAKETS        shift and go to state 32
    LPAREN          shift and go to state 11
    IF              shift and go to state 22
    ELSE            shift and go to state 23
    FOR             shift and go to state 24
    WHILE           shift and go to state 25
    PRINT           shift and go to state 26
    RETURN          shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    statement                      shift and go to state 33
    expression                     shift and go to state 34
    if                             shift and go to state 13
    else                           shift and go to state 14
    for                            shift and go to state 15
    while                          shift and go to state 16
    print                          shift and go to state 17
    adress                         shift and go to state 18
    return                         shift and go to state 19
    term                           shift and go to state 12
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 9

    (3) scope -> LBRAKETS expression . RBRAKETS
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression
    (36) statement -> expression . SEMICOLON

    RBRAKETS        shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39
    SEMICOLON       shift and go to state 40


state 10

    (35) multiple_statements -> statement .

    RBRAKETS        reduce using rule 35 (multiple_statements -> statement .)
    LPAREN          reduce using rule 35 (multiple_statements -> statement .)
    IF              reduce using rule 35 (multiple_statements -> statement .)
    ELSE            reduce using rule 35 (multiple_statements -> statement .)
    FOR             reduce using rule 35 (multiple_statements -> statement .)
    WHILE           reduce using rule 35 (multiple_statements -> statement .)
    PRINT           reduce using rule 35 (multiple_statements -> statement .)
    RETURN          reduce using rule 35 (multiple_statements -> statement .)
    INT             reduce using rule 35 (multiple_statements -> statement .)
    FLOAT           reduce using rule 35 (multiple_statements -> statement .)
    STRING          reduce using rule 35 (multiple_statements -> statement .)
    NUMBER          reduce using rule 35 (multiple_statements -> statement .)


state 11

    (8) expression -> LPAREN . expression RPAREN
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 41
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 12

    (9) expression -> term .
    (17) adress -> term . ADRESS expression SEMICOLON
    (18) adress -> term . ADRESS term SEMICOLON
    (19) adress -> term . ADRESS LITSTRING SEMICOLON

    RBRAKETS        reduce using rule 9 (expression -> term .)
    PLUS            reduce using rule 9 (expression -> term .)
    MINUS           reduce using rule 9 (expression -> term .)
    TIMES           reduce using rule 9 (expression -> term .)
    DIVIDE          reduce using rule 9 (expression -> term .)
    SEMICOLON       reduce using rule 9 (expression -> term .)
    ADRESS          shift and go to state 43


state 13

    (37) statement -> if .
    (47) if -> if . elseif
    (48) if -> if . else
    (49) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (50) elseif -> . elseif elseif
    (51) elseif -> . elseif else
    (52) else -> . ELSE scope

  ! shift/reduce conflict for ELSE resolved as shift
    RBRAKETS        reduce using rule 37 (statement -> if .)
    LPAREN          reduce using rule 37 (statement -> if .)
    IF              reduce using rule 37 (statement -> if .)
    FOR             reduce using rule 37 (statement -> if .)
    WHILE           reduce using rule 37 (statement -> if .)
    PRINT           reduce using rule 37 (statement -> if .)
    RETURN          reduce using rule 37 (statement -> if .)
    INT             reduce using rule 37 (statement -> if .)
    FLOAT           reduce using rule 37 (statement -> if .)
    STRING          reduce using rule 37 (statement -> if .)
    NUMBER          reduce using rule 37 (statement -> if .)
    ELSEIF          shift and go to state 46
    ELSE            shift and go to state 23

  ! ELSE            [ reduce using rule 37 (statement -> if .) ]

    elseif                         shift and go to state 44
    else                           shift and go to state 45

state 14

    (38) statement -> else .

    RBRAKETS        reduce using rule 38 (statement -> else .)
    LPAREN          reduce using rule 38 (statement -> else .)
    IF              reduce using rule 38 (statement -> else .)
    ELSE            reduce using rule 38 (statement -> else .)
    FOR             reduce using rule 38 (statement -> else .)
    WHILE           reduce using rule 38 (statement -> else .)
    PRINT           reduce using rule 38 (statement -> else .)
    RETURN          reduce using rule 38 (statement -> else .)
    INT             reduce using rule 38 (statement -> else .)
    FLOAT           reduce using rule 38 (statement -> else .)
    STRING          reduce using rule 38 (statement -> else .)
    NUMBER          reduce using rule 38 (statement -> else .)


state 15

    (39) statement -> for .

    RBRAKETS        reduce using rule 39 (statement -> for .)
    LPAREN          reduce using rule 39 (statement -> for .)
    IF              reduce using rule 39 (statement -> for .)
    ELSE            reduce using rule 39 (statement -> for .)
    FOR             reduce using rule 39 (statement -> for .)
    WHILE           reduce using rule 39 (statement -> for .)
    PRINT           reduce using rule 39 (statement -> for .)
    RETURN          reduce using rule 39 (statement -> for .)
    INT             reduce using rule 39 (statement -> for .)
    FLOAT           reduce using rule 39 (statement -> for .)
    STRING          reduce using rule 39 (statement -> for .)
    NUMBER          reduce using rule 39 (statement -> for .)


state 16

    (40) statement -> while .

    RBRAKETS        reduce using rule 40 (statement -> while .)
    LPAREN          reduce using rule 40 (statement -> while .)
    IF              reduce using rule 40 (statement -> while .)
    ELSE            reduce using rule 40 (statement -> while .)
    FOR             reduce using rule 40 (statement -> while .)
    WHILE           reduce using rule 40 (statement -> while .)
    PRINT           reduce using rule 40 (statement -> while .)
    RETURN          reduce using rule 40 (statement -> while .)
    INT             reduce using rule 40 (statement -> while .)
    FLOAT           reduce using rule 40 (statement -> while .)
    STRING          reduce using rule 40 (statement -> while .)
    NUMBER          reduce using rule 40 (statement -> while .)


state 17

    (41) statement -> print .

    RBRAKETS        reduce using rule 41 (statement -> print .)
    LPAREN          reduce using rule 41 (statement -> print .)
    IF              reduce using rule 41 (statement -> print .)
    ELSE            reduce using rule 41 (statement -> print .)
    FOR             reduce using rule 41 (statement -> print .)
    WHILE           reduce using rule 41 (statement -> print .)
    PRINT           reduce using rule 41 (statement -> print .)
    RETURN          reduce using rule 41 (statement -> print .)
    INT             reduce using rule 41 (statement -> print .)
    FLOAT           reduce using rule 41 (statement -> print .)
    STRING          reduce using rule 41 (statement -> print .)
    NUMBER          reduce using rule 41 (statement -> print .)


state 18

    (42) statement -> adress .

    RBRAKETS        reduce using rule 42 (statement -> adress .)
    LPAREN          reduce using rule 42 (statement -> adress .)
    IF              reduce using rule 42 (statement -> adress .)
    ELSE            reduce using rule 42 (statement -> adress .)
    FOR             reduce using rule 42 (statement -> adress .)
    WHILE           reduce using rule 42 (statement -> adress .)
    PRINT           reduce using rule 42 (statement -> adress .)
    RETURN          reduce using rule 42 (statement -> adress .)
    INT             reduce using rule 42 (statement -> adress .)
    FLOAT           reduce using rule 42 (statement -> adress .)
    STRING          reduce using rule 42 (statement -> adress .)
    NUMBER          reduce using rule 42 (statement -> adress .)


state 19

    (43) statement -> return .

    RBRAKETS        reduce using rule 43 (statement -> return .)
    LPAREN          reduce using rule 43 (statement -> return .)
    IF              reduce using rule 43 (statement -> return .)
    ELSE            reduce using rule 43 (statement -> return .)
    FOR             reduce using rule 43 (statement -> return .)
    WHILE           reduce using rule 43 (statement -> return .)
    PRINT           reduce using rule 43 (statement -> return .)
    RETURN          reduce using rule 43 (statement -> return .)
    INT             reduce using rule 43 (statement -> return .)
    FLOAT           reduce using rule 43 (statement -> return .)
    STRING          reduce using rule 43 (statement -> return .)
    NUMBER          reduce using rule 43 (statement -> return .)


state 20

    (10) term -> type . ID

    ID              shift and go to state 47


state 21

    (11) term -> factor .

    ADRESS          reduce using rule 11 (term -> factor .)
    RBRAKETS        reduce using rule 11 (term -> factor .)
    PLUS            reduce using rule 11 (term -> factor .)
    MINUS           reduce using rule 11 (term -> factor .)
    TIMES           reduce using rule 11 (term -> factor .)
    DIVIDE          reduce using rule 11 (term -> factor .)
    SEMICOLON       reduce using rule 11 (term -> factor .)
    RPAREN          reduce using rule 11 (term -> factor .)
    OR              reduce using rule 11 (term -> factor .)
    NOT             reduce using rule 11 (term -> factor .)
    AND             reduce using rule 11 (term -> factor .)
    EQUAL           reduce using rule 11 (term -> factor .)
    NOTEQUAL        reduce using rule 11 (term -> factor .)
    GREATER         reduce using rule 11 (term -> factor .)
    LESS            reduce using rule 11 (term -> factor .)
    GREATEREQUAL    reduce using rule 11 (term -> factor .)
    LESSEQUAL       reduce using rule 11 (term -> factor .)
    COMMA           reduce using rule 11 (term -> factor .)


state 22

    (46) if -> IF . LPAREN condition RPAREN scope

    LPAREN          shift and go to state 48


state 23

    (52) else -> ELSE . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 49

state 24

    (56) for -> FOR . LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope

    LPAREN          shift and go to state 50


state 25

    (58) while -> WHILE . LPAREN condition RPAREN scope

    LPAREN          shift and go to state 51


state 26

    (53) print -> PRINT . LPAREN LITSTRING RPAREN SEMICOLON
    (54) print -> PRINT . LPAREN LITSTRING COMMA param RPAREN SEMICOLON

    LPAREN          shift and go to state 52


state 27

    (15) return -> RETURN . expression SEMICOLON
    (16) return -> RETURN . SEMICOLON
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    SEMICOLON       shift and go to state 54
    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 53
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 28

    (12) type -> INT .

    ID              reduce using rule 12 (type -> INT .)


state 29

    (13) type -> FLOAT .

    ID              reduce using rule 13 (type -> FLOAT .)


state 30

    (14) type -> STRING .

    ID              reduce using rule 14 (type -> STRING .)


state 31

    (55) factor -> NUMBER .

    ADRESS          reduce using rule 55 (factor -> NUMBER .)
    RBRAKETS        reduce using rule 55 (factor -> NUMBER .)
    PLUS            reduce using rule 55 (factor -> NUMBER .)
    MINUS           reduce using rule 55 (factor -> NUMBER .)
    TIMES           reduce using rule 55 (factor -> NUMBER .)
    DIVIDE          reduce using rule 55 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 55 (factor -> NUMBER .)
    RPAREN          reduce using rule 55 (factor -> NUMBER .)
    OR              reduce using rule 55 (factor -> NUMBER .)
    NOT             reduce using rule 55 (factor -> NUMBER .)
    AND             reduce using rule 55 (factor -> NUMBER .)
    EQUAL           reduce using rule 55 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 55 (factor -> NUMBER .)
    GREATER         reduce using rule 55 (factor -> NUMBER .)
    LESS            reduce using rule 55 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 55 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 55 (factor -> NUMBER .)
    COMMA           reduce using rule 55 (factor -> NUMBER .)


state 32

    (2) scope -> LBRAKETS multiple_statements RBRAKETS .

    $end            reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    RBRAKETS        reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    LPAREN          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    IF              reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    ELSE            reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    FOR             reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    WHILE           reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    PRINT           reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    RETURN          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    INT             reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    FLOAT           reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    STRING          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    NUMBER          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)
    ELSEIF          reduce using rule 2 (scope -> LBRAKETS multiple_statements RBRAKETS .)


state 33

    (34) multiple_statements -> multiple_statements statement .

    RBRAKETS        reduce using rule 34 (multiple_statements -> multiple_statements statement .)
    LPAREN          reduce using rule 34 (multiple_statements -> multiple_statements statement .)
    IF              reduce using rule 34 (multiple_statements -> multiple_statements statement .)
    ELSE            reduce using rule 34 (multiple_statements -> multiple_statements statement .)
    FOR             reduce using rule 34 (multiple_statements -> multiple_statements statement .)
    WHILE           reduce using rule 34 (multiple_statements -> multiple_statements statement .)
    PRINT           reduce using rule 34 (multiple_statements -> multiple_statements statement .)
    RETURN          reduce using rule 34 (multiple_statements -> multiple_statements statement .)
    INT             reduce using rule 34 (multiple_statements -> multiple_statements statement .)
    FLOAT           reduce using rule 34 (multiple_statements -> multiple_statements statement .)
    STRING          reduce using rule 34 (multiple_statements -> multiple_statements statement .)
    NUMBER          reduce using rule 34 (multiple_statements -> multiple_statements statement .)


state 34

    (36) statement -> expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 40
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 35

    (3) scope -> LBRAKETS expression RBRAKETS .

    $end            reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    RBRAKETS        reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    LPAREN          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    IF              reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    ELSE            reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    FOR             reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    WHILE           reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    PRINT           reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    RETURN          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    INT             reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    FLOAT           reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    STRING          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    NUMBER          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    ELSEIF          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)


state 36

    (4) expression -> expression PLUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 55
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 37

    (5) expression -> expression MINUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 56
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 38

    (6) expression -> expression TIMES . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 57
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 39

    (7) expression -> expression DIVIDE . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 58
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 40

    (36) statement -> expression SEMICOLON .

    RBRAKETS        reduce using rule 36 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 36 (statement -> expression SEMICOLON .)
    IF              reduce using rule 36 (statement -> expression SEMICOLON .)
    ELSE            reduce using rule 36 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 36 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 36 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 36 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 36 (statement -> expression SEMICOLON .)
    INT             reduce using rule 36 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 36 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 36 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 36 (statement -> expression SEMICOLON .)


state 41

    (8) expression -> LPAREN expression . RPAREN
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 59
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 42

    (9) expression -> term .

    RPAREN          reduce using rule 9 (expression -> term .)
    PLUS            reduce using rule 9 (expression -> term .)
    MINUS           reduce using rule 9 (expression -> term .)
    TIMES           reduce using rule 9 (expression -> term .)
    DIVIDE          reduce using rule 9 (expression -> term .)
    SEMICOLON       reduce using rule 9 (expression -> term .)
    RBRAKETS        reduce using rule 9 (expression -> term .)
    OR              reduce using rule 9 (expression -> term .)
    NOT             reduce using rule 9 (expression -> term .)
    AND             reduce using rule 9 (expression -> term .)
    EQUAL           reduce using rule 9 (expression -> term .)
    NOTEQUAL        reduce using rule 9 (expression -> term .)
    GREATER         reduce using rule 9 (expression -> term .)
    LESS            reduce using rule 9 (expression -> term .)
    GREATEREQUAL    reduce using rule 9 (expression -> term .)
    LESSEQUAL       reduce using rule 9 (expression -> term .)


state 43

    (17) adress -> term ADRESS . expression SEMICOLON
    (18) adress -> term ADRESS . term SEMICOLON
    (19) adress -> term ADRESS . LITSTRING SEMICOLON
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LITSTRING       shift and go to state 62
    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    term                           shift and go to state 60
    expression                     shift and go to state 61
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 44

    (47) if -> if elseif .
    (50) elseif -> elseif . elseif
    (51) elseif -> elseif . else
    (49) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (50) elseif -> . elseif elseif
    (51) elseif -> . elseif else
    (52) else -> . ELSE scope

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    RBRAKETS        reduce using rule 47 (if -> if elseif .)
    LPAREN          reduce using rule 47 (if -> if elseif .)
    IF              reduce using rule 47 (if -> if elseif .)
    FOR             reduce using rule 47 (if -> if elseif .)
    WHILE           reduce using rule 47 (if -> if elseif .)
    PRINT           reduce using rule 47 (if -> if elseif .)
    RETURN          reduce using rule 47 (if -> if elseif .)
    INT             reduce using rule 47 (if -> if elseif .)
    FLOAT           reduce using rule 47 (if -> if elseif .)
    STRING          reduce using rule 47 (if -> if elseif .)
    NUMBER          reduce using rule 47 (if -> if elseif .)
    ELSEIF          shift and go to state 46
    ELSE            shift and go to state 23

  ! ELSEIF          [ reduce using rule 47 (if -> if elseif .) ]
  ! ELSE            [ reduce using rule 47 (if -> if elseif .) ]

    elseif                         shift and go to state 63
    else                           shift and go to state 64

state 45

    (48) if -> if else .

    ELSEIF          reduce using rule 48 (if -> if else .)
    ELSE            reduce using rule 48 (if -> if else .)
    RBRAKETS        reduce using rule 48 (if -> if else .)
    LPAREN          reduce using rule 48 (if -> if else .)
    IF              reduce using rule 48 (if -> if else .)
    FOR             reduce using rule 48 (if -> if else .)
    WHILE           reduce using rule 48 (if -> if else .)
    PRINT           reduce using rule 48 (if -> if else .)
    RETURN          reduce using rule 48 (if -> if else .)
    INT             reduce using rule 48 (if -> if else .)
    FLOAT           reduce using rule 48 (if -> if else .)
    STRING          reduce using rule 48 (if -> if else .)
    NUMBER          reduce using rule 48 (if -> if else .)


state 46

    (49) elseif -> ELSEIF . LPAREN condition RPAREN scope

    LPAREN          shift and go to state 65


state 47

    (10) term -> type ID .

    ADRESS          reduce using rule 10 (term -> type ID .)
    RBRAKETS        reduce using rule 10 (term -> type ID .)
    PLUS            reduce using rule 10 (term -> type ID .)
    MINUS           reduce using rule 10 (term -> type ID .)
    TIMES           reduce using rule 10 (term -> type ID .)
    DIVIDE          reduce using rule 10 (term -> type ID .)
    SEMICOLON       reduce using rule 10 (term -> type ID .)
    RPAREN          reduce using rule 10 (term -> type ID .)
    OR              reduce using rule 10 (term -> type ID .)
    NOT             reduce using rule 10 (term -> type ID .)
    AND             reduce using rule 10 (term -> type ID .)
    EQUAL           reduce using rule 10 (term -> type ID .)
    NOTEQUAL        reduce using rule 10 (term -> type ID .)
    GREATER         reduce using rule 10 (term -> type ID .)
    LESS            reduce using rule 10 (term -> type ID .)
    GREATEREQUAL    reduce using rule 10 (term -> type ID .)
    LESSEQUAL       reduce using rule 10 (term -> type ID .)
    COMMA           reduce using rule 10 (term -> type ID .)


state 48

    (46) if -> IF LPAREN . condition RPAREN scope
    (20) condition -> . expression OR expression
    (21) condition -> . expression NOT expression
    (22) condition -> . expression AND expression
    (23) condition -> . expression EQUAL expression
    (24) condition -> . condition OR condition
    (25) condition -> . condition NOT condition
    (26) condition -> . condition AND condition
    (27) condition -> . expression NOTEQUAL expression
    (28) condition -> . expression GREATER expression
    (29) condition -> . expression LESS expression
    (30) condition -> . expression GREATEREQUAL expression
    (31) condition -> . expression LESSEQUAL expression
    (32) condition -> . LPAREN condition RPAREN
    (33) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 66
    NOT             shift and go to state 69
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    condition                      shift and go to state 67
    expression                     shift and go to state 68
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 49

    (52) else -> ELSE scope .

    RBRAKETS        reduce using rule 52 (else -> ELSE scope .)
    LPAREN          reduce using rule 52 (else -> ELSE scope .)
    IF              reduce using rule 52 (else -> ELSE scope .)
    ELSE            reduce using rule 52 (else -> ELSE scope .)
    FOR             reduce using rule 52 (else -> ELSE scope .)
    WHILE           reduce using rule 52 (else -> ELSE scope .)
    PRINT           reduce using rule 52 (else -> ELSE scope .)
    RETURN          reduce using rule 52 (else -> ELSE scope .)
    INT             reduce using rule 52 (else -> ELSE scope .)
    FLOAT           reduce using rule 52 (else -> ELSE scope .)
    STRING          reduce using rule 52 (else -> ELSE scope .)
    NUMBER          reduce using rule 52 (else -> ELSE scope .)
    ELSEIF          reduce using rule 52 (else -> ELSE scope .)


state 50

    (56) for -> FOR LPAREN . for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
    (57) for_initilizer -> . adress
    (17) adress -> . term ADRESS expression SEMICOLON
    (18) adress -> . term ADRESS term SEMICOLON
    (19) adress -> . term ADRESS LITSTRING SEMICOLON
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    for_initilizer                 shift and go to state 70
    adress                         shift and go to state 71
    term                           shift and go to state 72
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 51

    (58) while -> WHILE LPAREN . condition RPAREN scope
    (20) condition -> . expression OR expression
    (21) condition -> . expression NOT expression
    (22) condition -> . expression AND expression
    (23) condition -> . expression EQUAL expression
    (24) condition -> . condition OR condition
    (25) condition -> . condition NOT condition
    (26) condition -> . condition AND condition
    (27) condition -> . expression NOTEQUAL expression
    (28) condition -> . expression GREATER expression
    (29) condition -> . expression LESS expression
    (30) condition -> . expression GREATEREQUAL expression
    (31) condition -> . expression LESSEQUAL expression
    (32) condition -> . LPAREN condition RPAREN
    (33) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 66
    NOT             shift and go to state 69
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    condition                      shift and go to state 73
    expression                     shift and go to state 68
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 52

    (53) print -> PRINT LPAREN . LITSTRING RPAREN SEMICOLON
    (54) print -> PRINT LPAREN . LITSTRING COMMA param RPAREN SEMICOLON

    LITSTRING       shift and go to state 74


state 53

    (15) return -> RETURN expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 75
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 54

    (16) return -> RETURN SEMICOLON .

    RBRAKETS        reduce using rule 16 (return -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 16 (return -> RETURN SEMICOLON .)
    IF              reduce using rule 16 (return -> RETURN SEMICOLON .)
    ELSE            reduce using rule 16 (return -> RETURN SEMICOLON .)
    FOR             reduce using rule 16 (return -> RETURN SEMICOLON .)
    WHILE           reduce using rule 16 (return -> RETURN SEMICOLON .)
    PRINT           reduce using rule 16 (return -> RETURN SEMICOLON .)
    RETURN          reduce using rule 16 (return -> RETURN SEMICOLON .)
    INT             reduce using rule 16 (return -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 16 (return -> RETURN SEMICOLON .)
    STRING          reduce using rule 16 (return -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 16 (return -> RETURN SEMICOLON .)


state 55

    (4) expression -> expression PLUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 4 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 4 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 4 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 4 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression PLUS expression .)
    OR              reduce using rule 4 (expression -> expression PLUS expression .)
    NOT             reduce using rule 4 (expression -> expression PLUS expression .)
    AND             reduce using rule 4 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 4 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 4 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 4 (expression -> expression PLUS expression .)
    LESS            reduce using rule 4 (expression -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 4 (expression -> expression PLUS expression .)
    LESSEQUAL       reduce using rule 4 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 56

    (5) expression -> expression MINUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 5 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 5 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 5 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 5 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 5 (expression -> expression MINUS expression .)
    OR              reduce using rule 5 (expression -> expression MINUS expression .)
    NOT             reduce using rule 5 (expression -> expression MINUS expression .)
    AND             reduce using rule 5 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 5 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 5 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 5 (expression -> expression MINUS expression .)
    LESS            reduce using rule 5 (expression -> expression MINUS expression .)
    GREATEREQUAL    reduce using rule 5 (expression -> expression MINUS expression .)
    LESSEQUAL       reduce using rule 5 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39

  ! TIMES           [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]


state 57

    (6) expression -> expression TIMES expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 6 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 6 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 6 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 6 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 6 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 6 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 6 (expression -> expression TIMES expression .)
    OR              reduce using rule 6 (expression -> expression TIMES expression .)
    NOT             reduce using rule 6 (expression -> expression TIMES expression .)
    AND             reduce using rule 6 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 6 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 6 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 6 (expression -> expression TIMES expression .)
    LESS            reduce using rule 6 (expression -> expression TIMES expression .)
    GREATEREQUAL    reduce using rule 6 (expression -> expression TIMES expression .)
    LESSEQUAL       reduce using rule 6 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! TIMES           [ shift and go to state 38 ]
  ! DIVIDE          [ shift and go to state 39 ]


state 58

    (7) expression -> expression DIVIDE expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 7 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 7 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 7 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 7 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 7 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 7 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 7 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 7 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 7 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 7 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 7 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 7 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 7 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 7 (expression -> expression DIVIDE expression .)
    GREATEREQUAL    reduce using rule 7 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 7 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! TIMES           [ shift and go to state 38 ]
  ! DIVIDE          [ shift and go to state 39 ]


state 59

    (8) expression -> LPAREN expression RPAREN .

    RBRAKETS        reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 8 (expression -> LPAREN expression RPAREN .)


state 60

    (18) adress -> term ADRESS term . SEMICOLON
    (9) expression -> term .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 76
    PLUS            reduce using rule 9 (expression -> term .)
    MINUS           reduce using rule 9 (expression -> term .)
    TIMES           reduce using rule 9 (expression -> term .)
    DIVIDE          reduce using rule 9 (expression -> term .)

  ! SEMICOLON       [ reduce using rule 9 (expression -> term .) ]


state 61

    (17) adress -> term ADRESS expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 77
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 62

    (19) adress -> term ADRESS LITSTRING . SEMICOLON

    SEMICOLON       shift and go to state 78


state 63

    (50) elseif -> elseif elseif .
    (50) elseif -> elseif . elseif
    (51) elseif -> elseif . else
    (49) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (50) elseif -> . elseif elseif
    (51) elseif -> . elseif else
    (52) else -> . ELSE scope

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    RBRAKETS        reduce using rule 50 (elseif -> elseif elseif .)
    LPAREN          reduce using rule 50 (elseif -> elseif elseif .)
    IF              reduce using rule 50 (elseif -> elseif elseif .)
    FOR             reduce using rule 50 (elseif -> elseif elseif .)
    WHILE           reduce using rule 50 (elseif -> elseif elseif .)
    PRINT           reduce using rule 50 (elseif -> elseif elseif .)
    RETURN          reduce using rule 50 (elseif -> elseif elseif .)
    INT             reduce using rule 50 (elseif -> elseif elseif .)
    FLOAT           reduce using rule 50 (elseif -> elseif elseif .)
    STRING          reduce using rule 50 (elseif -> elseif elseif .)
    NUMBER          reduce using rule 50 (elseif -> elseif elseif .)
    ELSEIF          shift and go to state 46
    ELSE            shift and go to state 23

  ! ELSEIF          [ reduce using rule 50 (elseif -> elseif elseif .) ]
  ! ELSE            [ reduce using rule 50 (elseif -> elseif elseif .) ]

    elseif                         shift and go to state 63
    else                           shift and go to state 64

state 64

    (51) elseif -> elseif else .

    ELSEIF          reduce using rule 51 (elseif -> elseif else .)
    ELSE            reduce using rule 51 (elseif -> elseif else .)
    RBRAKETS        reduce using rule 51 (elseif -> elseif else .)
    LPAREN          reduce using rule 51 (elseif -> elseif else .)
    IF              reduce using rule 51 (elseif -> elseif else .)
    FOR             reduce using rule 51 (elseif -> elseif else .)
    WHILE           reduce using rule 51 (elseif -> elseif else .)
    PRINT           reduce using rule 51 (elseif -> elseif else .)
    RETURN          reduce using rule 51 (elseif -> elseif else .)
    INT             reduce using rule 51 (elseif -> elseif else .)
    FLOAT           reduce using rule 51 (elseif -> elseif else .)
    STRING          reduce using rule 51 (elseif -> elseif else .)
    NUMBER          reduce using rule 51 (elseif -> elseif else .)


state 65

    (49) elseif -> ELSEIF LPAREN . condition RPAREN scope
    (20) condition -> . expression OR expression
    (21) condition -> . expression NOT expression
    (22) condition -> . expression AND expression
    (23) condition -> . expression EQUAL expression
    (24) condition -> . condition OR condition
    (25) condition -> . condition NOT condition
    (26) condition -> . condition AND condition
    (27) condition -> . expression NOTEQUAL expression
    (28) condition -> . expression GREATER expression
    (29) condition -> . expression LESS expression
    (30) condition -> . expression GREATEREQUAL expression
    (31) condition -> . expression LESSEQUAL expression
    (32) condition -> . LPAREN condition RPAREN
    (33) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 66
    NOT             shift and go to state 69
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    condition                      shift and go to state 79
    expression                     shift and go to state 68
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 66

    (32) condition -> LPAREN . condition RPAREN
    (8) expression -> LPAREN . expression RPAREN
    (20) condition -> . expression OR expression
    (21) condition -> . expression NOT expression
    (22) condition -> . expression AND expression
    (23) condition -> . expression EQUAL expression
    (24) condition -> . condition OR condition
    (25) condition -> . condition NOT condition
    (26) condition -> . condition AND condition
    (27) condition -> . expression NOTEQUAL expression
    (28) condition -> . expression GREATER expression
    (29) condition -> . expression LESS expression
    (30) condition -> . expression GREATEREQUAL expression
    (31) condition -> . expression LESSEQUAL expression
    (32) condition -> . LPAREN condition RPAREN
    (33) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 66
    NOT             shift and go to state 69
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    condition                      shift and go to state 80
    expression                     shift and go to state 81
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 67

    (46) if -> IF LPAREN condition . RPAREN scope
    (24) condition -> condition . OR condition
    (25) condition -> condition . NOT condition
    (26) condition -> condition . AND condition

    RPAREN          shift and go to state 82
    OR              shift and go to state 83
    NOT             shift and go to state 84
    AND             shift and go to state 85


state 68

    (20) condition -> expression . OR expression
    (21) condition -> expression . NOT expression
    (22) condition -> expression . AND expression
    (23) condition -> expression . EQUAL expression
    (27) condition -> expression . NOTEQUAL expression
    (28) condition -> expression . GREATER expression
    (29) condition -> expression . LESS expression
    (30) condition -> expression . GREATEREQUAL expression
    (31) condition -> expression . LESSEQUAL expression
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    OR              shift and go to state 86
    NOT             shift and go to state 87
    AND             shift and go to state 88
    EQUAL           shift and go to state 89
    NOTEQUAL        shift and go to state 90
    GREATER         shift and go to state 91
    LESS            shift and go to state 92
    GREATEREQUAL    shift and go to state 93
    LESSEQUAL       shift and go to state 94
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 69

    (33) condition -> NOT . condition
    (20) condition -> . expression OR expression
    (21) condition -> . expression NOT expression
    (22) condition -> . expression AND expression
    (23) condition -> . expression EQUAL expression
    (24) condition -> . condition OR condition
    (25) condition -> . condition NOT condition
    (26) condition -> . condition AND condition
    (27) condition -> . expression NOTEQUAL expression
    (28) condition -> . expression GREATER expression
    (29) condition -> . expression LESS expression
    (30) condition -> . expression GREATEREQUAL expression
    (31) condition -> . expression LESSEQUAL expression
    (32) condition -> . LPAREN condition RPAREN
    (33) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 66
    NOT             shift and go to state 69
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    condition                      shift and go to state 95
    expression                     shift and go to state 68
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 70

    (56) for -> FOR LPAREN for_initilizer . SEMICOLON condition SEMICOLON expression RPAREN scope

    SEMICOLON       shift and go to state 96


state 71

    (57) for_initilizer -> adress .

    SEMICOLON       reduce using rule 57 (for_initilizer -> adress .)


state 72

    (17) adress -> term . ADRESS expression SEMICOLON
    (18) adress -> term . ADRESS term SEMICOLON
    (19) adress -> term . ADRESS LITSTRING SEMICOLON

    ADRESS          shift and go to state 43


state 73

    (58) while -> WHILE LPAREN condition . RPAREN scope
    (24) condition -> condition . OR condition
    (25) condition -> condition . NOT condition
    (26) condition -> condition . AND condition

    RPAREN          shift and go to state 97
    OR              shift and go to state 83
    NOT             shift and go to state 84
    AND             shift and go to state 85


state 74

    (53) print -> PRINT LPAREN LITSTRING . RPAREN SEMICOLON
    (54) print -> PRINT LPAREN LITSTRING . COMMA param RPAREN SEMICOLON

    RPAREN          shift and go to state 98
    COMMA           shift and go to state 99


state 75

    (15) return -> RETURN expression SEMICOLON .

    RBRAKETS        reduce using rule 15 (return -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 15 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 15 (return -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 15 (return -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 15 (return -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 15 (return -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 15 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 15 (return -> RETURN expression SEMICOLON .)
    INT             reduce using rule 15 (return -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 15 (return -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 15 (return -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 15 (return -> RETURN expression SEMICOLON .)


state 76

    (18) adress -> term ADRESS term SEMICOLON .

    RBRAKETS        reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    LPAREN          reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    IF              reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    ELSE            reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    FOR             reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    WHILE           reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    PRINT           reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    RETURN          reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    INT             reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    FLOAT           reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    STRING          reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    NUMBER          reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    SEMICOLON       reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)


state 77

    (17) adress -> term ADRESS expression SEMICOLON .

    RBRAKETS        reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    LPAREN          reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    IF              reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    ELSE            reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    FOR             reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    WHILE           reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    PRINT           reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    RETURN          reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    INT             reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    FLOAT           reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    STRING          reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    NUMBER          reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    SEMICOLON       reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)


state 78

    (19) adress -> term ADRESS LITSTRING SEMICOLON .

    RBRAKETS        reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    LPAREN          reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    IF              reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    ELSE            reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    FOR             reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    WHILE           reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    PRINT           reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    RETURN          reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    INT             reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    FLOAT           reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    STRING          reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    NUMBER          reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)
    SEMICOLON       reduce using rule 19 (adress -> term ADRESS LITSTRING SEMICOLON .)


state 79

    (49) elseif -> ELSEIF LPAREN condition . RPAREN scope
    (24) condition -> condition . OR condition
    (25) condition -> condition . NOT condition
    (26) condition -> condition . AND condition

    RPAREN          shift and go to state 100
    OR              shift and go to state 83
    NOT             shift and go to state 84
    AND             shift and go to state 85


state 80

    (32) condition -> LPAREN condition . RPAREN
    (24) condition -> condition . OR condition
    (25) condition -> condition . NOT condition
    (26) condition -> condition . AND condition

    RPAREN          shift and go to state 101
    OR              shift and go to state 83
    NOT             shift and go to state 84
    AND             shift and go to state 85


state 81

    (8) expression -> LPAREN expression . RPAREN
    (20) condition -> expression . OR expression
    (21) condition -> expression . NOT expression
    (22) condition -> expression . AND expression
    (23) condition -> expression . EQUAL expression
    (27) condition -> expression . NOTEQUAL expression
    (28) condition -> expression . GREATER expression
    (29) condition -> expression . LESS expression
    (30) condition -> expression . GREATEREQUAL expression
    (31) condition -> expression . LESSEQUAL expression
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 59
    OR              shift and go to state 86
    NOT             shift and go to state 87
    AND             shift and go to state 88
    EQUAL           shift and go to state 89
    NOTEQUAL        shift and go to state 90
    GREATER         shift and go to state 91
    LESS            shift and go to state 92
    GREATEREQUAL    shift and go to state 93
    LESSEQUAL       shift and go to state 94
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 82

    (46) if -> IF LPAREN condition RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 102

state 83

    (24) condition -> condition OR . condition
    (20) condition -> . expression OR expression
    (21) condition -> . expression NOT expression
    (22) condition -> . expression AND expression
    (23) condition -> . expression EQUAL expression
    (24) condition -> . condition OR condition
    (25) condition -> . condition NOT condition
    (26) condition -> . condition AND condition
    (27) condition -> . expression NOTEQUAL expression
    (28) condition -> . expression GREATER expression
    (29) condition -> . expression LESS expression
    (30) condition -> . expression GREATEREQUAL expression
    (31) condition -> . expression LESSEQUAL expression
    (32) condition -> . LPAREN condition RPAREN
    (33) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 66
    NOT             shift and go to state 69
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    condition                      shift and go to state 103
    expression                     shift and go to state 68
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 84

    (25) condition -> condition NOT . condition
    (20) condition -> . expression OR expression
    (21) condition -> . expression NOT expression
    (22) condition -> . expression AND expression
    (23) condition -> . expression EQUAL expression
    (24) condition -> . condition OR condition
    (25) condition -> . condition NOT condition
    (26) condition -> . condition AND condition
    (27) condition -> . expression NOTEQUAL expression
    (28) condition -> . expression GREATER expression
    (29) condition -> . expression LESS expression
    (30) condition -> . expression GREATEREQUAL expression
    (31) condition -> . expression LESSEQUAL expression
    (32) condition -> . LPAREN condition RPAREN
    (33) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 66
    NOT             shift and go to state 69
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    condition                      shift and go to state 104
    expression                     shift and go to state 68
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 85

    (26) condition -> condition AND . condition
    (20) condition -> . expression OR expression
    (21) condition -> . expression NOT expression
    (22) condition -> . expression AND expression
    (23) condition -> . expression EQUAL expression
    (24) condition -> . condition OR condition
    (25) condition -> . condition NOT condition
    (26) condition -> . condition AND condition
    (27) condition -> . expression NOTEQUAL expression
    (28) condition -> . expression GREATER expression
    (29) condition -> . expression LESS expression
    (30) condition -> . expression GREATEREQUAL expression
    (31) condition -> . expression LESSEQUAL expression
    (32) condition -> . LPAREN condition RPAREN
    (33) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 66
    NOT             shift and go to state 69
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    condition                      shift and go to state 105
    expression                     shift and go to state 68
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 86

    (20) condition -> expression OR . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 106
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 87

    (21) condition -> expression NOT . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 107
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 88

    (22) condition -> expression AND . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 108
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 89

    (23) condition -> expression EQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 109
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 90

    (27) condition -> expression NOTEQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 110
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 91

    (28) condition -> expression GREATER . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 111
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 92

    (29) condition -> expression LESS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 112
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 93

    (30) condition -> expression GREATEREQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 113
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 94

    (31) condition -> expression LESSEQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 114
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 95

    (33) condition -> NOT condition .
    (24) condition -> condition . OR condition
    (25) condition -> condition . NOT condition
    (26) condition -> condition . AND condition

    RPAREN          reduce using rule 33 (condition -> NOT condition .)
    OR              reduce using rule 33 (condition -> NOT condition .)
    NOT             reduce using rule 33 (condition -> NOT condition .)
    AND             reduce using rule 33 (condition -> NOT condition .)
    SEMICOLON       reduce using rule 33 (condition -> NOT condition .)

  ! OR              [ shift and go to state 83 ]
  ! NOT             [ shift and go to state 84 ]
  ! AND             [ shift and go to state 85 ]


state 96

    (56) for -> FOR LPAREN for_initilizer SEMICOLON . condition SEMICOLON expression RPAREN scope
    (20) condition -> . expression OR expression
    (21) condition -> . expression NOT expression
    (22) condition -> . expression AND expression
    (23) condition -> . expression EQUAL expression
    (24) condition -> . condition OR condition
    (25) condition -> . condition NOT condition
    (26) condition -> . condition AND condition
    (27) condition -> . expression NOTEQUAL expression
    (28) condition -> . expression GREATER expression
    (29) condition -> . expression LESS expression
    (30) condition -> . expression GREATEREQUAL expression
    (31) condition -> . expression LESSEQUAL expression
    (32) condition -> . LPAREN condition RPAREN
    (33) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 66
    NOT             shift and go to state 69
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    condition                      shift and go to state 115
    expression                     shift and go to state 68
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 97

    (58) while -> WHILE LPAREN condition RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 116

state 98

    (53) print -> PRINT LPAREN LITSTRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 117


state 99

    (54) print -> PRINT LPAREN LITSTRING COMMA . param RPAREN SEMICOLON
    (44) param -> . param COMMA param
    (45) param -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    param                          shift and go to state 118
    term                           shift and go to state 119
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 100

    (49) elseif -> ELSEIF LPAREN condition RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 120

state 101

    (32) condition -> LPAREN condition RPAREN .

    RPAREN          reduce using rule 32 (condition -> LPAREN condition RPAREN .)
    OR              reduce using rule 32 (condition -> LPAREN condition RPAREN .)
    NOT             reduce using rule 32 (condition -> LPAREN condition RPAREN .)
    AND             reduce using rule 32 (condition -> LPAREN condition RPAREN .)
    SEMICOLON       reduce using rule 32 (condition -> LPAREN condition RPAREN .)


state 102

    (46) if -> IF LPAREN condition RPAREN scope .

    ELSEIF          reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    ELSE            reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    RBRAKETS        reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    IF              reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    FOR             reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    INT             reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    STRING          reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 46 (if -> IF LPAREN condition RPAREN scope .)


state 103

    (24) condition -> condition OR condition .
    (24) condition -> condition . OR condition
    (25) condition -> condition . NOT condition
    (26) condition -> condition . AND condition

    RPAREN          reduce using rule 24 (condition -> condition OR condition .)
    OR              reduce using rule 24 (condition -> condition OR condition .)
    SEMICOLON       reduce using rule 24 (condition -> condition OR condition .)
    NOT             shift and go to state 84
    AND             shift and go to state 85

  ! NOT             [ reduce using rule 24 (condition -> condition OR condition .) ]
  ! AND             [ reduce using rule 24 (condition -> condition OR condition .) ]
  ! OR              [ shift and go to state 83 ]


state 104

    (25) condition -> condition NOT condition .
    (24) condition -> condition . OR condition
    (25) condition -> condition . NOT condition
    (26) condition -> condition . AND condition

    RPAREN          reduce using rule 25 (condition -> condition NOT condition .)
    OR              reduce using rule 25 (condition -> condition NOT condition .)
    NOT             reduce using rule 25 (condition -> condition NOT condition .)
    AND             reduce using rule 25 (condition -> condition NOT condition .)
    SEMICOLON       reduce using rule 25 (condition -> condition NOT condition .)

  ! OR              [ shift and go to state 83 ]
  ! NOT             [ shift and go to state 84 ]
  ! AND             [ shift and go to state 85 ]


state 105

    (26) condition -> condition AND condition .
    (24) condition -> condition . OR condition
    (25) condition -> condition . NOT condition
    (26) condition -> condition . AND condition

    RPAREN          reduce using rule 26 (condition -> condition AND condition .)
    OR              reduce using rule 26 (condition -> condition AND condition .)
    AND             reduce using rule 26 (condition -> condition AND condition .)
    SEMICOLON       reduce using rule 26 (condition -> condition AND condition .)
    NOT             shift and go to state 84

  ! NOT             [ reduce using rule 26 (condition -> condition AND condition .) ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 85 ]


state 106

    (20) condition -> expression OR expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 20 (condition -> expression OR expression .)
    OR              reduce using rule 20 (condition -> expression OR expression .)
    NOT             reduce using rule 20 (condition -> expression OR expression .)
    AND             reduce using rule 20 (condition -> expression OR expression .)
    SEMICOLON       reduce using rule 20 (condition -> expression OR expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 107

    (21) condition -> expression NOT expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 21 (condition -> expression NOT expression .)
    OR              reduce using rule 21 (condition -> expression NOT expression .)
    NOT             reduce using rule 21 (condition -> expression NOT expression .)
    AND             reduce using rule 21 (condition -> expression NOT expression .)
    SEMICOLON       reduce using rule 21 (condition -> expression NOT expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 108

    (22) condition -> expression AND expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 22 (condition -> expression AND expression .)
    OR              reduce using rule 22 (condition -> expression AND expression .)
    NOT             reduce using rule 22 (condition -> expression AND expression .)
    AND             reduce using rule 22 (condition -> expression AND expression .)
    SEMICOLON       reduce using rule 22 (condition -> expression AND expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 109

    (23) condition -> expression EQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 23 (condition -> expression EQUAL expression .)
    OR              reduce using rule 23 (condition -> expression EQUAL expression .)
    NOT             reduce using rule 23 (condition -> expression EQUAL expression .)
    AND             reduce using rule 23 (condition -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 23 (condition -> expression EQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 110

    (27) condition -> expression NOTEQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 27 (condition -> expression NOTEQUAL expression .)
    OR              reduce using rule 27 (condition -> expression NOTEQUAL expression .)
    NOT             reduce using rule 27 (condition -> expression NOTEQUAL expression .)
    AND             reduce using rule 27 (condition -> expression NOTEQUAL expression .)
    SEMICOLON       reduce using rule 27 (condition -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 111

    (28) condition -> expression GREATER expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 28 (condition -> expression GREATER expression .)
    OR              reduce using rule 28 (condition -> expression GREATER expression .)
    NOT             reduce using rule 28 (condition -> expression GREATER expression .)
    AND             reduce using rule 28 (condition -> expression GREATER expression .)
    SEMICOLON       reduce using rule 28 (condition -> expression GREATER expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 112

    (29) condition -> expression LESS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 29 (condition -> expression LESS expression .)
    OR              reduce using rule 29 (condition -> expression LESS expression .)
    NOT             reduce using rule 29 (condition -> expression LESS expression .)
    AND             reduce using rule 29 (condition -> expression LESS expression .)
    SEMICOLON       reduce using rule 29 (condition -> expression LESS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 113

    (30) condition -> expression GREATEREQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 30 (condition -> expression GREATEREQUAL expression .)
    OR              reduce using rule 30 (condition -> expression GREATEREQUAL expression .)
    NOT             reduce using rule 30 (condition -> expression GREATEREQUAL expression .)
    AND             reduce using rule 30 (condition -> expression GREATEREQUAL expression .)
    SEMICOLON       reduce using rule 30 (condition -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 114

    (31) condition -> expression LESSEQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 31 (condition -> expression LESSEQUAL expression .)
    OR              reduce using rule 31 (condition -> expression LESSEQUAL expression .)
    NOT             reduce using rule 31 (condition -> expression LESSEQUAL expression .)
    AND             reduce using rule 31 (condition -> expression LESSEQUAL expression .)
    SEMICOLON       reduce using rule 31 (condition -> expression LESSEQUAL expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 115

    (56) for -> FOR LPAREN for_initilizer SEMICOLON condition . SEMICOLON expression RPAREN scope
    (24) condition -> condition . OR condition
    (25) condition -> condition . NOT condition
    (26) condition -> condition . AND condition

    SEMICOLON       shift and go to state 121
    OR              shift and go to state 83
    NOT             shift and go to state 84
    AND             shift and go to state 85


state 116

    (58) while -> WHILE LPAREN condition RPAREN scope .

    RBRAKETS        reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)
    IF              reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)
    ELSE            reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)
    FOR             reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)
    INT             reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)
    STRING          reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 58 (while -> WHILE LPAREN condition RPAREN scope .)


state 117

    (53) print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    LPAREN          reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    IF              reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    ELSE            reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    FOR             reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    INT             reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    FLOAT           reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    STRING          reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)
    NUMBER          reduce using rule 53 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)


state 118

    (54) print -> PRINT LPAREN LITSTRING COMMA param . RPAREN SEMICOLON
    (44) param -> param . COMMA param

    RPAREN          shift and go to state 123
    COMMA           shift and go to state 122


state 119

    (45) param -> term .

    RPAREN          reduce using rule 45 (param -> term .)
    COMMA           reduce using rule 45 (param -> term .)


state 120

    (49) elseif -> ELSEIF LPAREN condition RPAREN scope .

    ELSEIF          reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    ELSE            reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    RBRAKETS        reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    LPAREN          reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    IF              reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    FOR             reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    WHILE           reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    PRINT           reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    RETURN          reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    INT             reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    FLOAT           reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    STRING          reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    NUMBER          reduce using rule 49 (elseif -> ELSEIF LPAREN condition RPAREN scope .)


state 121

    (56) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON . expression RPAREN scope
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    LPAREN          shift and go to state 11
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    expression                     shift and go to state 124
    term                           shift and go to state 42
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 122

    (44) param -> param COMMA . param
    (44) param -> . param COMMA param
    (45) param -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (55) factor -> . NUMBER

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 31

    param                          shift and go to state 125
    term                           shift and go to state 119
    type                           shift and go to state 20
    factor                         shift and go to state 21

state 123

    (54) print -> PRINT LPAREN LITSTRING COMMA param RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 126


state 124

    (56) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression . RPAREN scope
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 127
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    TIMES           shift and go to state 38
    DIVIDE          shift and go to state 39


state 125

    (44) param -> param COMMA param .
    (44) param -> param . COMMA param

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 44 (param -> param COMMA param .)
    COMMA           shift and go to state 122

  ! COMMA           [ reduce using rule 44 (param -> param COMMA param .) ]


state 126

    (54) print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    LPAREN          reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    IF              reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    ELSE            reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    FOR             reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    WHILE           reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    PRINT           reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    RETURN          reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    INT             reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    FLOAT           reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    STRING          reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)
    NUMBER          reduce using rule 54 (print -> PRINT LPAREN LITSTRING COMMA param RPAREN SEMICOLON .)


state 127

    (56) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN . scope
    (2) scope -> . LBRAKETS multiple_statements RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 128

state 128

    (56) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .

    RBRAKETS        reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    LPAREN          reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    IF              reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    ELSE            reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    FOR             reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    WHILE           reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    PRINT           reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    RETURN          reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    INT             reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    FLOAT           reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    STRING          reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)
    NUMBER          reduce using rule 56 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 13 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 44 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 44 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 60 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 63 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 63 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 125 resolved as shift
