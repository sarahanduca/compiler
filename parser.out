Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    COMMA
    FALSE
    LSQUAREB
    RSQUAREB
    TRUE

Grammar

Rule 0     S' -> main
Rule 1     main -> INT MAIN LPAREN RPAREN scope
Rule 2     scope -> LBRAKETS statement RBRAKETS
Rule 3     scope -> LBRAKETS expression RBRAKETS
Rule 4     expression -> expression PLUS expression
Rule 5     expression -> expression MINUS expression
Rule 6     expression -> expression TIMES expression
Rule 7     expression -> expression DIVIDE expression
Rule 8     expression -> LPAREN expression RPAREN
Rule 9     expression -> term
Rule 10    term -> type ID
Rule 11    term -> factor
Rule 12    type -> INT
Rule 13    type -> FLOAT
Rule 14    type -> STRING
Rule 15    return -> RETURN expression SEMICOLON
Rule 16    return -> RETURN SEMICOLON
Rule 17    adress -> term ADRESS expression SEMICOLON
Rule 18    adress -> term ADRESS term SEMICOLON
Rule 19    adress -> term ADRESS NUMBER SEMICOLON
Rule 20    adress -> term ADRESS LITSTRING SEMICOLON
Rule 21    condition -> expression OR expression
Rule 22    condition -> expression NOT expression
Rule 23    condition -> expression AND expression
Rule 24    condition -> expression EQUAL expression
Rule 25    condition -> condition OR condition
Rule 26    condition -> condition NOT condition
Rule 27    condition -> condition AND condition
Rule 28    condition -> expression NOTEQUAL expression
Rule 29    condition -> expression GREATER expression
Rule 30    condition -> expression LESS expression
Rule 31    condition -> expression GREATEREQUAL expression
Rule 32    condition -> expression LESSEQUAL expression
Rule 33    condition -> LPAREN condition RPAREN
Rule 34    condition -> NOT condition
Rule 35    statement -> expression SEMICOLON
Rule 36    statement -> if
Rule 37    statement -> else
Rule 38    statement -> for
Rule 39    statement -> while
Rule 40    statement -> print
Rule 41    statement -> adress
Rule 42    statement -> return
Rule 43    if -> IF LPAREN condition RPAREN scope
Rule 44    if -> if elseif
Rule 45    if -> if else
Rule 46    elseif -> ELSEIF LPAREN condition RPAREN scope
Rule 47    elseif -> elseif elseif
Rule 48    elseif -> elseif else
Rule 49    else -> ELSE scope
Rule 50    print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON
Rule 51    print -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 52    factor -> NUMBER
Rule 53    factor -> LPAREN expression RPAREN
Rule 54    for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
Rule 55    for_initilizer -> adress
Rule 56    while -> WHILE LPAREN condition RPAREN scope

Terminals, with rules where they appear

ADRESS               : 17 18 19 20
AND                  : 23 27
BOOL                 : 
COMMA                : 
DIVIDE               : 7
ELSE                 : 49
ELSEIF               : 46
EQUAL                : 24
FALSE                : 
FLOAT                : 13
FOR                  : 54
GREATER              : 29
GREATEREQUAL         : 31
ID                   : 10
IF                   : 43
INT                  : 1 12
LBRAKETS             : 2 3
LESS                 : 30
LESSEQUAL            : 32
LITSTRING            : 20 50
LPAREN               : 1 8 33 43 46 50 51 53 54 56
LSQUAREB             : 
MAIN                 : 1
MINUS                : 5
NOT                  : 22 26 34
NOTEQUAL             : 28
NUMBER               : 19 52
OR                   : 21 25
PLUS                 : 4
PRINT                : 50 51
RBRAKETS             : 2 3
RETURN               : 15 16
RPAREN               : 1 8 33 43 46 50 51 53 54 56
RSQUAREB             : 
SEMICOLON            : 15 16 17 18 19 20 35 50 51 54 54
STRING               : 14
TIMES                : 6
TRUE                 : 
WHILE                : 56
error                : 

Nonterminals, with rules where they appear

adress               : 41 55
condition            : 25 25 26 26 27 27 33 34 43 46 54 56
else                 : 37 45 48
elseif               : 44 47 47 48
expression           : 3 4 4 5 5 6 6 7 7 8 15 17 21 21 22 22 23 23 24 24 28 28 29 29 30 30 31 31 32 32 35 51 53 54
factor               : 11
for                  : 38
for_initilizer       : 54
if                   : 36 44 45
main                 : 0
print                : 40
return               : 42
scope                : 1 43 46 49 54 56
statement            : 2
term                 : 9 17 18 18 19 20
type                 : 10
while                : 39

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . INT MAIN LPAREN RPAREN scope

    INT             shift and go to state 2

    main                           shift and go to state 1

state 1

    (0) S' -> main .



state 2

    (1) main -> INT . MAIN LPAREN RPAREN scope

    MAIN            shift and go to state 3


state 3

    (1) main -> INT MAIN . LPAREN RPAREN scope

    LPAREN          shift and go to state 4


state 4

    (1) main -> INT MAIN LPAREN . RPAREN scope

    RPAREN          shift and go to state 5


state 5

    (1) main -> INT MAIN LPAREN RPAREN . scope
    (2) scope -> . LBRAKETS statement RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 6

state 6

    (1) main -> INT MAIN LPAREN RPAREN scope .

    $end            reduce using rule 1 (main -> INT MAIN LPAREN RPAREN scope .)


state 7

    (2) scope -> LBRAKETS . statement RBRAKETS
    (3) scope -> LBRAKETS . expression RBRAKETS
    (35) statement -> . expression SEMICOLON
    (36) statement -> . if
    (37) statement -> . else
    (38) statement -> . for
    (39) statement -> . while
    (40) statement -> . print
    (41) statement -> . adress
    (42) statement -> . return
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (43) if -> . IF LPAREN condition RPAREN scope
    (44) if -> . if elseif
    (45) if -> . if else
    (49) else -> . ELSE scope
    (54) for -> . FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
    (56) while -> . WHILE LPAREN condition RPAREN scope
    (50) print -> . PRINT LPAREN LITSTRING RPAREN SEMICOLON
    (51) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (17) adress -> . term ADRESS expression SEMICOLON
    (18) adress -> . term ADRESS term SEMICOLON
    (19) adress -> . term ADRESS NUMBER SEMICOLON
    (20) adress -> . term ADRESS LITSTRING SEMICOLON
    (15) return -> . RETURN expression SEMICOLON
    (16) return -> . RETURN SEMICOLON
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    IF              shift and go to state 19
    ELSE            shift and go to state 20
    FOR             shift and go to state 21
    WHILE           shift and go to state 22
    PRINT           shift and go to state 23
    RETURN          shift and go to state 25
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    statement                      shift and go to state 8
    expression                     shift and go to state 9
    if                             shift and go to state 10
    else                           shift and go to state 11
    for                            shift and go to state 12
    while                          shift and go to state 13
    print                          shift and go to state 14
    adress                         shift and go to state 15
    return                         shift and go to state 16
    term                           shift and go to state 18
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 8

    (2) scope -> LBRAKETS statement . RBRAKETS

    RBRAKETS        shift and go to state 31


state 9

    (3) scope -> LBRAKETS expression . RBRAKETS
    (35) statement -> expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        shift and go to state 32
    SEMICOLON       shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 10

    (36) statement -> if .
    (44) if -> if . elseif
    (45) if -> if . else
    (46) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (47) elseif -> . elseif elseif
    (48) elseif -> . elseif else
    (49) else -> . ELSE scope

    RBRAKETS        reduce using rule 36 (statement -> if .)
    ELSEIF          shift and go to state 40
    ELSE            shift and go to state 20

    elseif                         shift and go to state 38
    else                           shift and go to state 39

state 11

    (37) statement -> else .

    RBRAKETS        reduce using rule 37 (statement -> else .)


state 12

    (38) statement -> for .

    RBRAKETS        reduce using rule 38 (statement -> for .)


state 13

    (39) statement -> while .

    RBRAKETS        reduce using rule 39 (statement -> while .)


state 14

    (40) statement -> print .

    RBRAKETS        reduce using rule 40 (statement -> print .)


state 15

    (41) statement -> adress .

    RBRAKETS        reduce using rule 41 (statement -> adress .)


state 16

    (42) statement -> return .

    RBRAKETS        reduce using rule 42 (statement -> return .)


state 17

    (8) expression -> LPAREN . expression RPAREN
    (53) factor -> LPAREN . expression RPAREN
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 41
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 18

    (9) expression -> term .
    (17) adress -> term . ADRESS expression SEMICOLON
    (18) adress -> term . ADRESS term SEMICOLON
    (19) adress -> term . ADRESS NUMBER SEMICOLON
    (20) adress -> term . ADRESS LITSTRING SEMICOLON

    RBRAKETS        reduce using rule 9 (expression -> term .)
    SEMICOLON       reduce using rule 9 (expression -> term .)
    PLUS            reduce using rule 9 (expression -> term .)
    MINUS           reduce using rule 9 (expression -> term .)
    TIMES           reduce using rule 9 (expression -> term .)
    DIVIDE          reduce using rule 9 (expression -> term .)
    ADRESS          shift and go to state 43


state 19

    (43) if -> IF . LPAREN condition RPAREN scope

    LPAREN          shift and go to state 44


state 20

    (49) else -> ELSE . scope
    (2) scope -> . LBRAKETS statement RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 45

state 21

    (54) for -> FOR . LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope

    LPAREN          shift and go to state 46


state 22

    (56) while -> WHILE . LPAREN condition RPAREN scope

    LPAREN          shift and go to state 47


state 23

    (50) print -> PRINT . LPAREN LITSTRING RPAREN SEMICOLON
    (51) print -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 48


state 24

    (52) factor -> NUMBER .

    ADRESS          reduce using rule 52 (factor -> NUMBER .)
    RBRAKETS        reduce using rule 52 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 52 (factor -> NUMBER .)
    PLUS            reduce using rule 52 (factor -> NUMBER .)
    MINUS           reduce using rule 52 (factor -> NUMBER .)
    TIMES           reduce using rule 52 (factor -> NUMBER .)
    DIVIDE          reduce using rule 52 (factor -> NUMBER .)
    RPAREN          reduce using rule 52 (factor -> NUMBER .)
    OR              reduce using rule 52 (factor -> NUMBER .)
    NOT             reduce using rule 52 (factor -> NUMBER .)
    AND             reduce using rule 52 (factor -> NUMBER .)
    EQUAL           reduce using rule 52 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 52 (factor -> NUMBER .)
    GREATER         reduce using rule 52 (factor -> NUMBER .)
    LESS            reduce using rule 52 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 52 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 52 (factor -> NUMBER .)


state 25

    (15) return -> RETURN . expression SEMICOLON
    (16) return -> RETURN . SEMICOLON
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    SEMICOLON       shift and go to state 50
    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 49
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 26

    (10) term -> type . ID

    ID              shift and go to state 51


state 27

    (11) term -> factor .

    ADRESS          reduce using rule 11 (term -> factor .)
    RBRAKETS        reduce using rule 11 (term -> factor .)
    SEMICOLON       reduce using rule 11 (term -> factor .)
    PLUS            reduce using rule 11 (term -> factor .)
    MINUS           reduce using rule 11 (term -> factor .)
    TIMES           reduce using rule 11 (term -> factor .)
    DIVIDE          reduce using rule 11 (term -> factor .)
    RPAREN          reduce using rule 11 (term -> factor .)
    OR              reduce using rule 11 (term -> factor .)
    NOT             reduce using rule 11 (term -> factor .)
    AND             reduce using rule 11 (term -> factor .)
    EQUAL           reduce using rule 11 (term -> factor .)
    NOTEQUAL        reduce using rule 11 (term -> factor .)
    GREATER         reduce using rule 11 (term -> factor .)
    LESS            reduce using rule 11 (term -> factor .)
    GREATEREQUAL    reduce using rule 11 (term -> factor .)
    LESSEQUAL       reduce using rule 11 (term -> factor .)


state 28

    (12) type -> INT .

    ID              reduce using rule 12 (type -> INT .)


state 29

    (13) type -> FLOAT .

    ID              reduce using rule 13 (type -> FLOAT .)


state 30

    (14) type -> STRING .

    ID              reduce using rule 14 (type -> STRING .)


state 31

    (2) scope -> LBRAKETS statement RBRAKETS .

    $end            reduce using rule 2 (scope -> LBRAKETS statement RBRAKETS .)
    RBRAKETS        reduce using rule 2 (scope -> LBRAKETS statement RBRAKETS .)
    ELSEIF          reduce using rule 2 (scope -> LBRAKETS statement RBRAKETS .)
    ELSE            reduce using rule 2 (scope -> LBRAKETS statement RBRAKETS .)


state 32

    (3) scope -> LBRAKETS expression RBRAKETS .

    $end            reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    RBRAKETS        reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    ELSEIF          reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)
    ELSE            reduce using rule 3 (scope -> LBRAKETS expression RBRAKETS .)


state 33

    (35) statement -> expression SEMICOLON .

    RBRAKETS        reduce using rule 35 (statement -> expression SEMICOLON .)


state 34

    (4) expression -> expression PLUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 52
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 35

    (5) expression -> expression MINUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 53
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 36

    (6) expression -> expression TIMES . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 54
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 37

    (7) expression -> expression DIVIDE . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 55
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 38

    (44) if -> if elseif .
    (47) elseif -> elseif . elseif
    (48) elseif -> elseif . else
    (46) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (47) elseif -> . elseif elseif
    (48) elseif -> . elseif else
    (49) else -> . ELSE scope

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    RBRAKETS        reduce using rule 44 (if -> if elseif .)
    ELSEIF          shift and go to state 40
    ELSE            shift and go to state 20

  ! ELSEIF          [ reduce using rule 44 (if -> if elseif .) ]
  ! ELSE            [ reduce using rule 44 (if -> if elseif .) ]

    elseif                         shift and go to state 56
    else                           shift and go to state 57

state 39

    (45) if -> if else .

    ELSEIF          reduce using rule 45 (if -> if else .)
    ELSE            reduce using rule 45 (if -> if else .)
    RBRAKETS        reduce using rule 45 (if -> if else .)


state 40

    (46) elseif -> ELSEIF . LPAREN condition RPAREN scope

    LPAREN          shift and go to state 58


state 41

    (8) expression -> LPAREN expression . RPAREN
    (53) factor -> LPAREN expression . RPAREN
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 59
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 42

    (9) expression -> term .

    RPAREN          reduce using rule 9 (expression -> term .)
    PLUS            reduce using rule 9 (expression -> term .)
    MINUS           reduce using rule 9 (expression -> term .)
    TIMES           reduce using rule 9 (expression -> term .)
    DIVIDE          reduce using rule 9 (expression -> term .)
    SEMICOLON       reduce using rule 9 (expression -> term .)
    RBRAKETS        reduce using rule 9 (expression -> term .)
    OR              reduce using rule 9 (expression -> term .)
    NOT             reduce using rule 9 (expression -> term .)
    AND             reduce using rule 9 (expression -> term .)
    EQUAL           reduce using rule 9 (expression -> term .)
    NOTEQUAL        reduce using rule 9 (expression -> term .)
    GREATER         reduce using rule 9 (expression -> term .)
    LESS            reduce using rule 9 (expression -> term .)
    GREATEREQUAL    reduce using rule 9 (expression -> term .)
    LESSEQUAL       reduce using rule 9 (expression -> term .)


state 43

    (17) adress -> term ADRESS . expression SEMICOLON
    (18) adress -> term ADRESS . term SEMICOLON
    (19) adress -> term ADRESS . NUMBER SEMICOLON
    (20) adress -> term ADRESS . LITSTRING SEMICOLON
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 62
    LITSTRING       shift and go to state 63
    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30

    term                           shift and go to state 60
    expression                     shift and go to state 61
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 44

    (43) if -> IF LPAREN . condition RPAREN scope
    (21) condition -> . expression OR expression
    (22) condition -> . expression NOT expression
    (23) condition -> . expression AND expression
    (24) condition -> . expression EQUAL expression
    (25) condition -> . condition OR condition
    (26) condition -> . condition NOT condition
    (27) condition -> . condition AND condition
    (28) condition -> . expression NOTEQUAL expression
    (29) condition -> . expression GREATER expression
    (30) condition -> . expression LESS expression
    (31) condition -> . expression GREATEREQUAL expression
    (32) condition -> . expression LESSEQUAL expression
    (33) condition -> . LPAREN condition RPAREN
    (34) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 64
    NOT             shift and go to state 67
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    condition                      shift and go to state 65
    expression                     shift and go to state 66
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 45

    (49) else -> ELSE scope .

    RBRAKETS        reduce using rule 49 (else -> ELSE scope .)
    ELSEIF          reduce using rule 49 (else -> ELSE scope .)
    ELSE            reduce using rule 49 (else -> ELSE scope .)


state 46

    (54) for -> FOR LPAREN . for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope
    (55) for_initilizer -> . adress
    (17) adress -> . term ADRESS expression SEMICOLON
    (18) adress -> . term ADRESS term SEMICOLON
    (19) adress -> . term ADRESS NUMBER SEMICOLON
    (20) adress -> . term ADRESS LITSTRING SEMICOLON
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 68

    for_initilizer                 shift and go to state 69
    adress                         shift and go to state 70
    term                           shift and go to state 71
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 47

    (56) while -> WHILE LPAREN . condition RPAREN scope
    (21) condition -> . expression OR expression
    (22) condition -> . expression NOT expression
    (23) condition -> . expression AND expression
    (24) condition -> . expression EQUAL expression
    (25) condition -> . condition OR condition
    (26) condition -> . condition NOT condition
    (27) condition -> . condition AND condition
    (28) condition -> . expression NOTEQUAL expression
    (29) condition -> . expression GREATER expression
    (30) condition -> . expression LESS expression
    (31) condition -> . expression GREATEREQUAL expression
    (32) condition -> . expression LESSEQUAL expression
    (33) condition -> . LPAREN condition RPAREN
    (34) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 64
    NOT             shift and go to state 67
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    condition                      shift and go to state 72
    expression                     shift and go to state 66
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 48

    (50) print -> PRINT LPAREN . LITSTRING RPAREN SEMICOLON
    (51) print -> PRINT LPAREN . expression RPAREN SEMICOLON
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LITSTRING       shift and go to state 73
    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 74
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 49

    (15) return -> RETURN expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 75
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 50

    (16) return -> RETURN SEMICOLON .

    RBRAKETS        reduce using rule 16 (return -> RETURN SEMICOLON .)


state 51

    (10) term -> type ID .

    ADRESS          reduce using rule 10 (term -> type ID .)
    RBRAKETS        reduce using rule 10 (term -> type ID .)
    SEMICOLON       reduce using rule 10 (term -> type ID .)
    PLUS            reduce using rule 10 (term -> type ID .)
    MINUS           reduce using rule 10 (term -> type ID .)
    TIMES           reduce using rule 10 (term -> type ID .)
    DIVIDE          reduce using rule 10 (term -> type ID .)
    RPAREN          reduce using rule 10 (term -> type ID .)
    OR              reduce using rule 10 (term -> type ID .)
    NOT             reduce using rule 10 (term -> type ID .)
    AND             reduce using rule 10 (term -> type ID .)
    EQUAL           reduce using rule 10 (term -> type ID .)
    NOTEQUAL        reduce using rule 10 (term -> type ID .)
    GREATER         reduce using rule 10 (term -> type ID .)
    LESS            reduce using rule 10 (term -> type ID .)
    GREATEREQUAL    reduce using rule 10 (term -> type ID .)
    LESSEQUAL       reduce using rule 10 (term -> type ID .)


state 52

    (4) expression -> expression PLUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 4 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 4 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 4 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 4 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression PLUS expression .)
    OR              reduce using rule 4 (expression -> expression PLUS expression .)
    NOT             reduce using rule 4 (expression -> expression PLUS expression .)
    AND             reduce using rule 4 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 4 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 4 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 4 (expression -> expression PLUS expression .)
    LESS            reduce using rule 4 (expression -> expression PLUS expression .)
    GREATEREQUAL    reduce using rule 4 (expression -> expression PLUS expression .)
    LESSEQUAL       reduce using rule 4 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37

  ! TIMES           [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 53

    (5) expression -> expression MINUS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 5 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 5 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 5 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 5 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 5 (expression -> expression MINUS expression .)
    OR              reduce using rule 5 (expression -> expression MINUS expression .)
    NOT             reduce using rule 5 (expression -> expression MINUS expression .)
    AND             reduce using rule 5 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 5 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 5 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 5 (expression -> expression MINUS expression .)
    LESS            reduce using rule 5 (expression -> expression MINUS expression .)
    GREATEREQUAL    reduce using rule 5 (expression -> expression MINUS expression .)
    LESSEQUAL       reduce using rule 5 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37

  ! TIMES           [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 54

    (6) expression -> expression TIMES expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 6 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 6 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 6 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 6 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 6 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 6 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 6 (expression -> expression TIMES expression .)
    OR              reduce using rule 6 (expression -> expression TIMES expression .)
    NOT             reduce using rule 6 (expression -> expression TIMES expression .)
    AND             reduce using rule 6 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 6 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 6 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 6 (expression -> expression TIMES expression .)
    LESS            reduce using rule 6 (expression -> expression TIMES expression .)
    GREATEREQUAL    reduce using rule 6 (expression -> expression TIMES expression .)
    LESSEQUAL       reduce using rule 6 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! TIMES           [ shift and go to state 36 ]
  ! DIVIDE          [ shift and go to state 37 ]


state 55

    (7) expression -> expression DIVIDE expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RBRAKETS        reduce using rule 7 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 7 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 7 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 7 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 7 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 7 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 7 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 7 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 7 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 7 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 7 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 7 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 7 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 7 (expression -> expression DIVIDE expression .)
    GREATEREQUAL    reduce using rule 7 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 7 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! TIMES           [ shift and go to state 36 ]
  ! DIVIDE          [ shift and go to state 37 ]


state 56

    (47) elseif -> elseif elseif .
    (47) elseif -> elseif . elseif
    (48) elseif -> elseif . else
    (46) elseif -> . ELSEIF LPAREN condition RPAREN scope
    (47) elseif -> . elseif elseif
    (48) elseif -> . elseif else
    (49) else -> . ELSE scope

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    RBRAKETS        reduce using rule 47 (elseif -> elseif elseif .)
    ELSEIF          shift and go to state 40
    ELSE            shift and go to state 20

  ! ELSEIF          [ reduce using rule 47 (elseif -> elseif elseif .) ]
  ! ELSE            [ reduce using rule 47 (elseif -> elseif elseif .) ]

    elseif                         shift and go to state 56
    else                           shift and go to state 57

state 57

    (48) elseif -> elseif else .

    ELSEIF          reduce using rule 48 (elseif -> elseif else .)
    ELSE            reduce using rule 48 (elseif -> elseif else .)
    RBRAKETS        reduce using rule 48 (elseif -> elseif else .)


state 58

    (46) elseif -> ELSEIF LPAREN . condition RPAREN scope
    (21) condition -> . expression OR expression
    (22) condition -> . expression NOT expression
    (23) condition -> . expression AND expression
    (24) condition -> . expression EQUAL expression
    (25) condition -> . condition OR condition
    (26) condition -> . condition NOT condition
    (27) condition -> . condition AND condition
    (28) condition -> . expression NOTEQUAL expression
    (29) condition -> . expression GREATER expression
    (30) condition -> . expression LESS expression
    (31) condition -> . expression GREATEREQUAL expression
    (32) condition -> . expression LESSEQUAL expression
    (33) condition -> . LPAREN condition RPAREN
    (34) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 64
    NOT             shift and go to state 67
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    condition                      shift and go to state 76
    expression                     shift and go to state 66
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 59

    (8) expression -> LPAREN expression RPAREN .
    (53) factor -> LPAREN expression RPAREN .

  ! reduce/reduce conflict for RBRAKETS resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for PLUS resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for MINUS resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for TIMES resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for OR resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for NOT resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for AND resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for EQUAL resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for GREATER resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for LESS resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 8 (expression -> LPAREN expression RPAREN .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 8 (expression -> LPAREN expression RPAREN .)
    RBRAKETS        reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    ADRESS          reduce using rule 53 (factor -> LPAREN expression RPAREN .)

  ! RBRAKETS        [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! SEMICOLON       [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! PLUS            [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! MINUS           [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! TIMES           [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! DIVIDE          [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! RPAREN          [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! OR              [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! NOT             [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! AND             [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! EQUAL           [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! NOTEQUAL        [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! GREATER         [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! LESS            [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! GREATEREQUAL    [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]
  ! LESSEQUAL       [ reduce using rule 53 (factor -> LPAREN expression RPAREN .) ]


state 60

    (18) adress -> term ADRESS term . SEMICOLON
    (9) expression -> term .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 77
    PLUS            reduce using rule 9 (expression -> term .)
    MINUS           reduce using rule 9 (expression -> term .)
    TIMES           reduce using rule 9 (expression -> term .)
    DIVIDE          reduce using rule 9 (expression -> term .)

  ! SEMICOLON       [ reduce using rule 9 (expression -> term .) ]


state 61

    (17) adress -> term ADRESS expression . SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 78
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 62

    (19) adress -> term ADRESS NUMBER . SEMICOLON
    (52) factor -> NUMBER .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 79
    PLUS            reduce using rule 52 (factor -> NUMBER .)
    MINUS           reduce using rule 52 (factor -> NUMBER .)
    TIMES           reduce using rule 52 (factor -> NUMBER .)
    DIVIDE          reduce using rule 52 (factor -> NUMBER .)

  ! SEMICOLON       [ reduce using rule 52 (factor -> NUMBER .) ]


state 63

    (20) adress -> term ADRESS LITSTRING . SEMICOLON

    SEMICOLON       shift and go to state 80


state 64

    (33) condition -> LPAREN . condition RPAREN
    (8) expression -> LPAREN . expression RPAREN
    (53) factor -> LPAREN . expression RPAREN
    (21) condition -> . expression OR expression
    (22) condition -> . expression NOT expression
    (23) condition -> . expression AND expression
    (24) condition -> . expression EQUAL expression
    (25) condition -> . condition OR condition
    (26) condition -> . condition NOT condition
    (27) condition -> . condition AND condition
    (28) condition -> . expression NOTEQUAL expression
    (29) condition -> . expression GREATER expression
    (30) condition -> . expression LESS expression
    (31) condition -> . expression GREATEREQUAL expression
    (32) condition -> . expression LESSEQUAL expression
    (33) condition -> . LPAREN condition RPAREN
    (34) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 64
    NOT             shift and go to state 67
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    condition                      shift and go to state 81
    expression                     shift and go to state 82
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 65

    (43) if -> IF LPAREN condition . RPAREN scope
    (25) condition -> condition . OR condition
    (26) condition -> condition . NOT condition
    (27) condition -> condition . AND condition

    RPAREN          shift and go to state 83
    OR              shift and go to state 84
    NOT             shift and go to state 85
    AND             shift and go to state 86


state 66

    (21) condition -> expression . OR expression
    (22) condition -> expression . NOT expression
    (23) condition -> expression . AND expression
    (24) condition -> expression . EQUAL expression
    (28) condition -> expression . NOTEQUAL expression
    (29) condition -> expression . GREATER expression
    (30) condition -> expression . LESS expression
    (31) condition -> expression . GREATEREQUAL expression
    (32) condition -> expression . LESSEQUAL expression
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    OR              shift and go to state 87
    NOT             shift and go to state 88
    AND             shift and go to state 89
    EQUAL           shift and go to state 90
    NOTEQUAL        shift and go to state 91
    GREATER         shift and go to state 92
    LESS            shift and go to state 93
    GREATEREQUAL    shift and go to state 94
    LESSEQUAL       shift and go to state 95
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 67

    (34) condition -> NOT . condition
    (21) condition -> . expression OR expression
    (22) condition -> . expression NOT expression
    (23) condition -> . expression AND expression
    (24) condition -> . expression EQUAL expression
    (25) condition -> . condition OR condition
    (26) condition -> . condition NOT condition
    (27) condition -> . condition AND condition
    (28) condition -> . expression NOTEQUAL expression
    (29) condition -> . expression GREATER expression
    (30) condition -> . expression LESS expression
    (31) condition -> . expression GREATEREQUAL expression
    (32) condition -> . expression LESSEQUAL expression
    (33) condition -> . LPAREN condition RPAREN
    (34) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 64
    NOT             shift and go to state 67
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    condition                      shift and go to state 96
    expression                     shift and go to state 66
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 68

    (53) factor -> LPAREN . expression RPAREN
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 97
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 69

    (54) for -> FOR LPAREN for_initilizer . SEMICOLON condition SEMICOLON expression RPAREN scope

    SEMICOLON       shift and go to state 98


state 70

    (55) for_initilizer -> adress .

    SEMICOLON       reduce using rule 55 (for_initilizer -> adress .)


state 71

    (17) adress -> term . ADRESS expression SEMICOLON
    (18) adress -> term . ADRESS term SEMICOLON
    (19) adress -> term . ADRESS NUMBER SEMICOLON
    (20) adress -> term . ADRESS LITSTRING SEMICOLON

    ADRESS          shift and go to state 43


state 72

    (56) while -> WHILE LPAREN condition . RPAREN scope
    (25) condition -> condition . OR condition
    (26) condition -> condition . NOT condition
    (27) condition -> condition . AND condition

    RPAREN          shift and go to state 99
    OR              shift and go to state 84
    NOT             shift and go to state 85
    AND             shift and go to state 86


state 73

    (50) print -> PRINT LPAREN LITSTRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 100


state 74

    (51) print -> PRINT LPAREN expression . RPAREN SEMICOLON
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 101
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 75

    (15) return -> RETURN expression SEMICOLON .

    RBRAKETS        reduce using rule 15 (return -> RETURN expression SEMICOLON .)


state 76

    (46) elseif -> ELSEIF LPAREN condition . RPAREN scope
    (25) condition -> condition . OR condition
    (26) condition -> condition . NOT condition
    (27) condition -> condition . AND condition

    RPAREN          shift and go to state 102
    OR              shift and go to state 84
    NOT             shift and go to state 85
    AND             shift and go to state 86


state 77

    (18) adress -> term ADRESS term SEMICOLON .

    RBRAKETS        reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)
    SEMICOLON       reduce using rule 18 (adress -> term ADRESS term SEMICOLON .)


state 78

    (17) adress -> term ADRESS expression SEMICOLON .

    RBRAKETS        reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)
    SEMICOLON       reduce using rule 17 (adress -> term ADRESS expression SEMICOLON .)


state 79

    (19) adress -> term ADRESS NUMBER SEMICOLON .

    RBRAKETS        reduce using rule 19 (adress -> term ADRESS NUMBER SEMICOLON .)
    SEMICOLON       reduce using rule 19 (adress -> term ADRESS NUMBER SEMICOLON .)


state 80

    (20) adress -> term ADRESS LITSTRING SEMICOLON .

    RBRAKETS        reduce using rule 20 (adress -> term ADRESS LITSTRING SEMICOLON .)
    SEMICOLON       reduce using rule 20 (adress -> term ADRESS LITSTRING SEMICOLON .)


state 81

    (33) condition -> LPAREN condition . RPAREN
    (25) condition -> condition . OR condition
    (26) condition -> condition . NOT condition
    (27) condition -> condition . AND condition

    RPAREN          shift and go to state 103
    OR              shift and go to state 84
    NOT             shift and go to state 85
    AND             shift and go to state 86


state 82

    (8) expression -> LPAREN expression . RPAREN
    (53) factor -> LPAREN expression . RPAREN
    (21) condition -> expression . OR expression
    (22) condition -> expression . NOT expression
    (23) condition -> expression . AND expression
    (24) condition -> expression . EQUAL expression
    (28) condition -> expression . NOTEQUAL expression
    (29) condition -> expression . GREATER expression
    (30) condition -> expression . LESS expression
    (31) condition -> expression . GREATEREQUAL expression
    (32) condition -> expression . LESSEQUAL expression
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 59
    OR              shift and go to state 87
    NOT             shift and go to state 88
    AND             shift and go to state 89
    EQUAL           shift and go to state 90
    NOTEQUAL        shift and go to state 91
    GREATER         shift and go to state 92
    LESS            shift and go to state 93
    GREATEREQUAL    shift and go to state 94
    LESSEQUAL       shift and go to state 95
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 83

    (43) if -> IF LPAREN condition RPAREN . scope
    (2) scope -> . LBRAKETS statement RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 104

state 84

    (25) condition -> condition OR . condition
    (21) condition -> . expression OR expression
    (22) condition -> . expression NOT expression
    (23) condition -> . expression AND expression
    (24) condition -> . expression EQUAL expression
    (25) condition -> . condition OR condition
    (26) condition -> . condition NOT condition
    (27) condition -> . condition AND condition
    (28) condition -> . expression NOTEQUAL expression
    (29) condition -> . expression GREATER expression
    (30) condition -> . expression LESS expression
    (31) condition -> . expression GREATEREQUAL expression
    (32) condition -> . expression LESSEQUAL expression
    (33) condition -> . LPAREN condition RPAREN
    (34) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 64
    NOT             shift and go to state 67
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    condition                      shift and go to state 105
    expression                     shift and go to state 66
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 85

    (26) condition -> condition NOT . condition
    (21) condition -> . expression OR expression
    (22) condition -> . expression NOT expression
    (23) condition -> . expression AND expression
    (24) condition -> . expression EQUAL expression
    (25) condition -> . condition OR condition
    (26) condition -> . condition NOT condition
    (27) condition -> . condition AND condition
    (28) condition -> . expression NOTEQUAL expression
    (29) condition -> . expression GREATER expression
    (30) condition -> . expression LESS expression
    (31) condition -> . expression GREATEREQUAL expression
    (32) condition -> . expression LESSEQUAL expression
    (33) condition -> . LPAREN condition RPAREN
    (34) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 64
    NOT             shift and go to state 67
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    condition                      shift and go to state 106
    expression                     shift and go to state 66
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 86

    (27) condition -> condition AND . condition
    (21) condition -> . expression OR expression
    (22) condition -> . expression NOT expression
    (23) condition -> . expression AND expression
    (24) condition -> . expression EQUAL expression
    (25) condition -> . condition OR condition
    (26) condition -> . condition NOT condition
    (27) condition -> . condition AND condition
    (28) condition -> . expression NOTEQUAL expression
    (29) condition -> . expression GREATER expression
    (30) condition -> . expression LESS expression
    (31) condition -> . expression GREATEREQUAL expression
    (32) condition -> . expression LESSEQUAL expression
    (33) condition -> . LPAREN condition RPAREN
    (34) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 64
    NOT             shift and go to state 67
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    condition                      shift and go to state 107
    expression                     shift and go to state 66
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 87

    (21) condition -> expression OR . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 108
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 88

    (22) condition -> expression NOT . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 109
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 89

    (23) condition -> expression AND . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 110
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 90

    (24) condition -> expression EQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 111
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 91

    (28) condition -> expression NOTEQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 112
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 92

    (29) condition -> expression GREATER . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 113
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 93

    (30) condition -> expression LESS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 114
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 94

    (31) condition -> expression GREATEREQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 115
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 95

    (32) condition -> expression LESSEQUAL . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 116
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 96

    (34) condition -> NOT condition .
    (25) condition -> condition . OR condition
    (26) condition -> condition . NOT condition
    (27) condition -> condition . AND condition

    RPAREN          reduce using rule 34 (condition -> NOT condition .)
    OR              reduce using rule 34 (condition -> NOT condition .)
    NOT             reduce using rule 34 (condition -> NOT condition .)
    AND             reduce using rule 34 (condition -> NOT condition .)
    SEMICOLON       reduce using rule 34 (condition -> NOT condition .)

  ! OR              [ shift and go to state 84 ]
  ! NOT             [ shift and go to state 85 ]
  ! AND             [ shift and go to state 86 ]


state 97

    (53) factor -> LPAREN expression . RPAREN
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 117
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 98

    (54) for -> FOR LPAREN for_initilizer SEMICOLON . condition SEMICOLON expression RPAREN scope
    (21) condition -> . expression OR expression
    (22) condition -> . expression NOT expression
    (23) condition -> . expression AND expression
    (24) condition -> . expression EQUAL expression
    (25) condition -> . condition OR condition
    (26) condition -> . condition NOT condition
    (27) condition -> . condition AND condition
    (28) condition -> . expression NOTEQUAL expression
    (29) condition -> . expression GREATER expression
    (30) condition -> . expression LESS expression
    (31) condition -> . expression GREATEREQUAL expression
    (32) condition -> . expression LESSEQUAL expression
    (33) condition -> . LPAREN condition RPAREN
    (34) condition -> . NOT condition
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 64
    NOT             shift and go to state 67
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    condition                      shift and go to state 118
    expression                     shift and go to state 66
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 99

    (56) while -> WHILE LPAREN condition RPAREN . scope
    (2) scope -> . LBRAKETS statement RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 119

state 100

    (50) print -> PRINT LPAREN LITSTRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 120


state 101

    (51) print -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 121


state 102

    (46) elseif -> ELSEIF LPAREN condition RPAREN . scope
    (2) scope -> . LBRAKETS statement RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 122

state 103

    (33) condition -> LPAREN condition RPAREN .

    RPAREN          reduce using rule 33 (condition -> LPAREN condition RPAREN .)
    OR              reduce using rule 33 (condition -> LPAREN condition RPAREN .)
    NOT             reduce using rule 33 (condition -> LPAREN condition RPAREN .)
    AND             reduce using rule 33 (condition -> LPAREN condition RPAREN .)
    SEMICOLON       reduce using rule 33 (condition -> LPAREN condition RPAREN .)


state 104

    (43) if -> IF LPAREN condition RPAREN scope .

    ELSEIF          reduce using rule 43 (if -> IF LPAREN condition RPAREN scope .)
    ELSE            reduce using rule 43 (if -> IF LPAREN condition RPAREN scope .)
    RBRAKETS        reduce using rule 43 (if -> IF LPAREN condition RPAREN scope .)


state 105

    (25) condition -> condition OR condition .
    (25) condition -> condition . OR condition
    (26) condition -> condition . NOT condition
    (27) condition -> condition . AND condition

    RPAREN          reduce using rule 25 (condition -> condition OR condition .)
    OR              reduce using rule 25 (condition -> condition OR condition .)
    SEMICOLON       reduce using rule 25 (condition -> condition OR condition .)
    NOT             shift and go to state 85
    AND             shift and go to state 86

  ! NOT             [ reduce using rule 25 (condition -> condition OR condition .) ]
  ! AND             [ reduce using rule 25 (condition -> condition OR condition .) ]
  ! OR              [ shift and go to state 84 ]


state 106

    (26) condition -> condition NOT condition .
    (25) condition -> condition . OR condition
    (26) condition -> condition . NOT condition
    (27) condition -> condition . AND condition

    RPAREN          reduce using rule 26 (condition -> condition NOT condition .)
    OR              reduce using rule 26 (condition -> condition NOT condition .)
    NOT             reduce using rule 26 (condition -> condition NOT condition .)
    AND             reduce using rule 26 (condition -> condition NOT condition .)
    SEMICOLON       reduce using rule 26 (condition -> condition NOT condition .)

  ! OR              [ shift and go to state 84 ]
  ! NOT             [ shift and go to state 85 ]
  ! AND             [ shift and go to state 86 ]


state 107

    (27) condition -> condition AND condition .
    (25) condition -> condition . OR condition
    (26) condition -> condition . NOT condition
    (27) condition -> condition . AND condition

    RPAREN          reduce using rule 27 (condition -> condition AND condition .)
    OR              reduce using rule 27 (condition -> condition AND condition .)
    AND             reduce using rule 27 (condition -> condition AND condition .)
    SEMICOLON       reduce using rule 27 (condition -> condition AND condition .)
    NOT             shift and go to state 85

  ! NOT             [ reduce using rule 27 (condition -> condition AND condition .) ]
  ! OR              [ shift and go to state 84 ]
  ! AND             [ shift and go to state 86 ]


state 108

    (21) condition -> expression OR expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 21 (condition -> expression OR expression .)
    OR              reduce using rule 21 (condition -> expression OR expression .)
    NOT             reduce using rule 21 (condition -> expression OR expression .)
    AND             reduce using rule 21 (condition -> expression OR expression .)
    SEMICOLON       reduce using rule 21 (condition -> expression OR expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 109

    (22) condition -> expression NOT expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 22 (condition -> expression NOT expression .)
    OR              reduce using rule 22 (condition -> expression NOT expression .)
    NOT             reduce using rule 22 (condition -> expression NOT expression .)
    AND             reduce using rule 22 (condition -> expression NOT expression .)
    SEMICOLON       reduce using rule 22 (condition -> expression NOT expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 110

    (23) condition -> expression AND expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 23 (condition -> expression AND expression .)
    OR              reduce using rule 23 (condition -> expression AND expression .)
    NOT             reduce using rule 23 (condition -> expression AND expression .)
    AND             reduce using rule 23 (condition -> expression AND expression .)
    SEMICOLON       reduce using rule 23 (condition -> expression AND expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 111

    (24) condition -> expression EQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 24 (condition -> expression EQUAL expression .)
    OR              reduce using rule 24 (condition -> expression EQUAL expression .)
    NOT             reduce using rule 24 (condition -> expression EQUAL expression .)
    AND             reduce using rule 24 (condition -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 24 (condition -> expression EQUAL expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 112

    (28) condition -> expression NOTEQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 28 (condition -> expression NOTEQUAL expression .)
    OR              reduce using rule 28 (condition -> expression NOTEQUAL expression .)
    NOT             reduce using rule 28 (condition -> expression NOTEQUAL expression .)
    AND             reduce using rule 28 (condition -> expression NOTEQUAL expression .)
    SEMICOLON       reduce using rule 28 (condition -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 113

    (29) condition -> expression GREATER expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 29 (condition -> expression GREATER expression .)
    OR              reduce using rule 29 (condition -> expression GREATER expression .)
    NOT             reduce using rule 29 (condition -> expression GREATER expression .)
    AND             reduce using rule 29 (condition -> expression GREATER expression .)
    SEMICOLON       reduce using rule 29 (condition -> expression GREATER expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 114

    (30) condition -> expression LESS expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 30 (condition -> expression LESS expression .)
    OR              reduce using rule 30 (condition -> expression LESS expression .)
    NOT             reduce using rule 30 (condition -> expression LESS expression .)
    AND             reduce using rule 30 (condition -> expression LESS expression .)
    SEMICOLON       reduce using rule 30 (condition -> expression LESS expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 115

    (31) condition -> expression GREATEREQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 31 (condition -> expression GREATEREQUAL expression .)
    OR              reduce using rule 31 (condition -> expression GREATEREQUAL expression .)
    NOT             reduce using rule 31 (condition -> expression GREATEREQUAL expression .)
    AND             reduce using rule 31 (condition -> expression GREATEREQUAL expression .)
    SEMICOLON       reduce using rule 31 (condition -> expression GREATEREQUAL expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 116

    (32) condition -> expression LESSEQUAL expression .
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 32 (condition -> expression LESSEQUAL expression .)
    OR              reduce using rule 32 (condition -> expression LESSEQUAL expression .)
    NOT             reduce using rule 32 (condition -> expression LESSEQUAL expression .)
    AND             reduce using rule 32 (condition -> expression LESSEQUAL expression .)
    SEMICOLON       reduce using rule 32 (condition -> expression LESSEQUAL expression .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 117

    (53) factor -> LPAREN expression RPAREN .

    ADRESS          reduce using rule 53 (factor -> LPAREN expression RPAREN .)


state 118

    (54) for -> FOR LPAREN for_initilizer SEMICOLON condition . SEMICOLON expression RPAREN scope
    (25) condition -> condition . OR condition
    (26) condition -> condition . NOT condition
    (27) condition -> condition . AND condition

    SEMICOLON       shift and go to state 123
    OR              shift and go to state 84
    NOT             shift and go to state 85
    AND             shift and go to state 86


state 119

    (56) while -> WHILE LPAREN condition RPAREN scope .

    RBRAKETS        reduce using rule 56 (while -> WHILE LPAREN condition RPAREN scope .)


state 120

    (50) print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 50 (print -> PRINT LPAREN LITSTRING RPAREN SEMICOLON .)


state 121

    (51) print -> PRINT LPAREN expression RPAREN SEMICOLON .

    RBRAKETS        reduce using rule 51 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 122

    (46) elseif -> ELSEIF LPAREN condition RPAREN scope .

    ELSEIF          reduce using rule 46 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    ELSE            reduce using rule 46 (elseif -> ELSEIF LPAREN condition RPAREN scope .)
    RBRAKETS        reduce using rule 46 (elseif -> ELSEIF LPAREN condition RPAREN scope .)


state 123

    (54) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON . expression RPAREN scope
    (4) expression -> . expression PLUS expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression TIMES expression
    (7) expression -> . expression DIVIDE expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . term
    (10) term -> . type ID
    (11) term -> . factor
    (12) type -> . INT
    (13) type -> . FLOAT
    (14) type -> . STRING
    (52) factor -> . NUMBER
    (53) factor -> . LPAREN expression RPAREN

    LPAREN          shift and go to state 17
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    NUMBER          shift and go to state 24

    expression                     shift and go to state 124
    term                           shift and go to state 42
    type                           shift and go to state 26
    factor                         shift and go to state 27

state 124

    (54) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression . RPAREN scope
    (4) expression -> expression . PLUS expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . TIMES expression
    (7) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 125
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    TIMES           shift and go to state 36
    DIVIDE          shift and go to state 37


state 125

    (54) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN . scope
    (2) scope -> . LBRAKETS statement RBRAKETS
    (3) scope -> . LBRAKETS expression RBRAKETS

    LBRAKETS        shift and go to state 7

    scope                          shift and go to state 126

state 126

    (54) for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .

    RBRAKETS        reduce using rule 54 (for -> FOR LPAREN for_initilizer SEMICOLON condition SEMICOLON expression RPAREN scope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSEIF in state 38 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 38 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 56 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 56 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 60 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 62 resolved as shift
WARNING: reduce/reduce conflict in state 59 resolved using rule (expression -> LPAREN expression RPAREN)
WARNING: rejected rule (factor -> LPAREN expression RPAREN) in state 59
